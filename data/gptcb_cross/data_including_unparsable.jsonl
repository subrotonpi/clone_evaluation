{"idx":0,"func":" \n        public void onClick (View v) {\n            row_index = position;\n            notifyDataSetChanged ();\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":1,"func":"def onClick (view):\n    row_index = position\n    notifyDataSetChanged()","lang":"py"}
{"idx":2,"func":" \npublic void actionPerformed (ActionEvent ae) {\n    if (ae.getSource () == select) {\n        activeTool = SELECTION_TOOL;\n    } else if (ae.getSource () == draw) {\n        activeTool = DRAW_TOOL;\n    } else if (ae.getSource () == text) {\n        activeTool = TEXT_TOOL;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":3,"func":"def actionPerformed(ae):\n    if ae.getSource() == select:\n        activeTool = SELECTION_TOOL\n    elif ae.getSource() == draw:\n        activeTool = DRAW_TOOL\n    elif ae.getSource() == text:\n        activeTool = TEXT_TOOL","lang":"py"}
{"idx":4,"func":" \npublic synchronized void run () {\n    int i = 2;\n    while (i < 50) {\n        while (s.getState () != 1) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 1) System.out.println (\"t2 \" + i);\n            s.setState (2);\n            i = i + 3;\n            s.notifyAll ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":5,"func":"def run(s): \n    i = 2\n    while i < 50:\n        while s.getState() != 1: \n            with s lock: \n                try: \n                    s.wait() \n                except InterruptedException as e: \n                    print(e)\n                    \n        with s lock:\n            if s.getState() == 1: \n                print(\"t2\", i) \n            s.setState(2)\n            i = i + 3\n            s.notify_all()","lang":"py"}
{"idx":6,"func":" \nprivate static char findFirstCharacter (String s) {\n    HashSet < Character > unique = new LinkedHashSet < > (), seen = new HashSet < > ();\n    for (int i = 0;\n    i < s.length (); i ++) {\n        char c = s.charAt (i);\n        if (seen.add (c)) unique.add (c);\n        else unique.remove (c);\n    }\n    return unique.isEmpty () ? '_' : unique.iterator ().next ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":7,"func":"def find_first_character(string): \n    unique = set() \n    seen = set() \n    \n    for c in string: \n        if c not in seen: \n            unique.add(c) \n            seen.add(c) \n        else: \n            unique.discard(c)\n            \n    if not unique: \n        return '_'\n    else:\n        return unique.pop()","lang":"py"}
{"idx":8,"func":" \npublic E [] next () {\n    if (! has_next) throw new NoSuchElementException ();\n    for (int i = 0;\n    i < ind.length; i ++) {\n        output [i] = arr [ind [i]];\n    }\n    has_next = false;\n    for (int tail = ind.length - 1;\n    tail > 0; tail --) {\n        if (ind [tail - 1] < ind [tail]) {\n            int s = ind.length - 1;\n            while (ind [tail - 1] >= ind [s]) s --;\n            swap (ind, tail - 1, s);\n            for (int i = tail, j = ind.length - 1;\n            i < j; i ++, j --) {\n                swap (ind, i, j);\n            }\n            has_next = true;\n            break;\n        }\n    }\n    return output;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":9,"func":"def next(self):\n    if not self.has_next:\n        raise StopIteration \n    output = [self.arr[index] for index in self.ind]\n    self.has_next = False\n    for tail in range(len(self.ind) - 1, 0, -1):\n        if self.ind[tail-1] < self.ind[tail):\n            s = len(self.ind)-1\n            while self.ind[tail-1] >= self.ind[s]:\n                s -= 1\n            self.swap(ind, tail-1, s)\n            for i in range(tail, len(self.ind)-1):\n                j = len(self.ind) - 1 - (i - tail)\n                self.swap(ind, i,j)\n            self.has_next = True\n            break\n    return output","lang":"py"}
{"idx":10,"func":" \npublic static void shuffleArray (int [] array) {\n    List < Integer > list = new ArrayList < > ();\n    for (int i : array) {\n        list.add (i);\n    }\n    Collections.shuffle (list);\n    for (int i = 0;\n    i < list.size (); i ++) {\n        array [i] = list.get (i);\n    }\n}\n\n\n\n\n\n\nimport random\n\n","lang":"java"}
{"idx":11,"func":"def shuffle_array(array):\n    list = []\n    for i in array:\n        list.append(i)\n\n    random.shuffle(list)\n\n    for i in range(len(list)):\n        array[i] = list[i]","lang":"py"}
{"idx":12,"func":" \npublic int solution (int [] A) {\n    int [] mark = new int [A.length + 1];\n    int counter = 0;\n    for (int i = 0;\n    i < A.length; ++ i) {\n        int value = A [i];\n        if (value >= mark.length) {\n            return NOT_PERMUTATION;\n        }\n        if (mark [value] == 0) {\n            mark [value] = 1;\n            ++ counter;\n        } else {\n            return NOT_PERMUTATION;\n        }\n    }\n    return counter == A.length ? PERMUTATION : NOT_PERMUTATION;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":13,"func":"def solution(A):\n    mark = [0] * (len(A) + 1)\n    counter = 0\n    for i in range(len(A)):\n        value = A[i]\n        if value >= len(mark):\n            return NOT_PERMUTATION\n        if mark[value] == 0:\n            mark[value] = 1\n            counter += 1\n        else:\n            return NOT_PERMUTATION\n    return PERMUTATION if counter == len(A) else NOT_PERMUTATION","lang":"py"}
{"idx":14,"func":" \npublic void type (CharSequence chars, int ms) {\n    ms = ms > 0 ? ms : 0;\n    for (int i = 0, len = chars.length ();\n    i < len; i ++) {\n        char c = chars.charAt (i);\n        AWTKeyStroke keyStroke = getKeyStroke (c);\n        int keyCode = keyStroke.getKeyCode ();\n        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);\n        if (shift) {\n            robot.keyPress (KeyEvent.VK_SHIFT);\n        }\n        robot.keyPress (keyCode);\n        robot.keyRelease (keyCode);\n        if (shift) {\n            robot.keyRelease (KeyEvent.VK_SHIFT);\n        }\n        if (ms > 0) {\n            robot.delay (ms);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":15,"func":"def type(chars, ms):\n  ms = ms if ms > 0 else 0\n  for i in range(len(chars)):\n    c = chars[i]\n    key_stroke = get_key_stroke(c)\n    key_code = key_stroke.get_key_code()\n    shift = Character.is_upper_case(c) or (key_stroke.get_modifiers() == (SHIFT_DOWN_MASK + 1))\n    \n    if (shift):\n      robot.key_press(KeyEvent.VK_SHIFT)\n\t  \n    robot.key_press(key_code)\n\t\n    robot.key_release(key_code)\n\n    if (shift):\n      robot.key_release(KeyEvent.VK_SHIFT)\n\n    if (ms > 0):\n      robot.delay(ms)","lang":"py"}
{"idx":16,"func":" \npublic int solution (int X, int [] A) {\n    HashSet < Integer > hset = new HashSet < Integer > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":17,"func":"def solution(X, A):\n    hset = set()\n    for i in range(len(A)):\n        if A[i] <= X:\n            hset.add(A[i])\n        if len(hset) == X:\n            return i\n    return -1","lang":"py"}
{"idx":18,"func":" \npublic static String [] tokenizer (String text, String [] delims) {\n    for (String delim : delims) {\n        int i = text.indexOf (delim);\n        if (i >= 0) {\n            String [] tail = tokenizer (text.substring (i + delim.length ()), delims);\n            String [] list = new String [tail.length + 2];\n            list [0] = text.substring (0, i);\n            list [1] = delim;\n            System.arraycopy (tail, 0, list, 2, tail.length);\n            return list;\n        }\n    }\n    return new String [] {text};\n}\n\n\n\n\n\n","lang":"java"}
{"idx":19,"func":"def tokenizer(text, delims):\n    for delim in delims:\n        i = text.find(delim)\n        if i >= 0:\n            tail = tokenizer(text[i+len(delim):], delims)\n            list = [text[:i]] + [delim] + tail\n            return list\n    return [text]","lang":"py"}
{"idx":20,"func":" \npublic void actionPerformed (ActionEvent e) {\n    long duration = System.currentTimeMillis () - startTime;\n    float progress = (float) duration \/ (float) RUN_TIME;\n    linePoint = new Point ();\n    linePoint.x = getWidth () \/ 2;\n    if (progress < 0.5f) {\n        linePoint.y = Math.round (getHeight () * (progress * 2));\n    } else {\n        if (progress > 1f) {\n            progress = 1f;\n            ((Timer) e.getSource ()).stop ();\n            linePoint = null;\n            ballPoint = null;\n        } else {\n            linePoint.y = Math.round (getHeight () * (progress * 2));\n            linePoint.y = getHeight () - (linePoint.y - getHeight ());\n            ballPoint.y = linePoint.y;\n        }\n    }\n    repaint ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":21,"func":"def actionPerformed(e):\n    duration = System.currentTimeMillis() - startTime\n    progress = duration \/ RUN_TIME\n    linePoint = Point()\n    linePoint.x = getWidth() \/ 2\n    if progress < 0.5f:\n        linePoint.y = int(round(getHeight() * (progress *2)))\n    else:\n        if progress > 1f:\n            progress = 1f\n            e.getSource().stop()\n            linePoint = None\n            ballPoint = None\n        else:\n            linePoint.y = int(round(getHeight() * (progress *2)))\n            linePoint.y = getHeight() - (linePoint.y - getHeight())\n            ballPoint.y = linePoint.y\n    repaint()","lang":"py"}
{"idx":22,"func":" \npublic static void main (String...args) {\n    final int MAX_VAL = 10000;\n    List < Integer > linkedList = new LinkedList < Integer > ();\n    List < Integer > arrayList = new ArrayList < Integer > ();\n    for (int i = 0;\n    i < MAX_VAL; i ++) {\n        linkedList.add (i);\n        arrayList.add (i);\n    }\n    long time = System.nanoTime ();\n    for (int i = 0;\n    i < MAX_VAL; i ++) {\n        linkedList.add (MAX_VAL \/ 2, i);\n    }\n    System.out.println (\"LL time:\\t\" + (System.nanoTime () - time));\n    time = System.nanoTime ();\n    for (int i = 0;\n    i < MAX_VAL; i ++) {\n        arrayList.add (MAX_VAL \/ 2, i);\n    }\n    System.out.println (\"AL time:\\t\" + (System.nanoTime () - time));\n    linkedList = new LinkedList < Integer > ();\n    arrayList = new ArrayList < Integer > ();\n    for (int i = 0;\n    i < MAX_VAL; i ++) {\n        linkedList.add (i);\n        arrayList.add (i);\n    }\n    time = System.nanoTime ();\n    ListIterator < Integer > li = linkedList.listIterator (MAX_VAL \/ 2);\n    for (int i = 0;\n    i < MAX_VAL; i ++) {\n        li.add (i);\n    }\n    System.out.println (\"LL iterator:\\t\" + (System.nanoTime () - time));\n    time = System.nanoTime ();\n    ListIterator < Integer > ali = arrayList.listIterator (MAX_VAL \/ 2);\n    for (int i = 0;\n    i < MAX_VAL; i ++) {\n        ali.add (i);\n    }\n    System.out.println (\"AL iterator:\\t\" + (System.nanoTime () - time));\n}","lang":"java"}
{"idx":23,"func":"MAX_VAL = 10000\nlinkedList = []\narrayList = []\n#Initialize each list\nfor i in range(MAX_VAL):\n    linkedList.append(i)\n    arrayList.append(i)\n#LL time\ntime = 0\nstart = time.perf_counter_ns()\nfor i in range(MAX_VAL):\n    linkedList.insert(MAX_VAL\/\/2, i)\nprint(\"LL time:\", (time.perf_counter_ns() - start))\n#AL time\nstart = time.perf_counter_ns()\nfor i in range(MAX_VAL):\n    arrayList.insert(MAX_VAL\/\/2, i)\nprint(\"AL time:\", (time.perf_counter_ns() - start))\n#LL iterator\nstart = time.perf_counter_ns()\nli = linkedList.listIterator(MAX_VAL\/\/2)\nfor i in range(MAX_VAL):\n    li.add(i)\nprint(\"LL iterator:\", (time.perf_counter_ns() - start))\n#AL iterator\nstart = time.perf_counter_ns()\nali = arrayList.listIterator(MAX_VAL\/\/2)\nfor i in range(MAX_VAL):\n    ali.add(i)\nprint(\"AL iterator:\", (time.perf_counter_ns() - start))\n","lang":"py"}
{"idx":24,"func":" \npublic static void throwException (String className) throws CheckedException, UncheckedException {\n    Class < ? > exceptionClass;\n    try {\n        exceptionClass = Class.forName (className);\n    } catch (ClassNotFoundException e) {\n        throw new IllegalArgumentException (e);\n    }\n    try {\n        if (CheckedException.class.isAssignableFrom (exceptionClass)) {\n            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();\n        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {\n            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();\n        } else {\n            throw new IllegalArgumentException (\"Not a valid exception type: \" + exceptionClass.getName ());\n        }\n    } catch (InstantiationException | IllegalAccessException e) {\n        throw new IllegalStateException (e);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":25,"func":"def throwException(className):\n   try:\n      exceptionClass = className.__class__\n   except ClassNotFoundException as e:\n      raise IllegalArgumentException(e)\n   try:\n      if issubclass(exceptionClass,CheckedException):\n         raise exceptionClass.__class__(CheckedException)\n      elif issubclass(exceptionClass, UncheckedException):\n         raise exceptionClass.__class__(UncheckedException)\n      else:\n         raise IllegalArgumentException(\"Not a valid exception type: \"+exceptionClass.name)\n   except InstantiationException | IllegalAccessException as e:\n      raise IllegalStateException(e)","lang":"py"}
{"idx":26,"func":" \npublic static boolean contains (String a, String b) {\n    boolean status = true;\n    Map < String, Integer > mapA = new HashMap < > ();\n    Map < String, Integer > mapB = new HashMap < > ();\n    for (char i : a.toCharArray ()) {\n        Integer val = mapA.get (\"\" + i);\n        if (val != null) {\n            mapA.put (\"\" + i, val + 1);\n        } else {\n            mapA.put (\"\" + i, 1);\n        }\n    }\n    for (char i : b.toCharArray ()) {\n        Integer val = mapB.get (\"\" + i);\n        if (val != null) {\n            mapB.put (\"\" + i, val + 1);\n        } else {\n            mapB.put (\"\" + i, 1);\n        }\n    }\n    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {\n        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {\n            status = false;\n        }\n    }\n    return status;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":27,"func":"def contains(a, b):\n    mapA = dict()\n    mapB = dict()\n    for char in a:\n       val = mapA.get(char)\n       if val == None: \n            mapA[char] = 1\n       else:\n            mapA[char] += 1\n    for char in b:\n       val = mapB.get(char)\n       if val == None: \n            mapB[char] = 1\n       else:\n            mapB[char] += 1\n    for key, val in mapA.items():\n        if mapB.get(key) == None or mapA[key] > mapB[key]:\n            return False\n    return True","lang":"py"}
{"idx":28,"func":" \npublic static boolean deleteDirectory (File directory) {\n    if (directory.exists ()) {\n        File [] files = directory.listFiles ();\n        if (null != files) {\n            for (int i = 0;\n            i < files.length; i ++) {\n                if (files [i].isDirectory ()) {\n                    deleteDirectory (files [i]);\n                } else {\n                    files [i].delete ();\n                }\n            }\n        }\n    }\n    return (directory.delete ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":29,"func":"def delete_directory(directory):\n  if os.path.exists(directory):\n    for file in  os.listdir(directory):\n      sub_dir = os.path.join(directory, file)\n      if os.path.isdir(sub_dir):\n        delete_directory(sub_dir)\n      else:\n        os.remove(sub_dir)\n    os.removedirs(directory)\n  \n  return os.path.exists(directory)","lang":"py"}
{"idx":30,"func":" \n        public void run () {\n            blinkPane.reset ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":31,"func":"def run():\n    blinkPane.reset()","lang":"py"}
{"idx":32,"func":" \npublic void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {\n    jgen.writeStartObject ();\n    Field [] fields = value.getClass ().getDeclaredFields ();\n    for (Field field : fields) {\n        try {\n            jgen.writeObjectField (field.getName (), field.get (value));\n        } catch (IllegalArgumentException | IllegalAccessException e) {\n            e.printStackTrace ();\n        }\n    }\n    jgen.writeObjectField (\"extra_field\", \"whatever_value\");\n    jgen.writeEndObject ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":33,"func":"def serialize(value, jgen, provider):\n    jgen.writeStartObject()\n    fields = value.__class__.__dict__\n    for field in fields:\n        jgen.writeObjectField(field, fields[field])\n    jgen.writeObjectField(\"extra_field\", \"whatever_value\")\n    jgen.writeEndObject()","lang":"py"}
{"idx":34,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":35,"func":"def getName(value):\n    buffer = []\n    high = ''\n    low = ''\n    \n    if len(value) < getPartDivider():\n        high = ''\n        low = value\n    else:\n        index = len(value) - getPartDivider()\n        high = value[:index] \n        low = value[index:]\n\n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n\n    if highName != '':\n        buffer.append(highName)\n        buffer.append(SEPARATOR)\n        buffer.append(getToken())\n        if lowName != '': \n            buffer.append(SEPARATOR)\n\n    if lowName!= '':\n        buffer.append(lowName)\n    \n    return ''.join(buffer)","lang":"py"}
{"idx":36,"func":" \npublic static void main (String [] args) {\n    BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();\n    ls.insert (1);\n    ls.insert (2);\n    ls.insert (3);\n    ls.insert (4);\n    ls.insert (5);\n    ls.insert (6);\n    ls.insert (7);\n    ls.inOrderPrint ();\n}","lang":"java"}
{"idx":37,"func":"","lang":"py"}
{"idx":38,"func":" \npublic void type (String text) {\n    char c;\n    for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":39,"func":"def type(text):\n    c = \"\"\n    for ii in range(len(text)):\n        c = text[ii]\n        if c <= 31 or c == 129:\n            pressControlKey(c)\n        else:\n            typeAsciiCode(c)","lang":"py"}
{"idx":40,"func":" \npublic void start (Stage primaryStage) {\n    Text waitingForKey = new Text (\"Level 2 \\n\\n\" + \"Press ENTER to start a new game\");\n    waitingForKey.setTextAlignment (TextAlignment.CENTER);\n    waitingForKey.setFont (new Font (18));\n    waitingForKey.setFill (Color.ALICEBLUE);\n    StackPane root = new StackPane ();\n    root.getChildren ().add (waitingForKey);\n    Scene scene = new Scene (root, 320, 240, Color.BLACK);\n    primaryStage.setTitle (\"Test\");\n    primaryStage.setScene (scene);\n    primaryStage.show ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":41,"func":"def start(primaryStage):\n    waiting_for_key = Text(\"Level 2 \\n\\n\" + \"Press ENTER to start a new game\")\n    waiting_for_key.setTextAlignment(TextAlignment.CENTER)\n    waiting_for_key.setFont(Font(18))\n    waiting_for_key.setFill(Color.ALICEBLUE)\n    root = StackPane()\n    root.getChildren().add(waiting_for_key)\n    s = Scene(root, 320, 240, Color.BLACK)\n    primaryStage.setTitle(\"Test\")\n    primaryStage.setScene(s)\n    primaryStage.show()","lang":"py"}
{"idx":42,"func":" \npublic void actionPerformed (ActionEvent e) {\n    long start = System.currentTimeMillis ();\n    frame.remove (panel);\n    long end = System.currentTimeMillis ();\n    JPanel newPanel = new JPanel ();\n    newPanel.setBackground (Color.BLUE);\n    frame.add (newPanel);\n    frame.validate ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":43,"func":"def action_performed(e):\n    start = time.time()\n    frame.remove(panel)\n    end = time.time()\n    new_panel = tk.Label(master, bg='blue')\n    frame.add(new_panel)\n    frame.validate()","lang":"py"}
{"idx":44,"func":" \npublic static String join (String r [], String d) {\n    if (r.length == 0) return \"\";\n    StringBuilder sb = new StringBuilder ();\n    int i;\n    for (i = 0; i < r.length - 1; i ++) {\n        sb.append (r [i]);\n        sb.append (d);\n    }\n    sb.append (r [i]);\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":45,"func":"def join(input_list, delimiter): \n    final_string = \"\" \n    for i in range(len(input_list)-1): \n        final_string += input_list[i] + delimiter \n    final_string += input_list[-1] \n    return final_string","lang":"py"}
{"idx":46,"func":" \n                public void windowActivated (WindowEvent e) {\n                    a.setAlwaysOnTop (true);\n                }}\n            );\n        }}\n    );\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":47,"func":"def windowActivated ( self, e ):\n    a.setAlwaysOnTop ( True )","lang":"py"}
{"idx":48,"func":" \npublic void actionPerformed (ActionEvent ae) {\n    if (count < charsTiming.size ()) {\n        highlightNextWord ();\n        ((Timer) ae.getSource ()).setInitialDelay (charsTiming.get (count));\n        ((Timer) ae.getSource ()).restart ();\n    } else {\n        reset ();\n        ((Timer) ae.getSource ()).stop ();\n    }\n    count ++;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":49,"func":"def actionPerformed (ae):\nif count < len(charsTiming):\n    highlightNextWord ()\n    ae.getSource().setInitialDelay(charsTiming[count])\n    ae.getSource().restart ()\nelse:\n    reset()","lang":"py"}
{"idx":50,"func":" \npublic void makeGrid (int size) {\n    this.lines = size;\n    grid = new Cell [size] [size];\n    for (int i = 0;\n    i < size; i ++) {\n        for (int j = 0;\n        j < size; j ++) {\n            grid [i] [j] = new Cell ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":51,"func":"def make_grid(size):\n      lines = size\n      grid = [[Cell() for _ in range(size)] for _ in range(size)]","lang":"py"}
{"idx":52,"func":" \npublic static void main (String args []) {\n    Scanner sc = new Scanner (System.in);\n    ArrayList < Integer > l = new ArrayList < Integer > (10);\n    for (int i = 0;\n    i < 10; i ++) l.add (sc.nextInt ());\n    Collections.shuffle (l);\n    for (int j = 0;\n    j < 10; j ++) System.out.println (l.get (j));\n}","lang":"java"}
{"idx":53,"func":"import random\nl = []\nfor i in range(10):\n    l.append(int(input()))\nrandom.shuffle(l)\nfor j in range(10):\n    print(l[j])\n","lang":"py"}
{"idx":54,"func":" \npublic static byte [] readBytes (InputStream inputStream) throws IOException {\n    byte [] buffer = new byte [32 * 1024];\n    int bufferSize = 0;\n    for (;;) {\n        int read = inputStream.read (buffer, bufferSize, buffer.length - bufferSize);\n        if (read == - 1) {\n            return Arrays.copyOf (buffer, bufferSize);\n        }\n        bufferSize += read;\n        if (bufferSize == buffer.length) {\n            buffer = Arrays.copyOf (buffer, bufferSize * 2);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":55,"func":"def read_bytes(input_stream):\n    buffer = bytearray(32 * 1024)\n    buffer_size = 0\n    while True:\n        read = input_stream.readinto(buffer[buffer_size:])\n        if read == -1:\n            return bytes(buffer[:buffer_size])\n        buffer_size += read\n        if buffer_size == len(buffer):\n            buffer = bytearray(buffer_size * 2)","lang":"py"}
{"idx":56,"func":" \npublic static int [] removeDuplicates (int [] arr) {\n    int end = arr.length;\n    for (int i = 0;\n    i < end; i ++) {\n        for (int j = i + 1;\n        j < end; j ++) {\n            if (arr [i] == arr [j]) {\n                arr [j] = arr [end - 1];\n                end --;\n                j --;\n            }\n        }\n    }\n    int [] whitelist = new int [end];\n    System.arraycopy (arr, 0, whitelist, 0, end);\n    return whitelist;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":57,"func":"def remove_duplicates (arr):\n    end = len(arr)\n    for i in range(0, end):\n        for j in range(i + 1, end):\n            if arr[i] == arr[j]:\n                arr[j] = arr[end - 1]\n                end -= 1\n                j -= 1\n    whitelist = [0] * end\n    whitelist = arr[0:end]\n    return whitelist","lang":"py"}
{"idx":58,"func":" \npublic K remove () {\n    if (head == null) return null;\n    K val = head.value;\n    if (head.next == null) {\n        head = null;\n        tail = null;\n    } else {\n        head = head.next;\n        head.prev = null;\n    }\n    return val;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":59,"func":"def remove(): \n    if not head: \n        return None\n    val = head.value\n    if head.next is None: \n        head = None\n        tail = None\n    else: \n        head = head.next\n        head.prev = None\n    return val","lang":"py"}
{"idx":60,"func":" \npublic void itemStateChanged (ItemEvent e) {\n    size = Integer.parseInt ((String) box.getSelectedItem ());\n    if (e.getStateChange () == ItemEvent.SELECTED) {\n        for (i = 1; i <= size; i ++) {\n            System.out.print (\" \" + i);\n        }\n        System.out.println ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":61,"func":"def itemStateChanged(e):\n size = int(box.getSelectedItem())\n if e.getStateChange() == ItemEvent.SELECTED:\n  for i in range(1, size+1):\n   print(i, end=\" \")\n  print()","lang":"py"}
{"idx":62,"func":" \npublic static void main (String args []) {\n    int i;\n    int large [] = new int [5];\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};\n    int max = 0, index;\n    for (int j = 0;\n    j < 5; j ++) {\n        max = array [0];\n        index = 0;\n        for (i = 1; i < array.length; i ++) {\n            if (max < array [i]) {\n                max = array [i];\n                index = i;\n            }\n        }\n        large [j] = max;\n        array [index] = Integer.MIN_VALUE;\n        System.out.println (\"Largest \" + j + \" : \" + large [j]);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":63,"func":"def main (args): \n    large = [None]*5\n    array = [33, 55, 13, 46, 87, 42, 10, 34, 43, 56]\n    max = 0\n    index = 0\n    for j in range(5):\n        max = array[0]\n        index = 0\n        for i in range(1,len(array)):\n            if max < array[i]:\n                max = array[i]\n                index = i\n        large[j] = max\n        array[index] = float('-inf')\n        print(\"Largest \"+str(j)+\" : \"+str(large[j]))","lang":"py"}
{"idx":64,"func":" \npublic static void main (String [] args) {\n    int len = args.length;\n    if (len <= 0) {\n        System.out.println (\" ERROR: Please input a value of 1-5\");\n        System.exit (0);\n    }\n    int j;\n    for (int i = 0;\n    i <= len; i ++) {\n        for (j = 0; j <= i; j ++) System.out.print (\"*\");\n        System.out.println (\"\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":65,"func":"def main(): \n  args = input(\"Please input a value of 1-5: \")\n  length_input = len(args)\n  if length_input <= 0: \n    print(\"ERROR: Please input a value of 1-5\")\n  for i in range(length_input): \n    for j in range(i): \n      print(\"*\", end=\"\")\n    print()\n \nif __name__==\"__main__\":\n  main()","lang":"py"}
{"idx":66,"func":" \npublic void run () {\n    System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" starting\");\n    synchronized (BadRunnable.class) {\n        System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" acquired the monitor on BadRunnable.class\");\n        latch.countDown ();\n        while (true) {\n            try {\n                latch.await ();\n            } catch (InterruptedException ex) {\n                continue;\n            }\n            break;\n        }\n    }\n    System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" released the monitor on BadRunnable.class\");\n    System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" ending\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":67,"func":"def run(self): \n    print(\"Thread\" + threading.current_thread().getId() + \" starting\") \n    lock = threading.Lock() \n    with lock: \n        print(\"Thread\" + threading.current_thread().getId() + \" acquired the monitor on BadRunnable.class\") \n        latch.countDown() \n        while True: \n            try: \n                latch.wait() \n            except: \n                continue \n            break \n    print(\"Thread\" + threading.current_thread().getId() + \" released the monitor on BadRunnable.class\") \n    print(\"Thread\" + threading.current_thread().getId() + \"ending\")","lang":"py"}
{"idx":68,"func":" \npublic static void main (String [] args) {\n    Scanner input = new Scanner (System.in);\n    final int valid = 6;\n    Scanner one = new Scanner (System.in);\n    System.out.println (\"Enter your username: \");\n    String s = one.nextLine ();\n    if (s.length () < valid) {\n        System.out.println (\"Enter a valid username\");\n        System.out.println (\"User name must contain \" + valid + \" characters\");\n        System.out.println (\"Enter again: \");\n        s = one.nextLine ();\n    }\n    System.out.println (\"Username accepted: \" + s);\n    Scanner two = new Scanner (System.in);\n    System.out.println (\"Enter your age: \");\n    int a = two.nextInt ();\n    System.out.println (\"Age accepted: \" + a);\n    Scanner three = new Scanner (System.in);\n    System.out.println (\"Enter your sex: \");\n    String sex = three.nextLine ();\n    System.out.println (\"Sex accepted: \" + sex);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":69,"func":"def main():\n    valid = 6\n    s = input(\"Enter your username: \")\n    if len(s) < valid:\n        print(\"Enter a valid username\")\n        print(\"Username must contain \" + str(valid) + \" characters\")\n        print(\"Enter again:\")\n        s = input()\n    print(\"Username accepted: \" + s)\n    try:\n        a = int(input(\"Enter your age: \"))\n        print(\"Age accepted: \" + str(a))\n    except ValueError:\n        print(\"Please enter a valid age.\")\n    sex = input(\"Enter your sex: \")\n    print(\"Sex accepted: \" + sex)\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":70,"func":" \npublic ListNode switchPairs () {\n    if (this == null || this.next == null) return this;\n    ListNode top = this.next;\n    ListNode first = this;\n    ListNode second = first.next;\n    do {\n        ListNode third = second.next;\n        second.next = first;\n        first.next = third;\n        first = third;\n        System.out.println (\"@@@ \" + this.toString ());\n        if (first != null) {\n            second.next.next = first.next;\n            second = first.next;\n        }\n    } while (first != null && second != null);\n    return top;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":71,"func":"def switchPairs(self):\n\tif (self is None) or (self.next == None):\n\t\treturn self\n\ttop = self.next\n\tfirst = self\n\tsecond = first.next\n\twhile True:\n\t\tthird = second.next\n\t\tsecond.next = first \n\t\tfirst.next = third \n\t\tfirst = third\n\t\tprint(\"@@@\" + self.toString())\n\t\tif (first != None): \n\t\t\tsecond.next.next = first.next\n\t\t\tsecond = first.next\n\t\tif (first == None) or (second == None): \n\t\t\tbreak\n\treturn top","lang":"py"}
{"idx":72,"func":" \npublic void replaceSelection (String text) {\n    String oldValue = getText ();\n    if (! text.matches (\"[A-Za-z]\") && ! text.matches (\"[\\\\\\\\!\\\"#$%&()*+,.\/:;<=>?@\\\\[\\\\]^_{|}~]+\")) {\n        super.replaceSelection (text);\n    }\n    if (getText ().length () > 2) {\n        setText (oldValue);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":73,"func":"def replaceSelection(text): \n    oldValue = getText()\n    if not text.matchPS('[A-Za-z]') and not text.matchPS('[\\\\\\\\!\\\"#$%&()*+,.\/:;<=>?@[\\]^_{|}~]+'): \n        super().replaceSelection(text) \n    if getText().length() > 2: \n        setText(oldValue)","lang":"py"}
{"idx":74,"func":" \n        public int compare (Map.Entry < String, Integer > a, Map.Entry < String, Integer > b) {\n            return a.getValue ().compareTo (b.getValue ());\n        }}\n    );\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":75,"func":"def compare (a, b):\n  return a[1] - b[1]","lang":"py"}
{"idx":76,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":77,"func":"def solution (X, A): \n    set_ = set() \n    sum1 = 0\n    sum2 = 0\n    for i in range(0, X+1): \n        sum1 += i \n    for i in range(len(A)): \n        if A[i] in set_: \n            continue\n        set_.add(A[i]) \n        sum2 += A[i] \n        if sum1 == sum2: \n            return i\n    return -1","lang":"py"}
{"idx":78,"func":" \npublic static void main (String [] args) {\n    Scanner sc = new Scanner (System.in);\n    int cases = sc.nextInt ();\n    String [] str = new String [cases];\n    for (int i = 0;\n    i < cases; i ++) {\n        str [i] = sc.next ();\n    }\n}","lang":"java"}
{"idx":79,"func":"","lang":"py"}
{"idx":80,"func":" \npublic static String sequenceNums (int [] nums) {\n    StringBuilder sb = new StringBuilder ();\n    if (nums.length == 0) return sb.toString ();\n    int begin = nums [0], end = nums [0];\n    for (int cur : nums) if (cur - end <= 1) end = cur;\n    else {\n        appendRange (sb, begin, end);\n        begin = end = cur;\n    }\n    appendRange (sb, begin, end);\n    return sb.substring (1);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":81,"func":"def sequenceNums (nums):\n    if not nums:\n        return \"\"\n    begin = nums[0]\n    end = nums[0]\n    sb = []\n    for num in nums:\n        if num - end <= 1:\n            end = num\n        else:\n            appendRange(sb, begin, end)\n            begin = end = num\n        appendRange(sb, begin, end)\n    return ''.join(sb)[1:]\ndef appendRange(sb, begin, end):\n    sb.append(\",{}-{}\".format(begin, end) if begin != end else \",{}\".format(begin))","lang":"py"}
{"idx":82,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    gg.drawString (string, (getWidth () - width) \/ 2, 11);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":83,"func":"def paintComponent(self, g):\n    super().paintComponent(g)\n    gg = g.create()\n    gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING ,\n                        RenderingHints.VALUE_ANTIALIAS_ON)\n    font = Font(\"Arial\", Font.PLAIN, 15)\n    string = \"Distance (m)\"\n    metrics =g.getFontMetrics(font)\n    width = metrics.stringWidth(string)\n    height = metrics.getHeight()\n    gg.setFont(font)\n    gg.drawString(string, (self.getWidth() - width) \/ 2, 11)","lang":"py"}
{"idx":84,"func":" \n        public void run () {\n            System.out.println (\"Starting thread ...\");\n            try {\n                runnable.run ();\n                System.out.println (\"Thread done\");\n            } catch (Throwable t) {\n                System.out.println (\"Thread exited abnormally\");\n            }\n        }}\n    ;\n\n\n\n\n","lang":"java"}
{"idx":85,"func":"def run():\n    print(\"Starting thread...\")\n    try:\n        runnable.run()\n        print(\"Thread done\")\n    except:\n        print(\"Thread exited abnormally\")","lang":"py"}
{"idx":86,"func":" \npublic static boolean isBetween (int currentMonth, int currentDay, int fromMonth, int fromDay, int untilMonth, int untilDay) {\n    MonthDay current = MonthDay.of (currentMonth, currentDay);\n    MonthDay from = MonthDay.of (fromMonth, fromDay);\n    MonthDay until = MonthDay.of (untilMonth, untilDay);\n    if (from.compareTo (until) <= 0) {\n        return from.compareTo (current) <= 0 && current.compareTo (until) <= 0;\n    } else {\n        return current.compareTo (until) <= 0 || current.compareTo (from) >= 0;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":87,"func":"def is_between(current_month, current_day, from_month, from_day, until_month, until_day):\n  current = datetime.date(current_month, current_day)\n  from = datetime.date(from_month, from_day)\n  until = datetime.date(until_month, until_day)\n  if from <= until:\n    return from <= current and current <= until\n  else:\n    return current <= until or current >= from","lang":"py"}
{"idx":88,"func":" \npublic void actionPerformed (ActionEvent e) {\n    String name = employeeName.getText ();\n    if (name.equals (\"\") || alreadyInList (name)) {\n        Toolkit.getDefaultToolkit ().beep ();\n        employeeName.requestFocusInWindow ();\n        employeeName.selectAll ();\n        return;\n    }\n    int index = list.getSelectedIndex ();\n    if (index == - 1) {\n        index = 0;\n    } else {\n        index ++;\n    }\n    listModel.insertElementAt (employeeName.getText (), index);\n    employeeName.requestFocusInWindow ();\n    employeeName.setText (\"\");\n    list.setSelectedIndex (index);\n    list.ensureIndexIsVisible (index);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":89,"func":"def actionPerformed(e):\n    name = employeeName.getText()\n    if name == \"\" or alreadyInList(name):\n        Toolkit.getDefaultToolkit().beep()\n        employeeName.requestFocusInWindow()\n        employeeName.selectAll()\n        return\n    index = list.getSelectedIndex()\n    if index == -1:\n        index = 0\n    else:\n        index += 1\n    listModel.insertElementAt(employeeName.getText(), index)\n    employeeName.requestFocusInWindow()\n    employeeName.setText(\"\")\n    list.setSelectedIndex(index)\n    list.ensureIndexIsVisible(index)","lang":"py"}
{"idx":90,"func":" \nprivate void transform (HSSFCell cellOld, XSSFCell cellNew) {\n    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (! this.styleMap.containsKey (hash)) {\n        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":91,"func":"def transform(cell_old, cell_new):\n    cell_new.set_cell_comment(cell_old.get_cell_comment())\n    hash_val = cell_old.get_cell_style().hash_code()\n    if hash_val not in style_map:\n        transform(hash_val, cell_old.get_cell_style(), workbook_new.create_cell_style())\n    cell_new.set_cell_style(style_map[hash_val])\n    if cell_old.get_cell_type(==Cell.CELL_TYPE_BLANK):\n        pass\n    elif cell_old.get_cell_type(==Cell.CELL_TYPE_BOOLEAN):\n        cell_new.set_cell_value(cell_old.get_boolean_cell_value())\n    elif cell_old.get_cell_type(==Cell.CELL_TYPE_ERROR):\n        cell_new.set_cell_value(cell_old.get_error_cell_value())\n    elif cell_old.get_cell_type(==Cell.CELL_TYPE_FORMULA): \n        cell_new.set_cell_value(cell_old.get_cell_formula())\n    elif cell_old.get_cell_type(==Cell.CELL_TYPE_NUMERIC): \n        cell_new.set_cell_value(cell_old.get_numeric_cell_value())\n    elif cell_old.get_cell_type(==Cell.CELL_TYPE_STRING):\n        cell_new.set_cell_value(cell_old.get_string_cell_value())\n    else:\n        print(\"transform: Unknown cell type \" + cell_old.get_cell_type())","lang":"py"}
{"idx":92,"func":" \n        public void run () {\n            if (! isConnected) {\n                System.out.println (\"connect action\");\n                connect ();\n                isConnected = true;\n            } else {\n                System.out.println (\"disconnect action\");\n                disconnect ();\n                isConnected = false;\n            }\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":93,"func":"def run(self):\n        if not self.isConnected:\n            print(\"connect action\") \n            self.connect() \n            self.isConnected = True\n        else:\n            print(\"disconnect action\") \n            self.disconnect()\n            self.isConnected = False","lang":"py"}
{"idx":94,"func":" \nint findCombinationsCount (int amount, int coins []) {\n    if (coins.length == 1) {\n        return amount % coins [0] == 0 ? 1 : 0;\n    } else {\n        int total = 0;\n        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);\n        for (int i = 0;\n        i * coins [0] <= amount; ++ i) {\n            total += findCombinationsCount (amount - i * coins [0], subCoins);\n        }\n        return total;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":95,"func":"def findCombinationsCount(amount, coins):\n    if len(coins) == 1:\n        return 1 if amount % coins[0] == 0 else 0\n    else:\n        total = 0\n        subCoins = coins[1:]\n        for i in range(amount \/\/ coins[0] + 1):\n            total += findCombinationsCount(amount - i * coins[0], subCoins)\n        return total","lang":"py"}
{"idx":96,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":97,"func":"def solution(X, A):\n    unique_elements = set()\n    sum1 = 0\n    sum2 = 0\n    for i in range(0, X+1):\n        sum1 += i\n    for i in range(0, len(A)):\n        if A[i] in unique_elements:\n            continue\n        unique_elements.add(A[i])\n        sum2 += A[i]\n        if sum1 == sum2:\n            return i\n    return -1","lang":"py"}
{"idx":98,"func":" \npublic boolean haveThree (int [] nums) {\n    int count = 0;\n    boolean flag = false;\n    for (int i = 0;\n    i < nums.length; i ++) {\n        if (nums [i] == 3) {\n            if (flag) {\n                return false;\n            } else {\n                count ++;\n                flag = true;\n            }\n        } else {\n            flag = false;\n        }\n    }\n    return count == 3;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":99,"func":"def haveThree(nums):\n    count = 0\n    flag = False\n    for i in range(len(nums)):\n        if nums[i] == 3:\n            if flag:\n                return False\n            else:\n                count += 1\n                flag = True\n        else:\n            flag = False\n    return count == 3","lang":"py"}
{"idx":100,"func":" \npublic void type (String text) {\n    char c;\n    for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":101,"func":"def type (text):\n    for char in text:\n        if ord(char) <= 31 or ord(char) == 129:\n            pressControlKey(char)\n        else:\n            typeAsciiCode(char)","lang":"py"}
{"idx":102,"func":" \npublic static void printTable (String [] countries, int [] populations) {\n    int defaultLength = 10;\n    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);\n    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);\n    for (int i = 0;\n    i < countries.length; i ++) {\n        System.out.format (\"%-\" + maxCountryLength + \"s | %\" + maxPopulationLength + \"d\\n\", countries [i], populations [i]);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":103,"func":"def printTable(countries, populations):\n    defaultLength = 10\n    maxCountryLength = max([len(country) for country in countries]) or defaultLength\n    maxPopulationLength = max([len(str(population)) for population in populations]) or defaultLength\n    for i in range(len(countries)):\n        print(f'{countries[i]:{maxCountryLength}} | {str(populations[i]):{maxPopulationLength}}')","lang":"py"}
{"idx":104,"func":" \npublic static void type (String characters) {\n    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();\n    StringSelection stringSelection = new StringSelection (characters);\n    clipboard.setContents (stringSelection, clipboardOwner);\n    robot.keyPress (KeyEvent.VK_CONTROL);\n    robot.keyPress (KeyEvent.VK_V);\n    robot.keyRelease (KeyEvent.VK_V);\n    robot.keyRelease (KeyEvent.VK_CONTROL);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":105,"func":"def type(characters): \n    pyperclip.copy(characters)\n    pyautogui.hotkey('ctrl', 'v')","lang":"py"}
{"idx":106,"func":" \npublic void shuffle (int numberOfCards) {\n    for (int i = 0;\n    i < numberOfCards; i ++) {\n        int j = rand.nextInt (protoDeck.length - i) + i;\n        Card tmp = deck [i];\n        deck [i] = deck [j];\n        deck [j] = tmp;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":107,"func":"def shuffle(numberOfCards):\n  for i in range(numberOfCards):\n    j = random.randint(0, numberOfCards - i) + i\n    tmp = deck[i]\n    deck[i] = deck[j]\n    deck[j] = tmp","lang":"py"}
{"idx":108,"func":" \n        public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n            FileVisitResult result = super.visitFile (file, attrs);\n            Path relativize = expected.toPath ().relativize (file);\n            File fileInOther = generated.toPath ().resolve (relativize).toFile ();\n            log.debug (\"=== comparing: \" + file + \" to \" + fileInOther);\n            String expectedContents = FileUtils.readFileToString (file.toFile ());\n            String generatedContents = FileUtils.readFileToString (fileInOther);\n            assertEquals (\"(\" + fileInOther + \")  csv standard doesn't match expected (\" + file + \")!\", expectedContents, generatedContents);\n            return result;\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":109,"func":"def visitFile(self, file, attrs):\n    result = super().visitFile(file, attrs)\n    relativize = self.expected.toPath().relativize(file)\n    fileInOther = self.generated.toPath().resolve(relativize).toFile()\n    log.debug(f'=== comparing: {file} to {fileInOther}')\n    expectedContents = FileUtils.readFileToString(file.toFile())\n    generatedContents = FileUtils.readFileToString(fileInOther)\n    assert expectedContents == generatedContents, f'({fileInOther})  csv standard doesn\\'t match expected ({file})!'\n    return result","lang":"py"}
{"idx":110,"func":" \nprivate static int solution (int N) {\n    int gap = 0;\n    String binaryStr = Integer.toBinaryString (N);\n    String [] zeroArrays = binaryStr.split (\"1\");\n    System.out.println (Arrays.toString (zeroArrays));\n    for (String zeroArray : zeroArrays) {\n        gap = zeroArray.length () > gap ? zeroArray.length () : gap;\n    }\n    return gap;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":111,"func":"def solution(N):\n    gap = 0\n    binaryStr = '{0:b}'.format(N)\n    zeroArrays = binaryStr.split('1')\n    print(zeroArrays)\n    for zeroArray in zeroArrays: \n        if gap < len(zeroArray):\n            gap = len(zeroArray)\n    return gap","lang":"py"}
{"idx":112,"func":" \nprivate void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {\n    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":113,"func":"def transform (workbookOld, workbookNew, cellOld, cellNew): \n    cellNew.setCellComment (cellOld.getCellComment ())\n    hash = cellOld.getCellStyle ().hashCode ()\n    if styleMap != None and hash not in styleMap: \n        transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), workbookNew.createCellStyle ())\n    cellNew.setCellStyle (styleMap [hash])\n    if cellOld.getCellType () == Cell.CELL_TYPE_BLANK: \n        pass\n    elif cellOld.getCellType () == Cell.CELL_TYPE_BOOLEAN: \n        cellNew.setCellValue (cellOld.getBooleanCellValue ())\n    elif cellOld.getCellType () == Cell.CELL_TYPE_ERROR: \n        cellNew.setCellValue (cellOld.getErrorCellValue ())\n    elif cellOld.getCellType () == Cell.CELL_TYPE_FORMULA: \n        cellNew.setCellValue (cellOld.getCellFormula ())\n    elif cellOld.getCellType () == Cell.CELL_TYPE_NUMERIC: \n        cellNew.setCellValue (cellOld.getNumericCellValue ())\n    elif cellOld.getCellType () == Cell.CELL_TYPE_STRING: \n        cellNew.setCellValue (cellOld.getStringCellValue ())\n    else: \n        print(\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ())","lang":"py"}
{"idx":114,"func":" \npublic void run () {\n    JFrame frame2 = new JFrame (\"Frame 2\");\n    frame2.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame2.getContentPane ().add (new JLabel (\"Hello in frame 2\"));\n    frame2.pack ();\n    frame2.setLocation (200, 200);\n    frame2.setVisible (true);\n    isThereReallyEDT ();\n}","lang":"java"}
{"idx":115,"func":"import javax\nframe2 = javax.swing.JFrame(\"Frame 2\")\nframe2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)\nframe2.getContentPane().add(javax.swing.JLabel(\"Hello in frame 2\"))\nframe2.pack()\nframe2.setLocation(200,200)\nframe2.setVisible(True)\nisThereReallyEDT()\n","lang":"py"}
{"idx":116,"func":" \npublic String makeStringsEqual (String str, String keyword) {\n    if (str.length () > keyword.length ()) {\n        string result = \"\";\n        for (int i = 0;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != ' ') {\n                result += keyword.charAt (i % keyword.length ());\n            } else result += \" \";\n        }\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":117,"func":"def makeStringsEqual(str, keyword):\n    if len(str) > len(keyword):\n        result = \"\"\n        for i in range(len(str)):\n            if str[i] != ' ':\n                result += keyword[i % len(keyword)]\n            else:\n                result += ' '\n    return result","lang":"py"}
{"idx":118,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":119,"func":"def solution(X, A):\n    leaves = set()\n    for i, val in enumerate(A):\n        leaves.add(val)\n        if X in leaves and len(leaves) == X:\n            return i\n    return -1","lang":"py"}
{"idx":120,"func":" \n        public void run () {\n            gaston.bow (alphonse);\n        }}\n    ).start ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":121,"func":"def run(): \n    gaston.bow(alphonse)\n\nThread(target=run).start()","lang":"py"}
{"idx":122,"func":" \npublic static void main (String [] args) {\n    Scanner stdin = new Scanner (System.in);\n    String [] wordArray = new String [10000];\n    int [] wordCount = new int [10000];\n    int numWords = 0;\n    while (stdin.hasNextLine ()) {\n        String s = stdin.nextLine ();\n        ArrayList < String > noDuplicated = new ArrayList < String > ();\n        String [] words = s.replaceAll (\"[^a-zA-Z ]\", \"\").toLowerCase ().split (\"\\\\s+\");\n        for (int i = 0;\n        i < words.length; i ++) {\n            if (! noDuplicated.contains (words [i])) noDuplicated.add (words [i]);\n        }\n        for (int i = 0;\n        i < noDuplicated.size (); i ++) {\n            int count = 0;\n            for (int j = 0;\n            j < words.length; j ++) {\n                if (noDuplicated.get (i).equals (words [j])) count ++;\n            }\n            System.out.println (\"word count: \u2192 \" + words [i] + \" \" + count);\n        }\n    }\n}","lang":"java"}
{"idx":123,"func":"words_dict = dict()\nwhile True: \n    s = input()\n    if s == '': \n        break\n    words = s.replace('[^a-zA-Z ]', \"\").lower().split()\n    no_duplicated = set(words)\n    for w in no_duplicated:\n        count = words.count(w)\n        words_dict[w] = count\n    \n    for w in words_dict: \n        print(f\"word count: \u2192 {w} {words_dict[w]}\")\n","lang":"py"}
{"idx":124,"func":" \npublic static void main (String [] args) {\n    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};\n    int [] B = new int [A.length];\n    int [] C = new int [A.length];\n    int t = 4;\n    int countb = 0;\n    int countc = 0;\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= t) {\n            B [countb ++] = A [i];\n        } else {\n            C [countc ++] = A [i];\n        }\n    }\n    System.out.println (Arrays.toString (B));\n    System.out.println (Arrays.toString (C));\n}","lang":"java"}
{"idx":125,"func":"A = [9, 5, 4, 3, 2, 1, 34, 53]\n","lang":"py"}
{"idx":126,"func":" \nprivate static int score (final char [] a, final char [] b, final int idxA, final int idxB) {\n    final int value;\n    if (idxA >= a.length || idxB >= b.length) {\n        value = 0;\n    } else if (a [idxA] == b [idxB]) {\n        value = 1 + score (a, b, idxA + 1, idxB + 1);\n    } else {\n        final int x;\n        final int y;\n        x = score (a, b, idxA + 1, idxB);\n        y = score (a, b, idxB, idxB + 1);\n        value = max (x, y);\n    }\n    return (value);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":127,"func":"def score(a, b, idxA, idxB):\n    value = 0\n    if idxA < len(a) and idxB < len(b):\n        if a[idxA] == b[idxB]:\n            value = 1 + score(a, b, idxA + 1, idxB + 1) \n        else:\n            x = score(a,b, idxA + 1, idxB)\n            y = score(a,b, idxA, idxB + 1)\n            value = max(x, y)\n    return value","lang":"py"}
{"idx":128,"func":" \nprivate XSSFFont transform (HSSFFont fontOld) {\n    XSSFFont fontNew = this.workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":129,"func":"def transform(font_old):\n  font_new = workbook_new.createFont()\n  font_new.setBoldweight(font_old.getBoldweight())\n  font_new.setCharSet(font_old.getCharSet())\n  font_new.setColor(font_old.getColor())\n  font_new.setFontName(font_old.getFontName())\n  font_new.setFontHeight(font_old.getFontHeight())\n  font_new.setItalic(font_old.getItalic())\n  font_new.setStrikeout(font_old.getStrikeout())\n  font_new.setTypeOffset(font_old.getTypeOffset())\n  font_new.setUnderline(font_old.getUnderline())\n\n  return font_new","lang":"py"}
{"idx":130,"func":" \npublic static String sequenceNums (int [] nums) {\n    StringBuilder sb = new StringBuilder ();\n    if (nums.length == 0) return sb.toString ();\n    int begin = nums [0], end = nums [0];\n    for (int cur : nums) if (cur - end <= 1) end = cur;\n    else {\n        appendRange (sb, begin, end);\n        begin = end = cur;\n    }\n    appendRange (sb, begin, end);\n    return sb.substring (1);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":131,"func":"def sequenceNums(nums):\n    sb = []\n    if nums == None or len(nums) == 0:\n        return \"\"\n    begin = nums[0]\n    end = nums[0]\n    for cur in nums:\n        if cur - end <= 1:\n            end = cur\n        else:\n            appendRange(sb, begin, end)\n            begin = end = cur\n    appendRange(sb, begin, end)\n    return \",\".join(sb[1:])","lang":"py"}
{"idx":132,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":133,"func":"def solution(x, a):\n    set_a = set()\n    sum1, sum2 = 0, 0\n    \n    for i in range (x+1):\n        sum1 += i\n    \n    for i in range(len(a)):\n        if (a[i] in set_a):\n            continue\n        set_a.add(a[i])\n        sum2 += a[i]\n        if sum1 == sum2:\n            return i\n    return -1","lang":"py"}
{"idx":134,"func":" \npublic static void main (String [] args) {\n    System.out.println (\"Main Method Started\");\n    Scanner in = new Scanner (System.in);\n    System.out.println (\"Enter the size of the arr\");\n    int size = in.nextInt ();\n    System.out.println (\"Enter the maximum value of the arr\");\n    int max = in.nextInt ();\n    int [] arr = initializeArr (max, size);\n    print (arr);\n    findMinMax (arr);\n    System.out.println (\"Main Method Ended\");\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":135,"func":"def main():\n    print(\"Main Method Started\")\n    size = int(input(\"Enter the size of the arr: \"))\n    max = int(input(\"Enter the maximum value of the arr: \"))\n    arr = initializeArr(max, size)\n    print(arr)\n    findMinMax(arr)\n    print(\"Main Method Ended\")","lang":"py"}
{"idx":136,"func":" \npublic void draw (Graphics2D g) {\n    float arrowRatio = 0.5f;\n    float arrowLength = 80.0f;\n    BasicStroke stroke = (BasicStroke) g.getStroke ();\n    float endX = 350.0f;\n    float veeX;\n    switch (stroke.getLineJoin ()) {\n        case BasicStroke.JOIN_BEVEL :\n            veeX = endX - stroke.getLineWidth () * 0.25f;\n            break;\n        default :\n        case BasicStroke.JOIN_MITER :\n            veeX = endX - stroke.getLineWidth () * 0.5f \/ arrowRatio;\n            break;\n        case BasicStroke.JOIN_ROUND :\n            veeX = endX - stroke.getLineWidth () * 0.5f;\n            break;\n    }\n    Path2D.Float path = new Path2D.Float ();\n    path.moveTo (veeX - arrowLength, - arrowRatio * arrowLength);\n    path.lineTo (veeX, 0.0f);\n    path.lineTo (veeX - arrowLength, arrowRatio * arrowLength);\n    g.setColor (Color.BLUE);\n    g.draw (path);\n    g.setColor (Color.YELLOW);\n    g.draw (new Line2D.Float (50.0f, 0.0f, veeX, 0.0f));\n    g.setColor (Color.RED);\n    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - stroke.getLineWidth () * 0.25f, 0.0f));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":137,"func":"def draw(g):\n    arrow_ratio = 0.5\n    arrow_length = 80.0\n    stroke = g.get_stroke()\n    end_x = 350.0\n    vee_x = 0\n    if stroke.get_line_join() == 'BasicStroke.JOIN_BEVEL':\n        vee_x = end_x - stroke.get_line_width() * 0.25\n    elif stroke.get_line_join() == 'BasicStroke.JOIN_MITER':\n        vee_x = end_x - stroke.get_line_width() * 0.5 \/ arrow_ratio\n    elif stroke.get_line_join() == 'BasicStroke.JOIN_ROUND':\n        vee_x = end_x - stroke.get_line_width() * 0.5\n   \n    path = g.Path2D()\n    path.move_to(vee_x - arrow_length, -arrow_ratio * arrow_length)\n    path.line_to(vee_x, 0.0)\n    path.line_to(vee_x - arrow_length, arrow_ratio * arrow_length)\n    g.set_color('blue')\n    g.draw(path)\n    g.set_color('yellow')\n    g.draw(g.Line2D(50.0, 0.0, vee_x, 0.0))\n    g.set_color('red')\n    g.draw(g.Line2D(50.0, 0.0, vee_x - stroke.get_line_width() * 0.25, 0.0))","lang":"py"}
{"idx":138,"func":" \npublic void onPageScrollStateChanged (int state) {\n    if (state == ViewPager.SCROLL_STATE_IDLE) {\n        PagerAdapter pagerAdapter = viewPager.getAdapter ();\n        if (pagerAdapter != null) {\n            int itemCount = pagerAdapter.getCount ();\n            if (itemCount < 2) {\n                return;\n            }\n            int index = viewPager.getCurrentItem ();\n            if (index == 0) {\n                viewPager.setCurrentItem (itemCount - 2, false);\n            } else if (index == itemCount - 1) {\n                viewPager.setCurrentItem (1, false);\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":139,"func":"def onPageScrollStateChanged(state):\n    if (state == ViewPager.SCROLL_STATE_IDLE):\n        pagerAdapter = viewPager.getAdapter()\n        if (pagerAdapter != None):\n            itemCount = pagerAdapter.getCount()\n            if (itemCount < 2):\n                return\n            index = viewPager.getCurrentItem()\n            if (index == 0):\n                viewPager.setCurrentItem(itemCount - 2, False)\n            elif (index == itemCount - 1):\n                viewPager.setCurrentItem(1, False)","lang":"py"}
{"idx":140,"func":" \npublic static void main (String [] args) {\n    Scanner input = new Scanner (System.in);\n    final int valid = 6;\n    Scanner one = new Scanner (System.in);\n    System.out.println (\"Enter your username: \");\n    String s = one.nextLine ();\n    if (s.length () < valid) {\n        System.out.println (\"Enter a valid username\");\n        System.out.println (\"User name must contain \" + valid + \" characters\");\n        System.out.println (\"Enter again: \");\n        s = one.nextLine ();\n    }\n    System.out.println (\"Username accepted: \" + s);\n    Scanner two = new Scanner (System.in);\n    System.out.println (\"Enter your age: \");\n    int a = two.nextInt ();\n    System.out.println (\"Age accepted: \" + a);\n    Scanner three = new Scanner (System.in);\n    System.out.println (\"Enter your sex: \");\n    String sex = three.nextLine ();\n    System.out.println (\"Sex accepted: \" + sex);\n}","lang":"java"}
{"idx":141,"func":"valid = 6\ns = input(\"Enter your username: \")\nif len(s) < valid:\n    print(\"Enter a valid username\")\n    print(\"User name must contain\" + str(valid) + \" characters\")\n    s = input(\"Enter again: \")\nprint(\"Username accepted: \" + s)\na = int(input(\"Enter your age: \"))\nprint(\"Age accepted: \" + str(a))\nsex = input(\"Enter your sex: \")\nprint(\"Sex accepted: \" + sex)\n","lang":"py"}
{"idx":142,"func":" \npublic boolean isBalanced (String strExpression) {\n    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();\n    bracketPair.put ('(', ')');\n    bracketPair.put ('[', ']');\n    bracketPair.put ('{', '}');\n    Stack < Character > stk = new Stack < Character > ();\n    for (int i = 0;\n    i < strExpression.length (); i ++) {\n        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));\n        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;\n    }\n    if (stk.isEmpty ()) return true;\n    else return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":143,"func":"def isBalanced(string): \n  bracketPair = {'(':')', '[':']', '{':'}'} \n  stack = [] \n  \n  for char in string: \n    if char in bracketPair: \n      stack.append(char) \n    elif char in bracketPair.values(): \n      if not stack or bracketPair[stack.pop()] != char: \n        return False \n  if not stack: \n    return True \n  else: \n    return False","lang":"py"}
{"idx":144,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    ExecutorService executorService = Executors.newFixedThreadPool (4);\n    for (int i = 0;\n    i < 4; i ++) {\n        executorService.execute (new MyRunnable (expensiveObjects));\n    }\n    executorService.shutdown ();\n    executorService.awaitTermination (5, TimeUnit.SECONDS);\n    System.out.println (\"Final: \" + outputCount.get ());\n}","lang":"java"}
{"idx":145,"func":"expensiveObjects = Queue.Queue() \nexpensiveObjects.put(Object())\nexpensiveObjects.put(Object())\nexpensiveObjects.put(Object())\nexpensiveObjects.put(Object())\nexecutorService = threading.ThreadPool(4) \nfor i in range(4): \n    executorService.execute(MyRunnable(expensiveObjects)) \nexecutorService.shutdown() \nexecutorService.wait(5) \nprint (\"Final: \" + outputCount.get()) \n","lang":"py"}
{"idx":146,"func":" \npublic void actionPerformed (ActionEvent e) {\n    int x = (int) (Math.random () * getWidth ());\n    int y = (int) (Math.random () * getHeight ());\n    int width = (int) (Math.random () * (getWidth () \/ 4));\n    int height = (int) (Math.random () * (getHeight () \/ 4));\n    if (x + width > getWidth ()) {\n        x = getWidth () - width;\n    }\n    if (y + height > getHeight ()) {\n        y = getHeight () - height;\n    }\n    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));\n    lstShapes.add (new MyRectangle (x, y, width, height, color));\n    repaint ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":147,"func":"def actionPerformed(e):\n    x = random.randint(0, getWidth())\n    y = random.randint(0, getHeight())\n    width = random.randint(0, getWidth()\/4)\n    height = random.randint(0, getHeight()\/4)\n    if (x + width > getWidth()):\n        x = getWidth() - width\n    if (y + height > getHeight()):\n        y = getHeight() - height\n    color = (random.randint(0,255), random.randint(0,255), random.randint(0,255))\n    lstShapes.append(MyRectangle(x, y, width, height, color))\n    repaint()","lang":"py"}
{"idx":148,"func":" \npublic static void main (String [] args) throws Exception {\n    CodilityTest o_tc = new CodilityTest ();\n    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};\n    int [] y = new int [0];\n    o_tc.setInput (x);\n    o_tc.getOutput (x);\n    System.out.println (count);\n    CodilityTest o_tc1 = new CodilityTest ();\n    o_tc1.getOutput (y);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":149,"func":"def main (args):\n    o_tc = CodilityTest()\n    x = [1, 2, -3, 4, -5, -11, -2, 3, -4, 5]\n    y = []\n    o_tc.setInput(x)\n    o_tc.getOutput(x)\n    print(count)\n    o_tc1 = CodilityTest()\n    o_tc1.getOutput(y)","lang":"py"}
{"idx":150,"func":" \npublic int compare (String s1, String s2) {\n    String [] s1NameNumPair = s1.split (\" \");\n    String [] s2NameNumPair = s2.split (\" \");\n    int diff = s1NameNumPair [0].compareTo (s2NameNumPair [0]);\n    if (0 == diff) {\n        Double n1 = Double.parseDouble (s1NameNumPair [1]);\n        Double n2 = Double.parseDouble (s2NameNumPair [1]);\n        return n1.compareTo (n2);\n    }\n    return diff;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":151,"func":"def compare(s1, s2):\n\ts1_name_num_pair = s1.split(\" \")\n\ts2_name_num_pair = s2.split(\" \")\n\tdiff = s1_name_num_pair[0].lower().casefold() <=> s2_name_num_pair[0].lower().casefold()\n\tif diff==0:\n\t\tn1 = float(s1_name_num_pair[1])\n\t\tn2 = float(s2_name_num_pair[1])\n\t\treturn n1 <=> n2\n\treturn diff","lang":"py"}
{"idx":152,"func":" \npublic double getSum () {\n    double result = this.amount;\n    if (this.subAccounts != null) {\n        for (Balance subAccount : this.subAccounts) {\n            result = result + subAccount.getSum ();\n        }\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":153,"func":"def getSum(self):\n    result = self.amount\n    if self.subAccounts:\n        for subAccount in self.subAccounts:\n            result += subAccount.getSum()\n    return result","lang":"py"}
{"idx":154,"func":" \npublic void add (View v) {\n    EditText first = findViewById (R.id.first);\n    EditText second = findViewById (R.id.second);\n    TextView result = findViewById (R.id.result);\n    double r;\n    if (TextUtils.isEmpty (first.getText ().toString ())) {\n        first.setError (\"This field can't be empty\");\n    } else if (TextUtils.isEmpty (second.getText ().toString ())) {\n        second.setError (\"This field can't be empty\");\n    } else {\n        double s = Double.parseDouble (second.getText ().toString ());\n        double f = Double.parseDouble (first.getText ().toString ());\n        r = f + s;\n        result.setText (\"\" + r);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":155,"func":"def add (view): \n    first = findViewById (R.id.first) \n    second = findViewById (R.id.second) \n    result = findViewById (R.id.result) \n    if first.getText () is None: \n        first.setError (\"This field can't be empty\") \n    elif second.getText () is None: \n        second.setError (\"This field can't be empty\") \n    else: \n        s = float (second.getText ()) \n        f = float (first.getText ()) \n        r = f + s \n        result.setText (str (r))","lang":"py"}
{"idx":156,"func":" \nprotected void onActivityResult (int requestCode, int resultCode, Intent data) {\n    super.onActivityResult (requestCode, resultCode, data);\n    if (requestCode == 0) {\n        try {\n            Bitmap cameraBitmap;\n            cameraBitmap = BitmapFactory.decodeFile (myFilesDir + \"\/temp.jpg\");\n            Bitmap.createBitmap (cameraBitmap);\n            ivPhoto.setImageBitmap (cameraBitmap);\n        } catch (Exception e) {\n            e.printStackTrace ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":157,"func":"def onActivityResult (requestCode, resultCode, data):\n    super().onActivityResult (requestCode, resultCode, data)\n    if requestCode == 0:\n        try:\n            cameraBitmap = None\n            cameraBitmap = BitmapFactory.decodeFile (myFilesDir + \"\/temp.jpg\")\n            Bitmap.createBitmap (cameraBitmap)\n            ivPhoto.setImageBitmap (cameraBitmap)\n        except Exception as e:\n            print(e)","lang":"py"}
{"idx":158,"func":" \npublic int solution (int X, int [] A) {\n    int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) \/ 2;\n    List < Integer > arrayList = new ArrayList < Integer > ();\n    for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":159,"func":"def solution(x, a):\n    sum_ = 0\n    searched_value = x\n    sum_v = searched_value * (searched_value + 1) \/ 2\n    array_list = [] \n    for iii in range(len(a)):\n        if a[iii] <= searched_value and a[iii] not in array_list:\n            sum_ += a[iii]\n            if sum_ == sum_v:\n                return iii\n            array_list.append(a[iii])\n \n    return -1","lang":"py"}
{"idx":160,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":161,"func":"def solution(X,A):\n    leaves = set()        \n    for i in range(len(A)):\n        leaves.add(A[i])\n        if X in leaves and len(leaves) == X:\n            return i\n    return -1","lang":"py"}
{"idx":162,"func":" \n        public void run () {\n            ClosingFrame cf = new ClosingFrame ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":163,"func":"def run():\n    cf = ClosingFrame()","lang":"py"}
{"idx":164,"func":" \npublic static int countLines (File input) throws IOException {\n    try (InputStream is = new FileInputStream (input)) {\n        int count = 1;\n        for (int aChar = 0;\n        aChar != - 1; aChar = is.read ()) count += aChar == '\\n' ? 1 : 0;\n        return count;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":165,"func":"def countLines(input):\n    with open(input) as is_:\n        count = 1\n        while True:\n            aChar = is_.read(1)\n            if aChar == '':\n               break\n            count += 1 if aChar == '\\n' else 0\n        return count","lang":"py"}
{"idx":166,"func":" \npublic static boolean contains (String a, String b) {\n    int diff = a.length () - b.length ();\n    while (a.length () > 0) {\n        b = b.replace (a.substring (0, 1), \"\");\n        a = a.replace (a.substring (0, 1), \"\");\n        if (diff != a.length () - b.length ()) return false;\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":167,"func":"def contains(a,b): \n  diff = len(a) - len(b) \n  while len(a) > 0: \n    b=b.replace(a[0],\"\") \n    a=a.replace(a[0],\"\") \n    if(diff!=len(a) - len(b)): return False \n  return True","lang":"py"}
{"idx":168,"func":" \npublic static void main (final String [] args) throws IOException {\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.println (\"Enter some text, or '\" + EXIT_COMMAND + \"' to quit\");\n    while (true) {\n        System.out.print (\"><![CDATA[ \");\n        String input = br.readLine ();\n        System.out.println (input);\n        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {\n            System.out.println (\"Exiting.\");\n            return;\n        }\n        System.out.println (\"...response goes here...\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":169,"func":"def main():\n    exit_command = 'exit' \n    while True:\n        input_text = input('><![CDATA[ ')\n        print(input_text)\n        if input_text.lower() == exit_command:\n            print('Exiting.')\n            return\n        else:\n            print('...response goes here...')\n\nmain()","lang":"py"}
{"idx":170,"func":" \npublic static void main (String [] args) {\n    String x = \"flskdafsld~fdsak\u00e7k\u00e7fsda sfdaldsak~\u00e7fdskkfads\u00e7lk\u00e7fldsk\u00e7lfl\u00e7fdsk\u00e7ldks\u00e7lkfdsl\u00e7akafdsl\u00e7dskl\u00e7fdsk\u00e7lafdsk\u00e7kdfs\u00e7lkfds~\u00e7lkfasd\u00e7l\u00e7fdls~k\u00e7lf~dks\u00e7lsakd\u00e7lkf\u00e7\";\n    System.out.println (\"x length: \" + x.length ());\n    String [] lines = Split (x, 30, 210);\n    for (int i = 0;\n    i < lines.length; i ++) {\n        System.out.println (\"lines[\" + i + \"]: (len: \" + lines [i].length () + \") : \" + lines [i]);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":171,"func":"def main(args):\n    x = \"flskdafsld~fdsak\u00e7k\u00e7fsda sfdaldsak~\u00e7fdskkfads\u00e7lk\u00e7fldsk\u00e7lfl\u00e7fdsk\u00e7ldks\u00e7lkfdsl\u00e7akafdsl\u00e7dskl\u00e7fdsk\u00e7lafdsk\u00e7kdfs\u00e7lkfds~\u00e7lkfasd\u00e7l\u00e7fdls~k\u00e7lf~dks\u00e7lsakd\u00e7lkf\u00e7\"\n    print(\"x length: \",len(x))\n \n    lines = Split(x, 30, 210)\n    for i in range(0,len(lines)):\n        print(\"lines[i]: (len: \", len(lines[i]), \") : \", lines[i])","lang":"py"}
{"idx":172,"func":" \npublic static void main (String [] args) throws Exception {\n    int loops = 1000 * 1000;\n    Object object = new Object ();\n    long start = System.nanoTime ();\n    Object s;\n    testMethodCall (object, loops);\n    long regularCalls = System.nanoTime () - start;\n    java.lang.reflect.Method method = Object.class.getMethod (\"getClass\");\n    method.setAccessible (true);\n    start = System.nanoTime ();\n    testInvoke (object, loops, method);\n    long reflectiveCalls = System.nanoTime () - start;\n    start = System.nanoTime ();\n    testGetMethodInvoke (object, loops);\n    long reflectiveLookup = System.nanoTime () - start;\n    System.out.println (\"Average regular method calls:\" + regularCalls \/ loops + \" ns.\");\n    System.out.println (\"Average reflective method calls without lookup:\" + reflectiveCalls \/ loops + \" ns.\");\n    System.out.println (\"Average reflective method calls with lookup:\" + reflectiveLookup \/ loops + \" ns.\");\n}\n\n\n\n\n\nimport time\nloops = 1000000\nobject = object()\nstart = time.time_ns()\ns = None\n","lang":"java"}
{"idx":173,"func":"def test_method_call(object,loops):\n    for _ in range(loops):\n        s = object.getClass()\nregular_calls = time.time_ns() - start\nimport inspect\nmethod_ = inspect.getmembers(object, predicate=inspect.ismethod)\nstart = time.time_ns()\ndef test_invoke(object,loops,method):\n    for _ in range(loops):\n        s = method(object)\nreflective_calls = time.time_ns() - start\nstart = time.time_ns()\ndef test_get_method_invoke(object,loops,method_):\n    for _ in range(loops):\n        for m in method_:\n            s = m[1](object)\nreflective_lookup = time.time_ns() - start\nprint(\"Average regular method calls:\", regular_calls\/loops, \"ns.\") \nprint(\"Average reflective method calls without lookup:\", reflective_calls\/loops,  \"ns.\") \nprint(\"Average reflective method calls with lookup:\", reflective_lookup\/loops, \"ns.\")","lang":"py"}
{"idx":174,"func":" \npublic static Calendar getLastFriday (Calendar cal, int offset) {\n    int dayofweek;\n    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);\n    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));\n    dayofweek = cal.get (Calendar.DAY_OF_WEEK);\n    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);\n    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);\n    return cal;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":175,"func":"def get_last_friday(currentDate, offset):\n    offset_month = currentDate.month + offset\n    currentDate.replace(month=offset_month, day=currentDate.day) \n    currentDate = currentDate.replace(day=currentDate.days_in_month) \n    dayofweek = currentDate.weekday()\n    if dayofweek < 4:\n        currentDate -= timedelta((4 - dayofweek) % 7)\n    elif dayofweek > 4:\n        currentDate -= timedelta(7 + dayofweek - 4)\n    return currentDate","lang":"py"}
{"idx":176,"func":" \npublic static void main (String [] args) {\n    String name = \"AnuvratAnuvra\";\n    char [] arr = name.toCharArray ();\n    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();\n    for (char val : arr) {\n        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);\n    }\n    for (Entry < Character, Integer > entry : map.entrySet ()) {\n        if (entry.getValue () > 1) {\n            Character key = entry.getKey ();\n            Object value = entry.getValue ();\n            System.out.println (key + \":\" + value);\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":177,"func":"def main():\n    name = \"AnuvratAnuvrat\"\n    arr = list(name)\n    map = {}\n    for val in arr:\n        if val in map:\n            map[val] += 1\n        else:\n            map[val] = 1\n    for entry in map.items():\n        if entry[1] > 1:\n            key = entry[0]\n            value = entry[1]\n            print(str(key) + \":\" +str(value))\n\nmain()","lang":"py"}
{"idx":178,"func":" \npublic int solution (int N) {\n    int result = 0;\n    while (N > 0) {\n        if ((N & 1) == 1) {\n            int temp = 0;\n            while ((N>>= 1) > 0 && ((N & 1) != 1)) {\n                temp ++;\n            }\n            result = Math.max (result, temp);\n        } else {\n            N>>= 1;\n        }\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":179,"func":"def solution(N):\n    \n    result = 0\n    while (N > 0):\n        if (N & 1) == 1:\n            temp = 0 \n            while (N>>1 > 0 and (N & 1) != 1):\n                temp += 1 \n                N >>= 1 \n            \n            result = max(result, temp)\n        else:\n            N >>= 1 \n            \n    return result","lang":"py"}
{"idx":180,"func":" \npublic void run () {\n    if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n        return;\n    }\n    synchronized (lock) {\n        bar.getShell ().pack (true);\n        orgSize [0] = bar.getShell ().getSize ().y;\n        currentSize [0] = orgSize [0];\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":181,"func":"def run(self):\n    if bar.isDisposed() or bar.getShell().isDisposed():\n        return\n    with lock:\n        bar.getShell().pack(True)\n        orgSize[0] = bar.getShell().getSize().y \n        currentSize[0] = orgSize[0]","lang":"py"}
{"idx":182,"func":" \npublic static void main (String [] args) throws IOException {\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.print (\"Enter String\");\n    String s = br.readLine ();\n    System.out.print (\"Enter Integer:\");\n    try {\n        int i = Integer.parseInt (br.readLine ());\n    } catch (NumberFormatException nfe) {\n        System.err.println (\"Invalid Format!\");\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":183,"func":"def main():\n  try:\n    s = input('Enter string:\\n')\n    i = int(input('Enter Integer:\\n'))\n  except ValueError:\n    print('Invalid Format!')\n\nif __name__ == '__main__':\n  main()","lang":"py"}
{"idx":184,"func":" \npublic static void main (String [] args) throws IOException {\n    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File (\"big.jar\")));\n    zos.putNextEntry (new ZipEntry (\"resource.txt\"));\n    zos.write (\"not too much in here\".getBytes ());\n    zos.closeEntry ();\n    zos.putNextEntry (new ZipEntry (\"largeFile.out\"));\n    for (int i = 0;\n    i < 10000000; i ++) {\n        zos.write ((int) (Math.round (Math.random () * 100) + 20));\n    }\n    zos.closeEntry ();\n    zos.close ();\n}","lang":"java"}
{"idx":185,"func":"from zipfile import *\nwith ZipFile('big.jar', 'w') as zf:\n    zf.write('resource.txt', compress_type=ZIP_DEFLATED)\n    with zf.open('resource.txt', 'w') as wf:\n        wf.write(b\"not too much in here\") \n    zf.write('largeFile.out', compress_type=ZIP_DEFLATED)\n    with zf.open('largeFile.out', 'w') as wf:\n        for i in range(10000000):\n            wf.write(int(round(random.random()*100)+20)) \n \n","lang":"py"}
{"idx":186,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":187,"func":"def getName (value): \n    buffer = \"\"\n    high, low = \"\", \"\"\n    if len(value) < getPartDivider(): \n        high, low = \"\", value\n    else: \n        index = len(value) - getPartDivider()\n        high, low = value[:index], value[index:]\n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n    if highName != \"\":\n        buffer = highName + SEPARATOR + getToken() \n        if lowName != \"\":\n            buffer += SEPARATOR\n    if lowName != \"\":\n        buffer += lowName\n    return buffer","lang":"py"}
{"idx":188,"func":" \npublic void dispatchEvent (Event event) {\n    checkNotNull (event);\n    CancellableEvent cancellableEvent = null;\n    boolean cancellable;\n    if (cancellable = event instanceof CancellableEvent) {\n        cancellableEvent = (CancellableEvent) event;\n        checkArgument (cancellableEvent.isCancelled ());\n    }\n    fireEvents (false, event, cancellableEvent, cancellable);\n    fireEvents (true, event, cancellableEvent, cancellable);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":189,"func":"def dispatchEvent (event):\n    if (event == None):\n        raise ValueError('Event cannot be null')\n\n    cancellableEvent = None\n    cancellable = False\n    if (isinstance(event,CancellableEvent)):\n        cancellableEvent = event\n        if (not cancellableEvent.isCancelled()):\n            raise ValueError('Event must have been cancelled prior to dispatching')\n\n    fireEvents(False, event, cancellableEvent, cancellable)\n    fireEvents(True, event, cancellableEvent, cancellable)","lang":"py"}
{"idx":190,"func":" \npublic static final void main (String...args) {\n    Node tree = new Node ();\n    tree.value = \"root\";\n    Node [] n = {new Node (), new Node ()};\n    tree.nodes = n;\n    tree.nodes [0].value = \"leftish\";\n    tree.nodes [1].value = \"rightish-leafy\";\n    Node [] nn = {new Node ()};\n    tree.nodes [0].nodes = nn;\n    tree.nodes [0].nodes [0].value = \"off-leftish-leaf\";\n    System.out.println (Arrays.toString (list (tree, args [0]).toArray ()));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":191,"func":"def main(args):\n    tree = Node()\n    tree.value = \"root\"\n    \n    n = [Node(), Node()]\n    tree.nodes = n\n    \n    tree.nodes[0].value = \"leftish\"\n    tree.nodes[1].value = \"rightish-leafy\"\n    \n    nn =[Node()]\n    tree.nodes[0].nodes = nn\n    tree.nodes[0].nodes[0].value = \"off-leftish-leaf\"\n    \n    nodes = list(tree, args[0]).toArray()\n    print(Arrays.toString(nodes))","lang":"py"}
{"idx":192,"func":" \npublic void type (String text) {\n    char c;\n    for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":193,"func":"def type(text): \n  c = ''\n  for ii in range(0, len(text)):\n    c = text[ii]\n    if (31 >= c <= 129):\n      pressControlKey(c)\n    else:\n      typeAsciiCode(c)","lang":"py"}
{"idx":194,"func":" \npublic static void main (String...args) {\n    processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0\", \"1.30\", \"0001.00\", \"3.141592\"};\n    for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));\n}","lang":"java"}
{"idx":195,"func":"","lang":"py"}
{"idx":196,"func":" \npublic static void main (String [] args) {\n    String pass = \"admin\";\n    Scanner input = new Scanner (System.in);\n    System.out.print (\"Insert the admin pass: \");\n    String test = input.nextLine ();\n    if (pass.equals (test)) {\n        System.out.print (\"Access granted\");\n    } else {\n        for (int i = 1;\n        i < 3; i ++) {\n            System.out.print (\"You have \" + i + \" try(es): \");\n            test = input.nextLine ();\n            if (pass.equals (test)) {\n                System.out.print (\"Access granted\");\n                break;\n            } else if (i == 2) {\n                System.out.print (\"Access denied\");\n            }\n        }\n    }\n}","lang":"java"}
{"idx":197,"func":"pass = \"admin\"\ntest = input(\"Insert the admin pass: \")\nif pass == test:\n  print(\"Access granted\")\nelse:\nfor i in range(1, 3):\n  test = input(f\"You have {i} try(es): \")\n  if pass == test:\n    print(\"Access granted\")\n    break\n  elif i == 2:\n    print(\"Access denied\")\n    \n","lang":"py"}
{"idx":198,"func":" \npublic TerminalGui [] getTerminalGuis () {\n    Components comps [] = getComponents ();\n    List < TerminalGui > list = new ArrayList < TerminalGui > ();\n    if (comps == null) return null;\n    for (Component c : comps) {\n        if (c instanceof TerminalGui) {\n            list.add (c);\n        }\n    }\n    return list.toArray (new TerminalGui [list.size ()]);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":199,"func":"def getTerminalGuis():\n    comps = getComponents()\n    list = []\n    if comps is None:\n        return None\n    for c in comps:\n        if isinstance(c, TerminalGui):\n            list.append(c)\n    return list","lang":"py"}
{"idx":200,"func":" \nprivate static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {\n    SimpleDateFormat dateFormatUtc = new SimpleDateFormat (\"yyyy-MMM-dd HH:mm:ss\");\n    dateFormatUtc.setTimeZone (TimeZone.getTimeZone (\"UTC\"));\n    SimpleDateFormat dateFormatLocal = new SimpleDateFormat (\"yyyy-MMM-dd HH:mm:ss\");\n    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));\n    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));\n    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);\n    Date expiresDate = new Date (expires);\n    System.out.println (\"savedDate \\t\\t\" + savedDate + \"\\nexpiresDate \\t\" + expiresDate);\n    return savedDate.before (expiresDate);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":201,"func":"def has_date_expired(days, saved_date):\n    date_format_utc = '%Y-%m-%d %H:%M:%S'\n    date_format_local = '%Y-%m-%d %H:%M:%S'\n    saved_date = datetime.strptime(datetime.strftime(saved_date, date_format_utc), date_format_local)\n    date_time_now = datetime.strptime(datetime.strftime(datetime.now(), date_format_utc), date_format_local)\n    expires = date_time_now.timestamp() + 86400 * days\n    expires_date = datetime.fromtimestamp(expires)\n    print(f\"savedDate \\t\\t {saved_date} \\nexpiresDate \\t {expires_date}\")\n    return saved_date < expires_date","lang":"py"}
{"idx":202,"func":" \nstatic int countClamps (int [] arr) {\n    int result = 0;\n    int prev = 0;\n    boolean same = false;\n    for (int i = 0;\n    i < arr.length; i ++) {\n        if (i == 0) {\n            prev = arr [i];\n        } else {\n            if (arr [i] == prev) {\n                if (! same) {\n                    result ++;\n                    same = true;\n                }\n            } else {\n                prev = arr [i];\n                same = false;\n            }\n        }\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":203,"func":"def countClamps (arr): \n    result = 0\n    prev = 0\n    same = False\n    for i in range(len(arr)): \n        if i == 0: \n            prev = arr[i]\n        else: \n            if arr[i] == prev:\n                if not same:\n                    result += 1\n                    same = True\n            else: \n                prev = arr[i]\n                same = False\n    return result","lang":"py"}
{"idx":204,"func":" \nstatic int findMIN (int [] A, int c) {\n    int x = A [c];\n    int position = c;\n    while (c < A.length) {\n        if (x > A [c]) {\n            x = A [c];\n            position = c;\n        }\n        c ++;\n    }\n    return position;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":205,"func":"def findMIN(A, c):\n    x = A[c]\n    position = c\n    while c < len(A):\n        if x > A[c]:\n            x = A[c]\n            position = c\n        c+=1\n    return position","lang":"py"}
{"idx":206,"func":" \npublic static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {\n    VTDGen vg = new VTDGen ();\n    if (! vg.parseFile (\"input.xml\", false)) return;\n    VTDNav vn = vg.getNav ();\n    AutoPilot ap = new AutoPilot (vn);\n    XMLModifier xm = new XMLModifier (vn);\n    ap.selectXPath (\"\/*\/place[@id=\\\"p14\\\" and   @initialMarking=\\\"2\\\"]\/@initialMarking\");\n    int i = 0;\n    while ((i = ap.evalXPath ()) != - 1) {\n        xm.updateToken (i + 1, \"499\");\n    }\n    xm.output (\"new.xml\");\n}","lang":"java"}
{"idx":207,"func":"from com.ximpleware import VTDGen, VTDNav, AutoPilot, XMLModifier, VTDException\nif __name__ == \"__main__\":\n    vg = VTDGen()\n    if not vg.parseFile(\"input.xml\", False):\n        return \n    vn = vg.getNav()\n    ap = AutoPilot(vn)\n    xm = XMLModifier(vn)\n    ap.selectXPath(\"\/*\/place[@id=\\\"p14\\\" and   @initialMarking=\\\"2\\\"]\/@initialMarking\")\n    i = 0\n    while ((i = ap.evalXPath ()) != - 1):\n        xm.updateToken(i+1, \"499\")\n    xm.output(\"new.xml\")\n","lang":"py"}
{"idx":208,"func":" \npublic static void setCursorColor (EditText view,@ColorInt\nint color) {\n    try {\n        Field field = TextView.class.getDeclaredField (\"mCursorDrawableRes\");\n        field.setAccessible (true);\n        int drawableResId = field.getInt (view);\n        field = TextView.class.getDeclaredField (\"mEditor\");\n        field.setAccessible (true);\n        Object editor = field.get (view);\n        Drawable drawable = ContextCompat.getDrawable (view.getContext (), drawableResId);\n        drawable.setColorFilter (color, PorterDuff.Mode.SRC_IN);\n        Drawable [] drawables = {drawable, drawable};\n        field = editor.getClass ().getDeclaredField (\"mCursorDrawable\");\n        field.setAccessible (true);\n        field.set (editor, drawables);\n    } catch (Exception ignored) {\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":209,"func":"def setCursorColor(view, color):\n    try:\n        field = TextView.class.getDeclaredField(\"mCursorDrawableRes\")\n        field.setAccessible(True)\n        drawableResId = field.getInt(view)\n        field = TextView.class.getDeclaredField(\"mEditor\")\n        field.setAccessible(True)\n        editor = field.get(view)\n        drawable = ContextCompat.getDrawable(view.getContext(), drawableResId)\n        drawable.setColorFilter(color, PorterDuff.Mode.SRC_IN)\n        drawables = [drawable, drawable]\n        field = editor.getClass().getDeclaredField(\"mCursorDrawable\")\n        field.setAccessible(True)\n        field.set(editor, drawables)\n    except:\n        pass","lang":"py"}
{"idx":210,"func":" \nprivate static long factorial (int n, int depth) {\n    String spaces = repeat (' ', depth);\n    System.out.print (spaces);\n    System.out.println (\"factorial(\" + n + \")\");\n    if (n <= 1) {\n        System.out.println (spaces + \" return 1\");\n        return 1;\n    }\n    long fac = factorial (n - 1, depth + 1);\n    System.out.print (spaces);\n    System.out.printf (\"return %d * %d = %d%n\", n, fac, n * fac);\n    return n * fac;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":211,"func":"def factorial(n, depth=0): \n    spaces = ' ' * depth \n    print(spaces + 'factorial(' + str(n) + ')')\n    if n <= 1: \n        print(spaces + 'return 1')\n        return 1\n    fac = factorial(n-1, depth + 1)\n    print(spaces + 'return ' + str(n) + ' * ' + str(fac) + ' = ' + str(n * fac))\n    return n * fac","lang":"py"}
{"idx":212,"func":" \npublic int [] zeroFront (int [] nums) {\n    if (nums == null) {\n        return null;\n    }\n    int zerosPos = 0;\n    for (int i = 0;\n    i < nums.length; ++ i) {\n        if (nums [i] == 0) {\n            num [i] = num [zerosPos];\n            num [zerosPos] = 0;\n            ++ zerosPos;\n        }\n    }\n    return num;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":213,"func":"def zeroFront(nums):\n  if nums is None:\n    return None\n  \n  zeros_pos = 0\n  \n  for i in range(len(nums)):\n    if nums[i] == 0:\n      nums[i], nums[zeros_pos] = nums[zeros_pos], nums[i]\n      zeros_pos += 1\n      \n  return nums","lang":"py"}
{"idx":214,"func":" \npublic static void main (String [] args) {\n    int first, second;\n    Scanner myScanner = new Scanner (System.in);\n    System.out.println (\"Enter first integer: \");\n    int numOne;\n    numOne = myScanner.nextInt ();\n    System.out.println (\"You have keyed in \" + numOne);\n    System.out.println (\"Enter second integer: \");\n    int numTwo;\n    numTwo = myScanner.nextInt ();\n    System.out.println (\"You have keyed in \" + numTwo);\n    Random generator = new Random ();\n    int num = (int) (Math.random () * numTwo);\n    System.out.println (\"Random number: \" + ((num > numOne) ? num : numOne + num));\n}\n\n\n\n\n\n\nimport random\n\n","lang":"java"}
{"idx":215,"func":"def main():\n    first = int(input(\"Enter first integer: \"))\n    print(\"You have keyed in\", first)\n\n    second = int(input(\"Enter second integer: \"))\n    print(\"You have keyed in\", second)\n\n    random_number = random.randint(first, second)\n    print(\"Random number:\",  random_number)\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":216,"func":" \npublic static String translateToEnglish (String phrase) {\n    if (phrase == null) {\n        return null;\n    }\n    String finished = phrase.replace ('4', 'a').replace ('1', 'l').replace ('2', 'z').replace ('5', 's').replace ('8', 'b').replace ('0', 'o').replace ('7', 't').replace (\"|_|\", \"u\").replace (\"3\", \"e\");\n    finished = finished.replace (\" e \", \" 3 \");\n    if (finished.startsWith (\"e \")) {\n        finished = \"3 \" + finished.substring (2);\n    }\n    if (finished.endsWith (\" e\")) {\n        finished = finished.substring (0, finished.length () - 2) + \" 3\";\n    }\n    return finished;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":217,"func":"def translate_to_english(phrase):\n    if phrase is None:\n        return None\n    finished = phrase.replace('4','a').replace('1','l').replace('2','z').replace('5','s').replace('8','b').replace('0','o').replace('7','t').replace(\"|_|\",\"u\").replace(\"3\",\"e\")\n    finished = finished.replace(\" e \",\" 3 \")\n    if finished.startswith(\"e \"):\n        finished = \"3 \" + finished[2:]\n    if finished.endswith(\" e\"):\n        finished = finished[:-2] + \" 3\"\n    return finished","lang":"py"}
{"idx":218,"func":" \npublic int read () throws IOException {\n    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {\n        return - 1;\n    }\n    if (! lineBuffered) {\n        fillLineBuffer ();\n    }\n    if (lineBuffered) {\n        if (currentLineReadPos == 0) {\n            lineBuffered = false;\n        }\n        return currentLine [currentLineReadPos --];\n    }\n    return 0;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":219,"func":"def read(self):\n    if (self.currentFilePos <= 0 and self.currentBufferPos < 0 and self.currentLineReadPos < 0):\n        return -1\n    if not self.lineBuffered:\n        self.fillLineBuffer()\n    if self.lineBuffered:\n        if (self.currentLineReadPos == 0):\n            self.lineBuffered = False \n        return self.currentLine[self.currentLineReadPos--]\n    return 0","lang":"py"}
{"idx":220,"func":" \npublic static int singleNumber (int [] nums) {\n    int answer = 0;\n    ArrayList al = new ArrayList ();\n    for (int i = 0;\n    i < nums.length; i ++) {\n        al.add (nums [i]);\n    }\n    for (int i = 0;\n    i < nums.length; i ++) {\n        int test = nums [i];\n        if (al.indexOf (test) == al.lastIndexOf (test)) {\n            answer = nums [i];\n        }\n    }\n    return answer;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":221,"func":"def singleNumber(arr): \n    ans = 0\n    seen = []\n    for i in range(len(arr)): \n        if arr[i] not in seen: \n            seen.append(arr[i]) \n        else: \n            ans = arr[i] \n            break\n    return ans","lang":"py"}
{"idx":222,"func":" \npublic boolean isAnagram (String s1, String s2) {\n    StringBuilder sb1 = new StringBuilder ();\n    StringBuilder sb2 = new StringBuilder ();\n    if (s1.length () != s2.length ()) return false;\n    char arr1 [] = s1.toCharArray ();\n    char arr2 [] = s2.toCharArray ();\n    Arrays.sort (arr1);\n    Arrays.sort (arr2);\n    for (char c : arr1) {\n        sb1.append (c);\n    }\n    for (char c : arr2) {\n        sb2.append (c);\n    }\n    System.out.println (sb1.toString ());\n    System.out.println (sb2.toString ());\n    if (sb1.toString ().equals (sb2.toString ())) return true;\n    else return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":223,"func":"def isAnagram(s1, s2): \n    if len(s1) != len(s2): \n        return False  \n    s1_list = list(s1) \n    s2_list = list(s2)  \n    s1_list.sort() \n    s2_list.sort()  \n    if s1_list == s2_list: \n        return True  \n    return False","lang":"py"}
{"idx":224,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":225,"func":"def getName(value):\n    buffer = []\n    high, low = (\"\", value) if len(value) < getPartDivider() else (value[:len(value)-getPartDivider()], value[-getPartDivider():])\n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n    if highName != \"\":\n        buffer.append(highName)\n        buffer.append(SEPARATOR)\n        buffer.append(getToken())\n        if lowName != \"\":\n            buffer.append(SEPARATOR)\n    if lowName != \"\":\n        buffer.append(lowName)\n    return \"\".join(buffer)","lang":"py"}
{"idx":226,"func":" \npublic void copyFolder (File src, File dest) throws IOException {\n    try (Stream < Path > stream = Files.walk (src.toPath ())) {\n        stream.forEachOrdered (sourcePath -> {\n            try {\n                Files.copy (sourcePath, src.toPath ().resolve (dest.toPath ().relativize (sourcePath)));\n            } catch (Exception e) {\n                e.printStackTrace ();\n            }\n        });\n    }\n}\n\n\n\n\n\n\nimport os\nimport shutil\n","lang":"java"}
{"idx":227,"func":"def copyFolder(src, dest):\n    try:\n        for item in os.listdir(src):\n            s = os.path.join(src, item)\n            d = os.path.join(dest, item)            \n            if os.path.isdir(s):\n                shutil.copytree(s, d)\n            else:\n                shutil.copy2(s, d)\n    except (IOError) as e:\n        print(\"I\/O error: \" + e)","lang":"py"}
{"idx":228,"func":" \n            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));\n                if (dstFile.exists ()) return FileVisitResult.CONTINUE;\n                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();\n                Files.copy (file, dstFile.toPath ());\n                return FileVisitResult.CONTINUE;\n            }}\n        );\n    } catch (IOException e) {\n        return;\n    }\n    return;\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":229,"func":"def visitFile(path, attrs):\n    strAbsPathDest = \"\"\n    strAbsPathSrc = \"\"\n    dstFile = File(strAbsPathDest + path.toAbsolutePath().toString().substring(strAbsPathSrc.length()))\n    if dstFile.exists():\n        return FileVisitResult.CONTINUE\n    if not dstFile.getParentFile().exists():\n        dstFile.getParentFile().mkdirs()\n    Files.copy(path, dstFile.toPath())\n    return FileVisitResult.CONTINUE","lang":"py"}
{"idx":230,"func":" \npublic void run () {\n    try {\n        synchronized (lock) {\n            for (int i = 0;\n            i < 5; i ++) {\n                while (id != token % N) lock.wait ();\n                System.out.println (id + \" \" + i);\n                token ++;\n                lock.notifyAll ();\n            }\n        }\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":231,"func":"def run(lock):\n    try:\n        with lock:\n            for i in range(0, 5):\n                while id != token % N:\n                    lock.wait()\n                print(id, i)\n                token += 1\n                lock.notify_all()\n    except InterruptedError as e:\n        print(e)","lang":"py"}
{"idx":232,"func":" \npublic static void main (String args []) {\n    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;\n    System.out.println (\"Enter the number of elements: \");\n    Scanner sc = new Scanner (System.in);\n    int [] arr = new int [sc.nextInt ()];\n    System.out.println (\"Enter the elements: \");\n    for (int i = 0;\n    i < arr.length; i ++) {\n        int next = sc.nextInt ();\n        arr [i] = next;\n    }\n    for (int j = 0;\n    j < arr.length; j ++) {\n        if (arr [j] > max) max = arr [j];\n        else if (arr [j] < min) min = arr [j];\n    }\n    System.out.println (\"Highest Value in array: \" + max);\n    System.out.println (\"Smallest Value in array: \" + min);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":233,"func":"def findMinMax(arr):\n    max = - float('inf')\n    min = float('inf')\n    for num in arr:\n        if num > max:\n            max = num\n        elif num < min:\n            min = num\n    return (min, max)\ndef main():\n    arr_len = int(input(\"Enter the number of elements: \"))\n    arr = [int(input(\"Enter the elements:\")) for i in range(arr_len)]\n    min, max = findMinMax(arr)\n    print(\"Smallest Value in array:\", min)\n    print(\"Highest Value in array:\", max)\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":234,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Time (s)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    drawRotate (gg, getWidth (), (getHeight () + width) \/ 2, 270, string);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":235,"func":"def paintComponent(self,g):\n  super().paintComponent(g)\n  gg = g.create()\n  gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)\n  font = Font(\"Arial\", Font.PLAIN, 15)\n  string = \"Time (s)\"\n  fontMeterics = g.getFontMetrics(font)\n  width = fontMeterics.stringWidth(string)\n  height = fontMeterics.getHeight()\n  gg.setFont(font)\n  self.drawRotated(gg, self.getWidth(),(self.getHeight() + width)\/2, 270, string)","lang":"py"}
{"idx":236,"func":" \npublic void unzip () {\n    try {\n        FileInputStream fin = new FileInputStream (_zipFile);\n        ZipInputStream zin = new ZipInputStream (fin);\n        ZipEntry ze = null;\n        while ((ze = zin.getNextEntry ()) != null) {\n            Log.v (\"Decompress\", \"Unzipping \" + ze.getName ());\n            if (ze.isDirectory ()) {\n                _dirChecker (ze.getName ());\n            } else {\n                FileOutputStream fout = new FileOutputStream (_location + ze.getName ());\n                BufferedOutputStream bufout = new BufferedOutputStream (fout);\n                byte [] buffer = new byte [1024];\n                int read = 0;\n                while ((read = zin.read (buffer)) != - 1) {\n                    bufout.write (buffer, 0, read);\n                }\n                bufout.close ();\n                zin.closeEntry ();\n                fout.close ();\n            }\n        }\n        zin.close ();\n        Log.d (\"Unzip\", \"Unzipping complete. path :  \" + _location);\n    } catch (Exception e) {\n        Log.e (\"Decompress\", \"unzip\", e);\n        Log.d (\"Unzip\", \"Unzipping failed\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":237,"func":"def unzip():\n    try:\n        fin = open(_zipFile, 'rb')\n        zin = zipfile.ZipInputStream(fin)\n        ze = None\n        while (ze = zin.getNextEntry()) != None:\n            print(\"Decompress: Unzipping\" + ze.getName ())\n            if ze.is_dir():\n                _dir_checker(ze.getName())\n            else:\n                fout = open(_location + ze.getName(), 'wb')\n                buff_out = io.BufferedWriter(fout)\n                buff = 1024\n                read = 0\n                while (read = zin.read(buffer)) != -1:\n                    buff_out.write(buffer, 0, read)\n                buff_out.close()\n                zin.closeEntry()\n                fout.close()\n        zin.close()\n        print(\"Unzip: Unzipping Completer. Path: \" + _location)\n    except Exception as e:\n        print(\"Decompress: Unzip\" + e)\n        print(\"Unzip: Unzipping failed\")","lang":"py"}
{"idx":238,"func":" \npublic static void main (String [] args) {\n    JFrame frame = new JFrame (\"GridBagLayout Demo\");\n    frame.setLayout (new GridBagLayout ());\n    JLabel label = new JLabel (\"Demo Label\");\n    JTextField textField = new JTextField (\"Demo Text\");\n    JComboBox comboBox = new JComboBox (new String [] {\"hello\", \"goodbye\", \"foo\"});\n    GridBagConstraints cons = new GridBagConstraints ();\n    cons.insets = new Insets (10, 10, 10, 10);\n    frame.add (label, cons);\n    cons.gridx = 1;\n    cons.weightx = 1;\n    cons.weighty = 1;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.HORIZONTAL;\n    frame.add (textField, cons);\n    cons.gridx = 2;\n    cons.weightx = 0;\n    cons.weighty = 0;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.NONE;\n    frame.add (comboBox, cons);\n    frame.pack ();\n    frame.setVisible (true);\n}","lang":"java"}
{"idx":239,"func":"import tkinter as tk\nroot = tk.Tk()\nlabel = tk.Label(root, text=\"Demo Label\")\nlabel.pack(padx=10, pady=10)\ntext_field = tk.Entry(root, width=20, borderwidth=3)\ntext_field.pack(padx=10, pady=10)\n","lang":"py"}
{"idx":240,"func":" \nstatic long countLines (InputStream is) throws IOException {\n    try (LineNumberReader lnr = new LineNumberReader (new InputStreamReader (is))) {\n        char [] buf = new char [8192];\n        int n, previousN = - 1;\n        while ((n = lnr.read (buf)) != - 1) {\n            previousN = n;\n        }\n        int ln = lnr.getLineNumber ();\n        if (previousN == - 1) {\n            return 0;\n        } else {\n            char lastChar = buf [previousN - 1];\n            if (lastChar == '\\n' || lastChar == '\\r') {\n                return ln;\n            }\n        }\n        return ln + 1;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":241,"func":"def countLines(is):\n  try:\n    lnr = LineNumberReader(InputStreamReader(is))\n    buf = [0] * 8192\n    previousN = -1\n    while (n := lnr.read(buf)) != -1:\n      previousN = n\n    ln = lnr.getLineNumber()\n    if previousN == -1:\n      return 0\n    else:\n      lastChar = buf[previousN - 1]\n      if lastChar == \"\\n\" or lastChar == \"\\r\":\n        return ln\n    return ln + 1\n  finally:\n    is.close()","lang":"py"}
{"idx":242,"func":" \npublic int solution (int X, int [] A) {\n    HashSet < Integer > hset = new HashSet < Integer > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":243,"func":"def solution (X, A):\n    myHashSet = set ()\n    for i in range (len (A)):\n        if (A[i] <= X):\n            myHashSet.add (A[i])\n        if (len (myHashSet) == X):\n            return i\n    return - 1","lang":"py"}
{"idx":244,"func":" \npublic static void main (String [] args) {\n    List < Character > characters = new ArrayList < Character > ();\n    for (char c = 'a';\n    c <= 'z'; c ++) {\n        characters.add (c);\n    }\n    List < String > allStrings = new ArrayList < String > ();\n    for (Character c : characters) {\n        for (Character d : characters) {\n            for (Character e : characters) {\n                for (Character f : characters) {\n                    String s = \"\" + c + d + e + f;\n                    allStrings.add (s);\n                }\n            }\n        }\n    }\n    System.out.println (allStrings.size ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":245,"func":"def main():\n   characters = []\n   for i in range(ord('a'), ord('z')+1):\n      characters.append(chr(i))\n\n   allStrings = []\n   for c in characters:\n      for d in characters:\n         for e in characters:\n            for f in characters:\n               s = c+d+e+f\n               allStrings.append(s)\n\n   print(len(allStrings))\n\nif __name__ == \"__main__\":\n   main()","lang":"py"}
{"idx":246,"func":" \nprotected void paintComponent (Graphics g) {\n    long start = System.nanoTime ();\n    super.paintComponent (g);\n    int w = this.getWidth ();\n    int h = this.getHeight ();\n    g.drawImage (background, 0, 0, this);\n    double theta = 2 * Math.PI * index ++ \/ 64;\n    g.setColor (Color.blue);\n    rect.setRect ((int) (Math.sin (theta) * w \/ 3 + w \/ 2 - RADIUS), (int) (Math.cos (theta) * h \/ 3 + h \/ 2 - RADIUS), 2 * RADIUS, 2 * RADIUS);\n    g.fillOval (rect.x, rect.y, rect.width, rect.height);\n    g.setColor (Color.white);\n    if (frameCount == FRAMES) {\n        averageTime = totalTime \/ FRAMES;\n        totalTime = 0;\n        frameCount = 0;\n    } else {\n        totalTime += System.nanoTime () - start;\n        frameCount ++;\n    }\n    String s = String.format (\"%1$5.3f\", averageTime \/ 1000000d);\n    g.drawString (s, 5, 16);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":247,"func":"def paintComponent(self, g):\n    start = System.nanoTime() \n    super().paintComponent(g) \n    w = self.getWidth()\n    h = self.getHeight()\n    g.drawImage(background, 0, 0, self)\n    theta = 2 * math.pi * self.index \/ 64\n    g.setColor(Color.blue) \n    rect.setRect(int(math.sin(theta) * w \/ 3 + w \/ 2 - RADIUS),\n                 int(math.cos(theta) * h \/ 3 + h \/ 2 - RADIUS),\n                 2 * RADIUS,\n                 2 * RADIUS)\n    g.fillOval(rect.x, rect.y, rect.width, rect.height)\n    g.setColor(Color.white)\n    if self.frameCount == FRAMES:\n        self.averageTime = self.totalTime \/ FRAMES\n        self.totalTime = 0\n        self.frameCount = 0\n    else:\n        self.totalTime += System.nanoTime() - start \n        self.frameCount += 1\n    s = '{0:5.3f}'.format(self.averageTime \/ 1000000d)\n    g.drawString(s, 5, 16)","lang":"py"}
{"idx":248,"func":" \npublic static boolean isPrime (int n) {\n    if ((n & 1) == 0) {\n        return n == 2;\n    }\n    if (n < 9) {\n        return n > 1;\n    }\n    return isStrongProbablePrime (n, 2) && isStrongProbablePrime (n, 7) && isStrongProbablePrime (n, 61);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":249,"func":"def isPrime(n):\n    if n & 1 == 0:\n        return n == 2\n    if n < 9:\n        return n > 1\n    return isStrongProbablePrime(n, 2) and isStrongProbablePrime(n, 7) and isStrongProbablePrime(n, 61)","lang":"py"}
{"idx":250,"func":" \npublic static void shuffleArray (int [] array) {\n    List < Integer > list = new ArrayList < > ();\n    for (int i : array) {\n        list.add (i);\n    }\n    Collections.shuffle (list);\n    for (int i = 0;\n    i < list.size (); i ++) {\n        array [i] = list.get (i);\n    }\n}\n\n\n#====================\n\n\n","lang":"java"}
{"idx":251,"func":"def shuffleArray(array):\n  from random import shuffle\n  shuffle(array)","lang":"py"}
{"idx":252,"func":" \npublic static String validName (Scanner input, Scanner histogram) {\n    String user = \"\";\n    String name = input.next ();\n    if (histogram.findInLine (name) != null) {\n        System.out.println (\"This name exist\");\n    } else {\n        System.out.println (\"Name not found\");\n        user = validName (input, histogram);\n    }\n    return user;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":253,"func":"def validName(input, histogram): \n  user = \"\" \n  name = input.read() \n  if histogram.search(name) != None:  \n    print(\"This name exist\") \n  else: \n    print(\"Name not found\") \n    user = validName(input, histogram) \n  return user","lang":"py"}
{"idx":254,"func":" \nstatic int findMIN (int [] A, int c) {\n    int x = A [c];\n    int position = c;\n    while (c < A.length) {\n        if (x > A [c]) {\n            x = A [c];\n            position = c;\n        }\n        c ++;\n    }\n    return position;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":255,"func":"def findMIN(A, c):\n    x = A[c] \n    position = c\n    while c < len(A):\n        if x > A[c]: \n            x = A[c] \n            position = c\n        c += 1\n\n    return position","lang":"py"}
{"idx":256,"func":" \nNode reverse (Node n, Node p) {\n    if (n == null) return null;\n    if (n.next == null) {\n        n.next = p;\n        return n;\n    }\n    Node r = reverse (n.next, n);\n    n.next = p;\n    return r;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":257,"func":"def reverse(n, p):\n    if n is None:\n        return None\n    if n.next is None:\n        n.next = p\n        return n\n    r = reverse(n.next, n)\n    n.next = p\n    return r","lang":"py"}
{"idx":258,"func":" \npublic void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) {\n    super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    switch (requestCode) {\n        case REQUEST_READ_PHONE_STATE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_ACCESS_FINE_LOCATION :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_WRITE_STORAGE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            }}\n}\n\n\n\n\n\n","lang":"java"}
{"idx":259,"func":"def onRequestPermissionsResult(requestCode, permissions, grantResults):\n    super().onRequestPermissionsResult(requestCode, permissions, grantResults)\n    if requestCode == REQUEST_READ_PHONE_STATE:\n        if len(grantResults) > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            print(\"Permission granted.\")\n            finish()\n            startActivity(getIntent())\n        else:\n            print(\"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\")\n    elif requestCode == REQUEST_ACCESS_FINE_LOCATION:\n        if len(grantResults) > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            print(\"Permission granted.\")\n            finish()\n            startActivity(getIntent())\n        else:\n            print(\"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\")\n    elif requestCode == REQUEST_WRITE_STORAGE:\n        if len(grantResults) > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            print(\"Permission granted.\")\n            finish()\n            startActivity(getIntent())\n        else:\n            print(\"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\")","lang":"py"}
{"idx":260,"func":" \nprivate void transform (Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (styleOld.getFont (this.workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":261,"func":"def transform(hash_in, style_old, style_new):\n    style_new.alignment = style_old.alignment\n    style_new.border_bottom = style_old.border_bottom\n    style_new.border_left = style_old.border_left\n    style_new.border_right = style_old.border_right\n    style_new.border_top = style_old.border_top\n    style_new.data_format = transform(style_old.data_format)\n    style_new.fill_background_color = style_old.fill_background_color\n    style_new.fill_foreground_color = style_old.fill_foreground_color\n    style_new.fill_pattern = style_old.fill_pattern\n    style_new.font = transform(style_old.font)\n    style_new.hidden = style_old.hidden\n    style_new.indention = style_old.indention\n    style_new.locked = style_old.locked\n    style_new.vertical_alignment = style_old.vertical_alignment\n    style_new.wrap_text = style_old.wrap_text\n    style_map[hash_in] = style_new","lang":"py"}
{"idx":262,"func":" \n        public void run () {\n            new Game ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":263,"func":"def run():\n    game = Game()","lang":"py"}
{"idx":264,"func":" \npublic static void pack (String sourceDirPath, String zipFilePath) throws IOException {\n    Path p = Files.createFile (Paths.get (zipFilePath));\n    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p))) {\n        Path pp = Paths.get (sourceDirPath);\n        Files.walk (pp).filter (path -> ! Files.isDirectory (path)).forEach (path -> {\n            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());\n            try {\n                zs.putNextEntry (zipEntry);\n                Files.copy (path, zs);\n                zs.closeEntry ();\n            } catch (IOException e) {\n                System.err.println (e);\n            }\n        });\n    }\n}\n\n\n\n\n\nimport os\nimport zipfile\n\n","lang":"java"}
{"idx":265,"func":"def pack(source_dir_path, zip_name):\n    # the zip archive\n    zip_file = zipfile.ZipFile(zip_name, 'w', zipfile.ZIP_DEFLATED)\n    \n    # walk the entire folder tree and compress the files in each folder\n    root_len = len(source_dir_path)\n    for root, dirs, files in os.walk(source_dir_path):\n        archive_root = os.path.abspath(root)[root_len:]\n        for f in files:\n            fullpath = os.path.join(root, f)\n            archive_name = os.path.join(archive_root, f)\n            zip_file.write(fullpath, archive_name, zipfile.ZIP_DEFLATED)\n\n    zip_file.close()","lang":"py"}
{"idx":266,"func":" \npublic static int solution (Integer number) {\n    String binary = Integer.toBinaryString (number);\n    String [] gaps = binary.split (\"1\");\n    String biggestGap = \"\";\n    for (int i = 0;\n    i < (binary.endsWith (\"1\") ? gaps.length : gaps.length - 1); i ++) {\n        if (gaps [i].contains (\"0\") && gaps [i].length () > biggestGap.length ()) biggestGap = gaps [i];\n    }\n    return biggestGap.length ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":267,"func":"def solution(number): \n    binary = bin(number) \n    gaps = binary.split(\"1\") \n    biggest_gap = \"\" \n    for i in range(len(binary.endswith(\"1\") ? gaps : gaps[:-1])): \n        if \"0\" in gaps[i] and len(gaps[i]) > len(biggest_gap): \n            biggest_gap = gaps[i] \n     return len(biggest_gap)","lang":"py"}
{"idx":268,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    ExecutorService executorService = Executors.newFixedThreadPool (4);\n    for (int i = 0;\n    i < 4; i ++) {\n        executorService.execute (new MyRunnable (expensiveObjects));\n    }\n    executorService.shutdown ();\n    executorService.awaitTermination (5, TimeUnit.SECONDS);\n    System.out.println (\"Final: \" + outputCount.get ());\n}\n\n\n\n\n\n\nimport threading \nfrom queue import Queue \nimport time \n\nexpensiveObjects = Queue() \nexpensiveObjects.put(object()) \nexpensiveObjects.put(object()) \nexpensiveObjects.put(object()) \nexpensiveObjects.put(object()) \n\n","lang":"java"}
{"idx":269,"func":"def MyRunnable(expensiveObjects): \n\t# Code Here \n\nexecutorService = threading.Thread(target=MyRunnable, args=(expensiveObjects,)) \nexecutorService.start() \nexecutorService.join(timeout=5) \n\nprint(\"Final: \" + outputCount.get())","lang":"py"}
{"idx":270,"func":" \npublic void tick (float delta) {\n    Entity removeEntity = null;\n    for (Entity e : entities) {\n        e.tick (delta);\n        if (e.checkStrength ()) {\n            removeEntity = e;\n            break;\n        }\n    }\n    if (removeEntity != null) {\n        entities.remove (removeEntity);\n    }\n    player.tick (delta);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":271,"func":"def tick(delta):\n    remove_entity = None\n    for e in entities:\n        e.tick(delta)\n        if(e.checkStrength()):\n            remove_entity = e\n            break\n    if(remove_entity != None):\n        entities.remove(remove_entity)\n    player.tick(delta)","lang":"py"}
{"idx":272,"func":" \npublic static void main (String...a) {\n    System.out.print (\"Enter the String\");\n    Scanner sc = new Scanner (System.in);\n    String st = sc.nextLine ();\n    int [] ar = new int [256];\n    for (int i = 0;\n    i < st.length (); i ++) {\n        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        char ch = (char) i;\n        if (ar [i] > 0) {\n            if (ar [i] == 1) {\n                System.out.print (ch);\n            } else {\n                System.out.print (ch + \"\" + ar [i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":273,"func":"def main(args): \n    print(\"Enter the String:\")\n    st = input()\n    ar = [0] * 256\n\n    for i in range(len(st)):\n        ar[ord(st[i])] = ar[ord(st[i])] + 1\n    \n    for i in range(256):\n        c = chr(i)\n        if ar[i] > 0:\n            if ar[i] == 1:\n                print(c, end = \"\")\n            else:\n                print(c + str(ar[i]), end = \"\")","lang":"py"}
{"idx":274,"func":" \npublic void actionPerformed (ActionEvent arg0) {\n    if (! dirty) {\n        JFileChooser ch = getFileChooser ();\n        int result = ch.showOpenDialog (gui);\n        if (result == JFileChooser.APPROVE_OPTION) {\n            try {\n                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());\n                setImage (bi);\n            } catch (IOException e) {\n                showError (e);\n                e.printStackTrace ();\n            }\n        }\n    } else {\n        JOptionPane.showMessageDialog (gui, \"TODO - prompt save image..\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":275,"func":"def actionPerformed(arg0): \n  if not dirty: \n    ch = getFileChooser() \n    result = ch.showOpenDialog(gui) \n    if result == JFileChooser.APPROVE_OPTION: \n      try: \n        bi = ImageIO.read(ch.getSelectedFile()) \n        setImage(bi) \n      except IOException as e:\n        showError(e) \n        e.printStackTrace() \n  else: \n    JOptionPane.showMessageDialog(gui,\"TODO - prompt save image..\")","lang":"py"}
{"idx":276,"func":" \npublic static boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) {\n        return false;\n    }\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();\n    char [] c1 = s1.toCharArray ();\n    char [] c2 = s2.toCharArray ();\n    Arrays.sort (c1);\n    Arrays.sort (c2);\n    String sc1 = new String (c1);\n    String sc2 = new String (c2);\n    return sc1.equals (sc2);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":277,"func":"def isAnagram(s1, s2): \n    if len(s1) != len(s2): \n        return False\n  \n    s1 = s1.lower() \n    s2 = s2.lower() \n    s1 = sorted(s1) \n    s2 = sorted(s2) \n\n    if s1 == s2: \n        return True\n    else: \n        return False","lang":"py"}
{"idx":278,"func":" \npublic String inputStreamToString (InputStream inputStream) throws IOException {\n    String newLine = System.getProperty (\"line.separator\");\n    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));\n    StringBuilder result = new StringBuilder (UTF_8);\n    String line;\n    boolean flag = false;\n    while ((line = reader.readLine ()) != null) {\n        result.append (flag ? newLine : \"\").append (line);\n        flag = true;\n    }\n    return result.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":279,"func":"def inputStreamToString(inputStream):\n    newLine = sys.getProperty('line.separator')\n    reader = BufferedReader(InputStreamReader(inputStream, UTF_8))\n    result = []\n    line = reader.readLine()\n    while line:\n        result.append(line)\n        line = reader.readLine()\n    return line.join(result)","lang":"py"}
{"idx":280,"func":" \npublic void inOrder () {\n    if (m_root == null) {\n        return;\n    }\n    Stack < BSTNode > myStack = new Stack < BSTNode > ();\n    BSTNode current = m_root;\n    while (current != null) {\n        myStack.push (current);\n        current = current.getLeft ();\n    }\n    while (! myStack.isEmpty ()) {\n        current = (BSTNode) myStack.pop ();\n        System.out.print (current.getInfo () + \" \");\n        if (current.getRight () != null) {\n            current = current.getRight ();\n            while (current != null) {\n                myStack.push (current);\n                current = current.getLeft ();\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":281,"func":"def inOrder (m_root):\n    if m_root is None:\n        return\n    myStack = []\n    current = m_root\n    while current is not None:\n        myStack.append (current)\n        current = current.getLeft ()\n    while len(myStack) > 0:\n        current = myStack.pop ()\n        print (current.getInfo (), \" \")\n        if current.getRight () is not None:\n            current = current.getRight ()\n            while current is not None:\n                myStack.append (current)\n                current = current.getLeft ()","lang":"py"}
{"idx":282,"func":" \npublic int read () throws IOException {\n    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {\n        return - 1;\n    }\n    if (! lineBuffered) {\n        fillLineBuffer ();\n    }\n    if (lineBuffered) {\n        if (currentLineReadPos == 0) {\n            lineBuffered = false;\n        }\n        return currentLine [currentLineReadPos --];\n    }\n    return 0;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":283,"func":"def read():\n    try:\n        if currentFilePos <= 0 and currentBufferPos < 0 and currentLineReadPos < 0:\n            return -1\n        if not lineBuffered:\n            fillLineBuffer()\n        if lineBuffered:\n            if currentLineReadPos == 0:\n                lineBuffered = False\n            return currentLine[currentLineReadPos - 1]\n        return 0\n    except IOException as e:\n        print(e)","lang":"py"}
{"idx":284,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":285,"func":"def filter(source, start, end, dest, dstart, dend):   \n    dotPos = -1\n    len = len(dest) \n    for i in range(len): \n        c = dest[i] \n        if c == '.'or c == ',': \n            dotPos = i\n            break\n    if dotPos >= 0: \n        if source == \".\" or source == \",\": \n            return \"\" \n        if dend <= dotPos:  \n            return None \n        if len - dotPos > decimalDigits: \n            return \"\"           \n    return None","lang":"py"}
{"idx":286,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":287,"func":"def solution(X, A):\n    len = len(A)\n    if X > len: \n        return -1\n    isFilled = [0] * X \n    jumped = 0\n    for i in range(len):\n        x = A[i]\n        if x <= X:\n            if isFilled[x-1] == 0:\n                isFilled[x-1] = 1\n                jumped += 1\n                if jumped == X:\n                    return i\n    return -1","lang":"py"}
{"idx":288,"func":" \n        public void run () {\n            ValidateRevalidateRepaint rVR = new ValidateRevalidateRepaint ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":289,"func":"def run():\n    rVR = ValidateRevalidateRepaint()","lang":"py"}
{"idx":290,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Time (s)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    drawRotate (gg, getWidth (), (getHeight () + width) \/ 2, 270, string);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":291,"func":"def paintComponent(self, g):\n    super().paintComponent (g)\n    gg = g.create_graphics()\n    gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)\n    font = Font(\"Arial\", Font.PLAIN, 15)\n    string = \"Time (s)\"\n    metrics = g.getFontMetrics(font)\n    width = metrics.stringWidth(string)\n    height = metrics.getHeight()\n    gg.setFont(font)\n    drawRotate(gg, self.getWidth(), (self.getHeight() + width) \/ 2, 270, string)","lang":"py"}
{"idx":292,"func":" \npublic static void main (String [] args) {\n    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};\n    Map < Integer, Integer > counts = new HashMap < > ();\n    for (Integer i : array) {\n        if (counts.get (i) == null) {\n            counts.put (i, 1);\n        } else {\n            counts.put (i, counts.get (i) + 1);\n        }\n    }\n    List < Integer > cs = new ArrayList < Integer > (counts.values ());\n    Collections.sort (cs);\n    int minVal = cs.get (0);\n    List < Integer > minElements = new ArrayList < > ();\n    for (Entry < Integer, Integer > entry : counts.entrySet ()) {\n        if (entry.getValue () == minVal) {\n            minElements.add (entry.getKey ());\n        }\n    }\n    for (Integer i : minElements) {\n        System.out.println (\"Element: \" + i + \" Number of occurences: \" + minVal);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":293,"func":"def main():\n    array = [1, 2, 3, 3, 2, 2, 4, 4, 5, 4]\n    counts = {}\n    for i in array:\n        if i not in counts:\n            counts[i] = 1\n        else:\n            counts[i] += 1\n    cs = list(counts.values())\n    cs.sort()\n    minVal = cs[0]\n    minElements = []\n    for key, value in counts.items():\n        if value == minVal:\n            minElements.append(key)\n    for i in minElements:\n        print(\"Element: \", i, \"Number of occurences: \", minVal)\n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":294,"func":" \npublic static void main (String [] args) {\n    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};\n    int t = 4;\n    int count = 0;\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= t) {\n            count ++;\n        }\n    }\n    int [] B = new int [count];\n    int [] C = new int [A.length - count];\n    for (int i = 0, j = 0, k = 0;\n    i < A.length; i ++) {\n        if (A [i] <= t) {\n            B [j] = A [i];\n            System.out.println (\"B = \" + B [j]);\n            j ++;\n        } else {\n            C [k] = A [i];\n            System.out.println (\"C = \" + C [k]);\n            k ++;\n        }\n    }\n}","lang":"java"}
{"idx":295,"func":"A = [9, 5, 4, 3, 2, 1, 34, 53]\n","lang":"py"}
{"idx":296,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":297,"func":"def solution(X, A):\n    len_A = len(A)\n    if X > len_A:\n        return -1\n    isFilled = [0]*X\n    jumped = 0\n    for i in range(len_A):\n        x = A[i]\n        if x <= X:\n            if isFilled[x-1] == 0:\n                isFilled[x-1] =1\n                jumped += 1\n                if jumped == X:\n                    return i\n    return -1","lang":"py"}
{"idx":298,"func":" \npublic static void main (String [] args) {\n    Test t = new Test ();\n    String [] allQueryStrings = new String [] {\"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz);\", \"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,bbb,ccc);\", \"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,'bb(,)b',ccc);\", \"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,'bb),(b',ccc);\"};\n    for (String queryString : allQueryStrings) {\n        System.out.println (queryString);\n        for (String values : t.extractValues (queryString)) {\n            System.out.println (values);\n        }\n    }\n}\n\n\n\n\n\n\n \n","lang":"java"}
{"idx":299,"func":"def main (args):\n  t = Test ()\n  all_query_strings = [\"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz);\", \"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,bbb,ccc);\", \"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,'bb(,)b',ccc);\", \"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,'bb),(b',ccc);\"]\n  \n  for query_string in all_query_strings:\n    print (query_string)\n    for value in t.extract_values (query_string):\n      print (value)","lang":"py"}
{"idx":300,"func":" \npublic static void main (String [] args) {\n    Scanner input = new Scanner (System.in);\n    String number = \"\";\n    int a = 0, total = 0;\n    boolean even = false;\n    System.out.println (\"Enter a number\");\n    number = input.nextLine ();\n    for (int counter = 0;\n    counter < number.length (); counter ++) {\n        a = Integer.parseInt (number.substring (counter, counter + 1));\n        if (a % 2 != 0 || a == 1) {\n            even = false;\n            total += a;\n        }\n    }\n    System.out.println (\"The sum is \" + total);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":301,"func":"def main():\n    number = input('Enter a number: ')\n    total = 0\n    even = False\n    for digit in number:\n        a = int(digit)\n        if a % 2 != 0 or a == 1:\n            even = False\n            total += a\n    print (\"The sum is \" + str(total))","lang":"py"}
{"idx":302,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (name.isEmpty ()) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || decimalValue.isEmpty ())) {\n        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n    }\n    return name;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":303,"func":"def getName (value):\n    negative = False\n    if value.startswith('-'):\n        negative = True\n        value = value[1:]\n\n    decimals = value.find('.')\n    decimalValue = None\n    if decimals >= 0:\n        decimalValue = value[decimals+1:]\n        value = value[:decimals]\n\n    name = processor.getName(value)\n    if not name:\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n    \n    if decimalValue and not decimalValue.isEmpty():\n        name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    return name","lang":"py"}
{"idx":304,"func":" \npublic void onRequestPermissionsResult (int requestCode,@NonNull\nString [] permissions,@NonNull\nint [] grantResults) {\n    if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":305,"func":"def onRequestPermissionsResult(self, requestCode, permissions, grantResults):\n    if requestCode == self.mRequestCode:\n        if len(grantResults) > 0:\n            for grantResult in grantResults:\n                if grantResult != packageManager.PERMISSION_GRANTED:\n                    self.mRequestPermissionListener.onFailed()\n                    return\n            self.mRequestPermissionListener.onSuccess()\n        else:\n            self.mRequestPermissionListener.onFailed()","lang":"py"}
{"idx":306,"func":" \npublic static void main (String [] args) {\n    Scanner input = new Scanner (System.in);\n    double length = 0.39370;\n    System.out.println (\"Welcome to simple convertor.\");\n    boolean cont = true;\n    while (cont) {\n        System.out.println (\"Pick an option and its corresponding letter to select.\");\n        System.out.println (\"Farenheight to Celsius: f\");\n        System.out.println (\"Celsius to Farenheight: c\");\n        System.out.println (\"Inches to Centimeters: i\");\n        System.out.println (\"Centimeters to Inches: ce\");\n        System.out.println (\"\");\n        System.out.println (\"Make your choice: \");\n        String choice = input.nextLine ();\n        if (choice.equals (\"f\")) {\n            float farenheight;\n            System.out.println (\"Enter temperatue in Fahrenheit: \");\n            farenheight = input.nextInt ();\n            farenheight = ((farenheight - 32) * 5) \/ 9;\n            System.out.println (\"Temperatue in Celsius = \" + farenheight);\n        } else if (choice.equals (\"c\")) {\n            float celsius;\n            System.out.println (\"Enter temperatue in Celsius: \");\n            celsius = input.nextInt ();\n            celsius = ((celsius) * 18 \/ 10) + 32;\n            System.out.println (\"Temperatue in Farenheight = \" + celsius);\n        } else if (choice.equals (\"i\")) {\n            double inches;\n            System.out.println (\"Enter length in Inches: \");\n            inches = input.nextInt ();\n            inches = (inches \/ length);\n            System.out.println (\"Length in Centimeters = \" + inches);\n        } else if (choice.equals (\"ce\")) {\n            double centimeters;\n            System.out.println (\"Enter length in Centimeters: \");\n            centimeters = input.nextInt ();\n            centimeters = (centimeters * length);\n            System.out.println (\"Length in Inches is = \" + length);\n        }\n        choice = input.nextLine ();\n        if (\"redo\".equals (choice)) {\n            cont = true;\n        } else {\n            cont = false;\n        }\n    }\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":307,"func":"def main(args):\n    length = 0.39370\n    print(\"Welcome to simple convertor.\") \n    cont = True\n    while(cont): \n        print(\"Pick an option and its corresponding letter to select.\")\n        print(\"Farenheight to Celsius: f\")\n        print(\"Celsius to Farenheight: c\")\n        print(\"Inches to Centimeters: i\")\n        print(\"Centimeters to Inches: ce\")\n        print(\"\\nMake your choice: \")\n        choice = input()\n        if choice == 'f':\n            farenheight = float(input(\"Enter temperatue in Fahrenheit: \")) \n            farenheight = ((farenheight - 32) * 5) \/ 9\n            print(\"Temperature in Celsius = \" + str(farenheight))\n        elif choice == 'c':\n            celsius = float(input(\"Enter temperatue in Celsius: \"))\n            celsius = ((celsius) * 18 \/ 10) + 32\n            print(\"Temperature in Fahrenheit = \" + str(celsius))\n        elif choice == 'i':\n            inches = float(input(\"Enter length in Inches: \")) \n            inches = (inches \/ length)\n            print(\"Length in Centimeters = \" + str(inches))\n        elif choice == 'ce':\n            centimeters = float(input(\"Enter length in Centimeters: \"))\n            centimeters = (centimeters * length)\n            print(\"Length in Inches is = \" + str(length))\n        choice = input()\n        if choice == 'redo':\n            cont = True\n        else:\n            cont = False","lang":"py"}
{"idx":308,"func":" \npublic static void main (String [] args) {\n    String str = \"AAABBBBCC\";\n    int length = str.length ();\n    StringBuilder sb = new StringBuilder ();\n    int count = 1;\n    for (int i = 0;\n    i < length; i ++) {\n        if (i == length - 1) {\n            sb.append (str.charAt (i) + \"\" + count);\n            break;\n        }\n        if (str.charAt (i) == str.charAt (i + 1)) {\n            count ++;\n        } else {\n            sb.append (str.charAt (i) + \"\" + count);\n            count = 1;\n        }\n    }\n    System.out.println (sb.toString ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":309,"func":"def main(): \n    str = 'AAABBBBCC'\n    length = len(str)\n    sb = []\n    count = 1\n    for i in range(length):\n        if i == length-1:\n            sb.append(str[i]+str(count))\n            break\n        if str[i] == str[i+1]:\n            count +=1\n        else:\n            sb.append(str[i]+str(count))\n            count = 1\n    print(\"\".join(sb))\n\nmain()","lang":"py"}
{"idx":310,"func":" \npublic V get (K...keys) {\n    if (keys == null) {\n        return value;\n    }\n    if (expectedNumberOfKeys == - 1) {\n        return null;\n    }\n    if (expectedNumberOfKeys == 0) {\n        return value;\n    }\n    if (expectedNumberOfKeys != keys.length) {\n        throw new IllegalArgumentException (\"Expecting \" + expectedNumberOfKeys + \" keys.  Was \" + keys.length);\n    }\n    Map < K, Map > currentMap = topMap;\n    for (int i = 0;\n    i < keys.length - 1; i ++) {\n        currentMap = (Map) getDefault (currentMap, keys [i]);\n    }\n    V result = (V) getDefault (currentMap, keys [keys.length - 1]);\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":311,"func":"def get(self, *keys):\n  if keys is None:\n    return self.value\n  if self.expectedNumberOfKeys == -1:\n    return None\n  if self.expectedNumberOfKeys == 0:\n    return self.value\n  if self.expectedNumberOfKeys != len(keys):\n    raise IllegalArgumentException(\"Expecting \" + str(self.expectedNumberOfKeys) + \" keys. Was \" + str(len(keys)))\n    \n  currentMap = self.topMap\n  for i in range(len(keys)-1):\n    currentMap = self._getDefault(currentMap, keys[i])\n    \n  result = self._getDefault(currentMap, keys[len(keys)-1])\n  return result","lang":"py"}
{"idx":312,"func":" \npublic Node reverse (Node previous, Node current) {\n    if (previous == null) return null;\n    if (previous.equals (head)) previous.setNext (null);\n    if (current == null) {\n        head = previous;\n        return head;\n    } else {\n        Node temp = current.getNext ();\n        current.setNext (previous);\n        reverse (current, temp);\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":313,"func":"def reverse(previous, current):\n\tif previous is None:\n\t\treturn None\n\n\tif previous is head:\n\t\tprevious.next = None\n\n\tif current is None:\n\t\thead = previous\n\t\treturn head\n\telse:\n\t\ttemp = current.next\n\t\tcurrent.next = previous\n\t\treverse(current, temp)\n\t\t\n\treturn None","lang":"py"}
{"idx":314,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Time (s)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    drawRotate (gg, getWidth (), (getHeight () + width) \/ 2, 270, string);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":315,"func":"def paintComponent(self, g):\n    super().paintComponent(g)\n    g2d = g as Graphics2D\n    g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, \n                          RenderingHints.VALUE_ANTIALIAS_ON)\n    font = Font('Arial', Font.PLAIN, 15)\n    string = 'Time (s)'\n    metrics = g.getFontMetrics(font)\n    width = metrics.stringWidth(string)\n    height = metrics.getHeight()\n    g2d.setFont(font)\n    self.drawRotate(g2d, self.getWidth(), (self.getHeight()+width)\/\/2, 270, string)","lang":"py"}
{"idx":316,"func":" \nprivate HSSFFont transform (HSSFWorkbook workbookNew, XSSFFont fontOld) {\n    HSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":317,"func":"def transform (workbookNew, fontOld):\n    fontNew = workbookNew.createFont()\n    fontNew.setBoldweight(fontOld.getBoldweight())\n    fontNew.setCharSet(fontOld.getCharSet())\n    fontNew.setColor(fontOld.getColor())\n    fontNew.setFontName(fontOld.getFontName())\n    fontNew.setFontHeight(fontOld.getFontHeight())\n    fontNew.setItalic(fontOld.getItalic())\n    fontNew.setStrikeout(fontOld.getStrikeout())\n    fontNew.setTypeOffset(fontOld.getTypeOffset())\n    fontNew.setUnderline(fontOld.getUnderline())\n    return fontNew","lang":"py"}
{"idx":318,"func":" \npublic static int solution (int X, int [] A) {\n    int [] counter = new int [X + 1];\n    int ans = - 1;\n    int x = 0;\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (counter [A [i]] == 0) {\n            counter [A [i]] = A [i];\n            x += 1;\n            if (x == X) {\n                return i;\n            }\n        }\n    }\n    return ans;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":319,"func":"def solution(X, A):\n  counter = [0] * (X + 1)\n  ans = -1\n  x = 0\n  for i in range(len(A)):\n    if counter[A[i]] == 0:\n      counter[A[i]] = A[i]\n      x += 1\n      if x == X:\n        return i\n   \n  return ans","lang":"py"}
{"idx":320,"func":" \n        public double applyAsDouble (double operand) {\n            return operand * x \/ i ++;\n        }}\n    ).limit (n).sum ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":321,"func":"def sum_function(operand,x,i,n):\n    total = 0\n    for limit in range(n):\n        total += operand * x \/ i\n        i += 1\n    \n    return total","lang":"py"}
{"idx":322,"func":" \npublic static boolean isBalanced (String str) {\n    boolean result = false;\n    if (str.length () < 2) return false;\n    Stack < Character > stack = new Stack < > ();\n    for (int i = 0;\n    i < str.length (); i ++) {\n        char ch = str.charAt (i);\n        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {\n            continue;\n        }\n        if (parenthesesMapLeft.containsKey (ch)) {\n            stack.push (ch);\n        } else {\n            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {\n                result = true;\n            } else {\n                return false;\n            }\n        }\n    }\n    if (! stack.isEmpty ()) return result = false;\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":323,"func":"def isBalanced(str): \n    if len(str) < 2: \n        return False\n\n    stack = [] \n\n    for i in range(0, len(str)): \n        ch = str[i] \n\n        if ch not in parenthesesMapRight and ch not in parenthesesMapLeft: \n            continue\n        if ch in parenthesesMapLeft: \n            stack.append(ch) \n        else: \n            if not stack: \n                return False\n            if stack.pop() != parenthesesMapRight[ch]: \n                return False\n        result = True\n  \n    # Check Empty Stack \n    if stack: \n        result = False\n    return result","lang":"py"}
{"idx":324,"func":" \npublic static void main (String [] args) {\n    try {\n        Robot robot = new Robot ();\n        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));\n        ImageIO.write (bi, \"jpg\", new File (\"C:\/imageTest.jpg\"));\n    } catch (AWTException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":325,"func":"try: \n    from PIL import ImageGrab\n    im = ImageGrab.grab()\n    im.save(\"C:\/imageTest.jpg\")\nexcept Exception as e:\n    print(e)\n","lang":"py"}
{"idx":326,"func":" \npublic static void main (String [] args) {\n    String pass = \"admin\";\n    Scanner input = new Scanner (System.in);\n    System.out.print (\"Insert the admin pass: \");\n    String test = input.nextLine ();\n    if (pass.equals (test)) {\n        System.out.print (\"Access granted\");\n    } else {\n        for (int i = 1;\n        i < 3; i ++) {\n            System.out.print (\"You have \" + i + \" try(es): \");\n            test = input.nextLine ();\n            if (pass.equals (test)) {\n                System.out.print (\"Access granted\");\n                break;\n            } else if (i == 2) {\n                System.out.print (\"Access denied\");\n            }\n        }\n    }\n}","lang":"java"}
{"idx":327,"func":"passcode = \"admin\"\ninput_str = input(\"Insert the admin pass: \")\nif input_str == passcode:\n    print(\"Access granted\")\nelse:\n    for i in range(1,3):\n        input_str = input(f\"You have {i} try(es): \")\n        if input_str == passcode:\n            print(\"Access granted\")\n            break\n    else:\n        print(\"Access denied\")\n","lang":"py"}
{"idx":328,"func":" \npublic static void main (String [] args) {\n    Scanner scan = new Scanner (System.in);\n    int numOfItems = 0;\n    System.out.print (\"Enter How Many Items: \");\n    try {\n        numOfItems = Integer.parseInt (scan.nextLine ().trim ());\n    } catch (NumberFormatException e) {\n        System.out.print (\"Number of items you entered is invalid!\");\n        System.exit (0);\n    }\n    Grocery grocery = new Grocery (numOfItems);\n    for (int i = 0;\n    i < numOfItems; i ++) {\n        System.out.print (\"Enter Item \" + (i + 1) + \" : \");\n        if (! grocery.addItem (scan.nextLine ())) {\n            System.out.println (\"First Item Duplicate Detected!\");\n            System.exit (0);\n        }\n    }\n    scan.close ();\n    System.out.println (grocery.toString ());\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":329,"func":"def main():\n    numOfItems = 0\n    print(\"Enter How Many Items: \")\n    try:\n        numOfItems = int(input().strip())\n    except ValueError:\n        print(\"Number of items you entered is invalid!\")\n        sys.exit(0)\n        \n    grocery = Grocery(numOfItems)\n    for x in range(numOfItems):\n        print(\"Enter Item \" + str(x + 1) + \" : \")\n        if not grocery.addItem(input()):\n            print(\"First Item Duplicate Detected!\")\n            sys.exit(0)\n\n    print(str(grocery))","lang":"py"}
{"idx":330,"func":" \npublic static void main (String [] args) {\n    try {\n        ArrayList < String > sentences = null;\n        sentences = new ArrayList < String > ();\n        sentences.add (\"Mary and Meera are my classmates.\");\n        sentences.add (\"Mary and Meera are my classmates.\");\n        sentences.add (\"Meera and Mary are my classmates.\");\n        sentences.add (\"Alice and Bobe are not my classmates.\");\n        sentences.add (\"Some totally different sentence.\");\n        wordAnalyser (sentences);\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":331,"func":"def main(args):\n    try:\n        sentences = None\n        sentences = []\n        sentences.append(\"Mary and Meera are my classmates.\")\n        sentences.append(\"Mary and Meera are my classmates.\")\n        sentences.append(\"Meera and Mary are my classmates.\")\n        sentences.append(\"Alice and Bobe are not my classmates.\")\n        sentences.append(\"Some totally different sentence.\")\n        wordAnalyser(sentences)\n    except Exception as e:\n        print(e)","lang":"py"}
{"idx":332,"func":" \npublic static void main (String args []) {\n    GSMConnect gsm = new GSMConnect (comPort);\n    if (gsm.init ()) {\n        try {\n            System.out.println (\"Initialization Success\");\n            gsm.connect ();\n            Thread.sleep (5000);\n            gsm.checkStatus ();\n            Thread.sleep (5000);\n            gsm.sendMessage (\"+91XXXXXXXX\", \"Trial Success\");\n            Thread.sleep (1000);\n            gsm.hangup ();\n            Thread.sleep (1000);\n            gsm.closePort ();\n            gsm.outCommand ();\n            System.exit (1);\n        } catch (Exception e) {\n            e.printStackTrace ();\n        }\n    } else {\n        System.out.println (\"Can't init this card\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":333,"func":"def main(args):\n    gsm = GSMConnect(comPort)\n    if gsm.init():\n        try:\n            print(\"Initialization Success\")\n            gsm.connect()\n            time.sleep(5)\n            gsm.checkStatus()\n            time.sleep(5)\n            gsm.sendMessage(\"+91XXXXXXXX\", \"Trial Success\")\n            time.sleep(1)\n            gsm.hangup()\n            time.sleep(1)\n            gsm.closePort()\n            gsm.outCommand()\n            sys.exit(1)\n        except Exception as e:\n            e.print_stack_trace()\n    else:\n        print(\"Can't init this card\")","lang":"py"}
{"idx":334,"func":" \npublic static boolean check (double x1, double y1, double x2, double y2, double x, double y) {\n    if (x1 == x2) {\n        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);\n    }\n    double m = (y2 - y1) \/ (x2 - x1);\n    double r1 = x1 + m * y1;\n    double r2 = x2 + m * y2;\n    double r = x + m * y;\n    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":335,"func":"def check(x1,y1,x2,y2,x,y)\n  if (x1 == x2)\n    return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);\n  m = (y2 - y1) \/ (x2 - x1)\n  r1 = x1 + m * y1\n  r2 = x2 + m * y2\n  r = x + m * y\n  return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1)\nend","lang":"py"}
{"idx":336,"func":" \nprivate String capitalizer (String word) {\n    String [] words = word.split (\" \");\n    StringBuilder sb = new StringBuilder ();\n    if (words [0].length () > 0) {\n        sb.append (Character.toUpperCase (words [0].charAt (0)) + words [0].subSequence (1, words [0].length ()).toString ().toLowerCase ());\n        for (int i = 1;\n        i < words.length; i ++) {\n            sb.append (\" \");\n            sb.append (Character.toUpperCase (words [i].charAt (0)) + words [i].subSequence (1, words [i].length ()).toString ().toLowerCase ());\n        }\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":337,"func":"def capitalizer(word):\n    words = word.split(\" \")\n    sb = ''\n    if len(words[0]):\n        sb += words[0][0].upper() + words[0][1:].lower()\n        for i in range(1, len(words)):\n            sb += \" \" + words[i][0].upper() + words[i][1:].lower()\n    return sb","lang":"py"}
{"idx":338,"func":" \nprivate void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, Integer hash, XSSFCellStyle styleOld, HSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (workbookNew, (XSSFFont) styleOld.getFont ()));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":339,"func":"def transform(workbookOld, workbookNew, hash, styleOld, styleNew):\n\tstyleNew.alignment = styleOld.alignment\n\tstyleNew.borderBottom = styleOld.borderBottom\n\tstyleNew.borderLeft = styleOld.borderLeft\n\tstyleNew.borderRight = styleOld.borderRight \n\tstyleNew.borderTop = styleOld.borderTop\n\tstyleNew.dataFormat = transform(workbookOld, workbookNew, styleOld.dataFormat)\n\tstyleNew.fillBackgroundColor = styleOld.fillBackgroundColor\n\tstyleNew.fillForegroundColor = styleOld.fillForegroundColor\n\tstyleNew.fillPattern = styleOld.fillPattern\n\tstyleNew.font = transform(workbookNew, styleOld.font)\n\tstyleNew.hidden = styleOld.hidden\n\tstyleNew.indention = styleOld.indention\n\tstyleNew.locked = styleOld.locked\n\tstyleNew.verticalAlignment = styleOld.verticalAlignment\n\tstyleNew.wrapText = styleOld.wrapText\n\tstyleMap[hash] = styleNew","lang":"py"}
{"idx":340,"func":" \nprivate void transform (HSSFCell cellOld, XSSFCell cellNew) {\n    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (! this.styleMap.containsKey (hash)) {\n        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":341,"func":"def transform(cellOld, cellNew):\n    cellNew.set_cell_comment(cellOld.get_cell_comment())\n    hash = cellOld.get_cell_style().hashCode()\n    if hash not in this.styleMap:\n        this.transform(hash, cellOld.get_cell_style(), this.worksbookNew.create_cell_style())\n    cellNew.set_cell_style(this.styleMap[hash])\n    \n    if cellOld.cell_type == Cell.CELL_TYPE_BLANK:\n        pass\n    elif cellOld.cell_type == Cell.CELL_TYPE_BOOLEAN:\n        cellNew.set_cell_value(cellOld.get_boolean_cell_value())\n    elif cellOld.cell_type == Cell.CELL_TYPE_ERROR:\n        cellNew.set_cell_value(cellOld.get_error_cell_value())\n    elif cellOld.cell_type == Cell.CELL_TYPE_FORMULA:\n        cellNew.set_cell_value(cellOld.get_cell_formula())\n    elif cellOld.cell_type == Cell.CELL_TYPE_NUMERIC:\n        cellNew.set_cell_value(cellOld.get_numeric_cell_value())\n    elif cellOld.cell_type == Cell.CELL_TYPE_STRING:\n        cellNew.set_cell_value(cellOld.get_string_cell_value())\n    else:\n        print(\"transform: Unknown cell type \" + cellOld.cell_type)","lang":"py"}
{"idx":342,"func":" \npublic int [] rotate (int [] nums, int k) {\n    if (k > nums.length) k = k % nums.length;\n    int [] result = new int [nums.length];\n    System.arraycopy (nums, k + 1, result, 0, k);\n    System.arraycopy (nums, 0, result, k + 1, nums.length - 1);\n    nums = result;\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":343,"func":"def rotate (nums, k):\n    if k > len(nums):\n        k = k % len(nums)\n    result = [0] * len(nums)\n    result[:k] = nums[-k:]\n    result[k:] = nums[:-k]\n    nums = result\n    return result","lang":"py"}
{"idx":344,"func":" \npublic static void main (String [] args) throws InterruptedException, ExecutionException {\n    CompletableFuture < String > future = readPage ();\n    CompletableFuture < Void > future2 = future.thenAccept (page -> {\n        System.out.println (page);\n        throw new IllegalArgumentException (\"unexpected exception\");\n    });\n    future2.exceptionally (e -> {\n        e.printStackTrace (System.err);\n        return null;\n    });\n}\n\n\n\n\n\nfrom concurrent.futures import ThreadPoolExecutor\nimport traceback\n\n\n","lang":"java"}
{"idx":345,"func":"def main_thread():\n    future = readPage()\n    future2 = future.thenAccept(page):\n        print(page)\n        raise IllegalArgumentException('unexpected exception')\n    )\n    future2.exceptionally(e):\n        traceback.print_exception(*e.args)\n        return None\n\nif __name__ == '__main__':\n    executor = ThreadPoolExecutor()\n    future = executor.submit(main_thread)\n    future.result()","lang":"py"}
{"idx":346,"func":" \npublic static boolean contains (String a, String b) {\n    boolean status = true;\n    Map < String, Integer > mapA = new HashMap < > ();\n    Map < String, Integer > mapB = new HashMap < > ();\n    for (char i : a.toCharArray ()) {\n        Integer val = mapA.get (\"\" + i);\n        if (val != null) {\n            mapA.put (\"\" + i, val + 1);\n        } else {\n            mapA.put (\"\" + i, 1);\n        }\n    }\n    for (char i : b.toCharArray ()) {\n        Integer val = mapB.get (\"\" + i);\n        if (val != null) {\n            mapB.put (\"\" + i, val + 1);\n        } else {\n            mapB.put (\"\" + i, 1);\n        }\n    }\n    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {\n        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {\n            status = false;\n        }\n    }\n    return status;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":347,"func":"def contains(a,b):\n    status = True\n    mapA = {}\n    mapB = {}\n    \n    for char in a:\n        val = mapA.get(char)\n        if val != None:\n            mapA[char] = val + 1\n        else:\n            mapA[char] = 1\n    \n    for char in b:\n        val = mapB.get(char)\n        if val != None:\n            mapB[char] = val + 1\n        else:\n            mapB[char] = 1\n    \n    for entry in mapA.items():\n        if mapB.get(entry[0]) == None or entry[1] > mapB.get(entry[0]):\n            status = False\n\n    return status","lang":"py"}
{"idx":348,"func":" \nprivate static void removeEven (int [] k, int n) {\n    int counter = 0;\n    for (int i = 0;\n    i < n; i ++) if (k [i] % 2 == 1) k [counter ++] = k [i];\n    for (int i = counter;\n    i < n; i ++) k [i] = 0;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":349,"func":"def remove_even (k, n):\n    counter = 0\n    for i in range(n):\n        if k[i] % 2 == 1:\n            k[counter] = k[i]\n            counter += 1\n    for i in range(counter, n):\n        k[i] = 0","lang":"py"}
{"idx":350,"func":" \n        public int read () throws IOException {\n            return bais.read ();\n        }}\n    ;\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":351,"func":"def read():\n  try:\n    return bais.read()\n  except IOException:\n    return -1","lang":"py"}
{"idx":352,"func":" \npublic static boolean isAnagram (String first, String second) {\n    String positive = first.toLowerCase ();\n    String negative = second.toLowerCase ();\n    if (positive.length () != negative.length ()) {\n        return false;\n    }\n    int [] counts = new int [26];\n    int diff = 0;\n    for (int i = 0;\n    i < positive.length (); i ++) {\n        int pos = (int) positive.charAt (i) - 97;\n        if (counts [pos] >= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [pos] ++;\n        int neg = (int) negative.charAt (i) - 97;\n        if (counts [neg] <= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [neg] --;\n    }\n    return diff == 0;\n}\n\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":353,"func":"def isAnagram(first, second):\n    positive = first.lower()\n    negative = second.lower()\n    if len(positive) != len(negative): \n        return False\n    counts = [0] * 26\n    diff = 0\n    for i in range(len(positive)):\n        pos = ord(positive[i]) - 97\n        if counts[pos] >= 0:\n            diff += 1\n        else:\n            diff -= 1\n        counts[pos] += 1\n        neg = ord(negative[i]) - 97\n        if counts[neg] <= 0:\n            diff += 1\n        else:\n            diff -= 1\n        counts[neg] -= 1\n    return diff == 0","lang":"py"}
{"idx":354,"func":" \npublic ResponseEntity < ? > match (@PathVariable\nString matchId,@RequestBody\nString body, HttpServletRequest request, HttpServletResponse response) {\n    Product p;\n    try {\n        p = service.getProduct (request.getProductId ());\n    } catch (Exception ex) {\n        return new ResponseEntity < String > (HttpStatus.BAD_REQUEST);\n    }\n    return new ResponseEntity (p, HttpStatus.OK);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":355,"func":"def match(matchId, body, request, response):\n    try: \n        p = service.getProduct(request.getProductId())\n    except Exception as ex:\n        return ResponseEntity(str(HttpStatus.BAD_REQUEST))\n    return ResponseEntity(p, HttpStatus.OK)","lang":"py"}
{"idx":356,"func":" \npublic static void main (String arg []) {\n    Integer [] v1 = {1, - 10, 3, 9, 7, 99, - 25};\n    Integer [] v2 = {1, - 10, 3, 9, 7, 99, - 25};\n    double p_int = ArrayMath.ScalarProduct (v1, v2);\n    Double [] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};\n    Double [] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};\n    Double p_double = ArrayMath.ScalarProduct (v1_d, v2_d);\n    System.out.println (\"p_int\uff1a\" + p_int);\n    System.out.println (\"p_double\uff1a\" + p_double);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":357,"func":"def main():\n    v1 = [1, -10, 3, 9, 7, 99, -25]\n    v2 = [1, -10, 3, 9, 7, 99, -25]\n    p_int = ArrayMath.scalar_product(v1, v2)\n    v1_d = [1.1, -10.5, 3.7, 9.98, 7.4, 9.9, -2.5]\n    v2_d = [1.1, -10.5, 3.7, 9.98, 7.4, 9.9, -2.5]\n    p_double = ArrayMath.scalar_product(v1_d, v2_d)\n    print(\"p_int: \", p_int)\n    print(\"p_double: \", p_double)\n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":358,"func":" \n        public void changed (ObservableValue < ? extends Bounds > observable, Bounds oldValue, Bounds newValue) {\n            if (oldHeight != newValue.getHeight ()) {\n                System.out.println (\"newValue = \" + newValue.getHeight ());\n                oldHeight = newValue.getHeight ();\n                textArea.setPrefHeight (textHolder.getLayoutBounds ().getHeight () + 20);\n            }\n        }}\n    );\n\n\n\n\n\n","lang":"java"}
{"idx":359,"func":"def changed(observable, old_value, new_value):\n    if old_value.get_height() != new_value.get_height():\n        print('new_value = {}'.format(new_value.get_height()))\n        old_value.set_height(new_value.get_height())\n        text_area.set_pref_height(text_holder.get_layout_bounds().get_height() + 20)","lang":"py"}
{"idx":360,"func":" \npublic static void main (String [] args) {\n    Scanner in = new Scanner (System.in);\n    int n = in.nextInt ();\n    int a [] [] = new int [n] [n];\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }\n    int l_sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        l_sum += a [i] [i];\n    }\n    int r_sum = 0;\n    for (int j = 0;\n    j < n; j ++) {\n        r_sum += a [j] [n - 1 - j];\n    }\n    int sum = l_sum + r_sum;\n    System.out.println (sum);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":361,"func":"def main():\n    n = int(input())\n    a = [[int(x) for x in input().split()] for _ in range(n)]\n    l_sum, r_sum = 0, 0\n    for i in range(n):\n        l_sum += a[i][i]\n        r_sum += a[i][n-1-i]\n    sum = l_sum + r_sum\n    print(sum)\n\nmain()","lang":"py"}
{"idx":362,"func":" \npublic static void main (String [] args) {\n    if (args.length != 2) {\n        System.out.println (\"usage: .\/zipf size skew\");\n        System.exit (- 1);\n    }\n    ZipfGenerator zipf = new ZipfGenerator (Integer.valueOf (args [0]), Double.valueOf (args [1]));\n    for (int i = 1;\n    i <= 10; i ++) {\n        System.out.println (i + \" \" + zipf.getProbability (i));\n    }\n    int hist [] = new int [12];\n    for (int i = 0;\n    i < 12; i ++) {\n        hist [i] = 0;\n    }\n    System.out.println (\"Testing the probability distribution:\");\n    int sum = 0;\n    for (int i = 1;\n    i <= 1000000; i ++) {\n        hist [zipf.next ()] ++;\n    }\n    for (int i = 0;\n    i < 12; i ++) System.out.println (i + \" \" + hist [i] \/ 1000000.0);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":363,"func":"def main(args):\n  if len(args) != 2:\n    print ('usage: .\/zipf size skew')\n    sys.exit(-1)\n  \n  zipf = ZipfGenerator(int(args[0]), float(args[1]))\n  \n  for i in range(1, 11):\n    print(str(i) + ' ' + print(zipf.getProbability(i)))\n  \n  hist = [0] * 12\n\n  print('Testing the probability distribution:')\n  sum = 0\n  for i in range(1, 1000000):\n    hist[zipf.next()] += 1\n  \n  for i in range(0, 12):\n    print(str(i) + ' ' + str(hist[i]\/1000000.0))","lang":"py"}
{"idx":364,"func":" \n                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);\n                    setToolTipText (\"Row \" + row + \" Column \" + column + \"\\nUsed to display a 'Tip' for a Component. \" + \"Typically components provide api to automate the process of \" + \"using ToolTips. For example, any Swing component can use the \" + \"JComponent  setToolTipText method to specify the text for a standard tooltip.\");\n                    return this;\n                }}\n            );\n\n\n\n\n\n","lang":"java"}
{"idx":365,"func":"def getTableCellRendererComponent(self, table, value, isSelected, hasFocus, row, column):\n        super().getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column)\n        self.setToolTipText(\"Row \" + str(row) + \" Column \" + str(column) + \"\\nUsed to display a 'Tip' for a Component. \" + \"Typically components provide api to automate the process of \" + \"using ToolTips. For example, any Swing component can use the \" + \"JComponent  setToolTipText method to specify the text for a standard tooltip.\")\n        return self","lang":"py"}
{"idx":366,"func":" \nprivate static boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) return false;\n    int [] seen = new int [256];\n    Arrays.fill (seen, 0);\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();\n    for (int i = 0;\n    i < s1.length (); i ++) {\n        seen [s1.charAt (i)] = seen [s1.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < s2.length (); i ++) {\n        if (seen [s2.charAt (i)] == 0) return false;\n        seen [s2.charAt (i)] = seen [s2.charAt (i)] - 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        if (seen [i] != 0) return false;\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":367,"func":"def isAnagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    seen = [0] * 256\n    s1 = s1.lower()\n    s2 = s2.lower()\n    for i in range(len(s1)):\n        seen[ord(s1[i])] += 1\n    for i in range(len(s2)):\n        if seen[ord(s2[i])] == 0:\n            return False\n        seen[ord(s2[i])] -= 1\n    for i in range(256):\n        if seen[i] != 0:\n            return False\n    return True","lang":"py"}
{"idx":368,"func":" \npublic static void bubbleSort (int [] numArray) {\n    int n = numArray.length;\n    int temp = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        for (int j = 1;\n        j < (n - i); j ++) {\n            if (numArray [j - 1] > numArray [j]) {\n                temp = numArray [j - 1];\n                numArray [j - 1] = numArray [j];\n                numArray [j] = temp;\n            }\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":369,"func":"def bubbleSort(numArray):\n    \n    n = len(numArray)\n    temp = 0\n    \n    for i in range(n):\n        for j in range(1, (n-i)):\n            if numArray[j-1] > numArray[j]:\n                temp = numArray[j-1]\n                numArray[j-1] = numArray[j]\n                numArray[j] = temp","lang":"py"}
{"idx":370,"func":" \npublic static void main (String [] args) {\n    System.out.println (\"Enter Number to convert into words\");\n    Scanner sc = new Scanner (System.in);\n    long num = sc.nextInt ();\n    int rem = 0;\n    int i = 0;\n    while (num > 0) {\n        if (i == 0) {\n            rem = (int) (num % 1000);\n            printText (rem);\n            num = num \/ 1000;\n            i ++;\n        } else if (num > 0) {\n            rem = (int) (num % 100);\n            if (rem > 0) text = denom.values () [i - 1] + \" \" + text;\n            printText (rem);\n            num = num \/ 100;\n            i ++;\n        }\n    }\n    if (i > 0) System.out.println (text);\n    else System.out.println (\"Zero\");\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":371,"func":"def main(): \n    print(\"Enter Number to convert into words:\") \n    num = int(input()) \n    rem = 0\n    i = 0\n      \n    while(num > 0): \n        if(i == 0): \n            rem = num % 1000\n            printText(rem) \n            num = num \/ 1000\n            i += 1\n              \n        elif(num > 0): \n            rem = num % 100\n            if(rem > 0): \n                text = denom.values()[i-1] + \" \" + text\n            printText(rem) \n            num = num \/ 100\n            i += 1\n          \n    if i > 0: \n        print(text)\n    else: \n        print(\"Zero\")","lang":"py"}
{"idx":372,"func":" \nprivate void type (char character) {\n    handleSpecialCharacter (character);\n    if (Character.isLowerCase (character)) {\n        typeCharacter (Character.toUpperCase (character));\n    }\n    if (Character.isUpperCase (character)) {\n        typeShiftCharacter (character);\n    }\n    if (Character.isDigit (character)) {\n        typeCharacter (character);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":373,"func":"def type(character):\n    handleSpecialCharacter(character)\n    if character.islower():\n        typeCharacter(character.upper())\n    if character.isupper():\n        typeShiftCharacter(character)\n    if character.isdigit():\n        typeCharacter(character)","lang":"py"}
{"idx":374,"func":" \nprotected void onActivityResult (int requestCode, int resultCode, Intent data) {\n    super.onActivityResult (requestCode, resultCode, data);\n    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {\n        DBHelper dbHelper = new DBHelper (this);\n        SQLiteDatabase sql = dbHelper.getWritableDatabase ();\n        sql.execSQL (\"insert statement for inserting path to database\");\n        sql.close ();\n        dbHelper.close ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":375,"func":"def onActivityResult(self, requestCode, resultCode, data):\n    super().onActivityResult(requestCode, resultCode, data)\n    if requestCode == IMAGE_CAPTURE and resultCode == Activity.RESULT_OK:\n        db_helper = DBHelper(self)\n        sql = db_helper.getWritableDatabase()\n        sql.execute(\"insert statement for inserting path to database\")\n        sql.close()\n        db_helper.close()","lang":"py"}
{"idx":376,"func":" \npublic static void main (String [] args) {\n    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;\n    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }\n    System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n}","lang":"java"}
{"idx":377,"func":"","lang":"py"}
{"idx":378,"func":" \npublic void onCreate (Bundle savedInstanceState) {\n    super.onCreate (savedInstanceState);\n    tv = new TextView (this);\n    this.setContentView (tv);\n    SimpleDateFormat formatter = new SimpleDateFormat (\"dd.MM.yyyy, HH:mm\");\n    String oldTime = \"19.02.2018, 12:00\";\n    String NewTime = \"20.02.2018, 14:00\";\n    Date oldDate, newDate;\n    try {\n        oldDate = formatter.parse (oldTime);\n        newDate = formatter.parse (NewTime);\n        oldLong = oldDate.getTime ();\n        NewLong = newDate.getTime ();\n        diff = NewLong - oldLong;\n    } catch (ParseException e) {\n        e.printStackTrace ();\n    }\n    MyCount counter = new MyCount (diff, 1000);\n    counter.start ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":379,"func":"def onCreate(self, savedInstanceState):\n    super(self).onCreate(savedInstanceState)\n    turn new TextView(this)\n    this.setContentView(tv)\n    formatter = datetime.datetime.strptime(\"dd.MM.yyyy, HH:mm\", \"%H:%M\")\n    old_time = \"19.02.2018, 12:00\"\n    new_time = \"20.02.2018, 14:00\"\n    old_date = formatter.strptime(old_time, \"%d.%m.%Y, %H:%M\")\n    new_date = formatter.strptime(new_time, \"%d.%m.%Y, %H:%M\")\n    old_long = old_date.timestamp()\n    new_long = new_date.timestamp()\n    diff = new_long - old_long\n    counter = MyCount(diff, 1000)\n    counter.start()","lang":"py"}
{"idx":380,"func":" \npublic static void main (String [] args) {\n    LinkList list = new LinkList ();\n    list.insert (1, 1.01);\n    list.insert (2, 2.02);\n    list.insert (3, 3.03);\n    list.insert (4, 4.04);\n    list.insert (5, 5.05);\n    list.printList ();\n    while (! list.isEmpty ()) {\n        Link deletedLink = list.delete ();\n        System.out.print (\"deleted: \");\n        deletedLink.printLink ();\n        System.out.println (\"\");\n    }\n    list.printList ();\n}","lang":"java"}
{"idx":381,"func":"","lang":"py"}
{"idx":382,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";\n    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);\n    Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);\n    if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;\n}\n\n\n#====================\n\n\n  ","lang":"java"}
{"idx":383,"func":"def filter(self, source, start, end, dest, dstart, dend):\n    ls_start = \"\"\n    ls_insert = \"\"\n    ls_end = \"\"\n    ls_text = \"\"\n    print(\"debug: \", self.mo_pattern)\n    print(\"debug: source: \" + source + \", start: \" + str(start) + \", end:\" + str(end) +\n          \", dest: \" + dest + \", dstart: \" + str(dstart) + \", dend: \" + str(dend))\n    ls_text = dest.toString()\n    if len(ls_text) > 0:\n        ls_start = ls_text[0:dstart]\n        print(\"debug: lsStart : \" + ls_start)\n        if source != \"\":\n            ls_insert = source\n            print(\"debug: lsInsert: \" + ls_insert)\n        ls_end = ls_text[dend:]\n        print(\"debug: lsEnd   : \" + ls_end)\n        ls_text = ls_start + ls_insert + ls_end\n        print(\"debug: lsText  : \" + ls_text)\n    lo_matcher = self.mo_pattern.match(ls_text)\n    print(\"debug: loMatcher.matches(): \" + str(lo_matcher.matches()) + \", lsText: \" + ls_text)\n    if not lo_matcher.matches():\n        return \"\"\n    return None","lang":"py"}
{"idx":384,"func":" \npublic Object read (JsonElement in) {\n    if (in.isJsonArray ()) {\n        List < Object > list = new ArrayList < Object > ();\n        JsonArray arr = in.getAsJsonArray ();\n        for (JsonElement anArr : arr) {\n            list.add (read (anArr));\n        }\n        return list;\n    } else if (in.isJsonObject ()) {\n        Map < String, Object > map = new LinkedTreeMap < String, Object > ();\n        JsonObject obj = in.getAsJsonObject ();\n        Set < Map.Entry < String, JsonElement > > entitySet = obj.entrySet ();\n        for (Map.Entry < String, JsonElement > entry : entitySet) {\n            map.put (entry.getKey (), read (entry.getValue ()));\n        }\n        return map;\n    } else if (in.isJsonPrimitive ()) {\n        JsonPrimitive prim = in.getAsJsonPrimitive ();\n        if (prim.isBoolean ()) {\n            return prim.getAsBoolean ();\n        } else if (prim.isString ()) {\n            return prim.getAsString ();\n        } else if (prim.isNumber ()) {\n            Number num = prim.getAsNumber ();\n            if (Math.ceil (num.doubleValue ()) == num.longValue ()) return num.longValue ();\n            else {\n                return num.doubleValue ();\n            }\n        }\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":385,"func":"def read(in):\n    if in.isJsonArray():\n        list_ = []\n        arr = in.getAsJsonArray()\n        for anArr in arr:\n            list_.append(read(anArr))\n        return list_\n    elif in.isJsonObject():\n        map_ = {}\n        obj = in.getAsJsonObject()\n        entitySet = obj.entrySet()\n        for entry in entitySet:\n            map_[entry.getKey()] = read(entry.getValue())\n        return map_\n    elif in.isJsonPrimitive():\n        prim = in.getAsJsonPrimitive()\n        if prim.isBoolean():\n            return prim.getAsBoolean()\n        elif prim.isString():\n            return prim.getAsString()\n        elif prim.isNumber():\n            num = prim.getAsNumber()\n            if math.ceil(num.doubleValue()) == num.longValue():\n                return num.longValue()\n            else:\n                return num.doubleValue()\n    return None","lang":"py"}
{"idx":386,"func":" \npublic ResponseEntity < ? > match (@PathVariable\nString matchId,@RequestBody\nString body, HttpServletRequest request, HttpServletResponse response) {\n    Product p;\n    try {\n        p = service.getProduct (request.getProductId ());\n    } catch (Exception ex) {\n        return new ResponseEntity < String > (HttpStatus.BAD_REQUEST);\n    }\n    return new ResponseEntity (p, HttpStatus.OK);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":387,"func":"def match(match_id, body, request, response):\n  try:\n    p = service.getproduct(request.getproductid())\n  except Exception as e:\n    return ResponseEntity('', HttpStatus.BAD_REQUEST)\n  return ResponseEntity(p, HttpStatus.OK)","lang":"py"}
{"idx":388,"func":" \n                public void itemStateChanged (ItemEvent ie) {\n                    if (show.isSelected ()) {\n                        cl.show (cards, \"text\");\n                    } else {\n                        cl.show (cards, \"notext\");\n                    }\n                }}\n            ;\n\n\n\n\n","lang":"java"}
{"idx":389,"func":"def itemStateChanged(ie):\n    if show.isSelected():\n        cl.show(cards, \"text\")\n    else:\n        cl.show(cards, \"notext\")","lang":"py"}
{"idx":390,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    AtomicInteger counter = new AtomicInteger ();\n    ExecutorService pool = Executors.newFixedThreadPool (4);\n    for (int i = 0;\n    i < 4; ++ i) {\n        pool.execute (new MyTask (counter));\n    }\n    pool.shutdown ();\n    pool.awaitTermination (1, TimeUnit.HOURS);\n}\n\n\n\n\n\nimport threading \nimport time \natm_counter = 0\n","lang":"java"}
{"idx":391,"func":"def mytask(counter): \n    global atm_counter\n    atm_counter += 1\n\nthread_list = [] \nfor i in range(4): \n    thread_list.append(threading.Thread(target=mytask, args=str(atm_counter))) \n\nfor th in thread_list: \n    th.start() \n\nfor th in thread_list: \n    th.join()\n\ntime.sleep(1 * 60 * 60)","lang":"py"}
{"idx":392,"func":" \npublic static void main (String [] args) {\n    JFrame frame = new JFrame (\"GridBagLayout Demo\");\n    frame.setLayout (new GridBagLayout ());\n    JLabel label = new JLabel (\"Demo Label\");\n    JTextField textField = new JTextField (\"Demo Text\");\n    JComboBox comboBox = new JComboBox (new String [] {\"hello\", \"goodbye\", \"foo\"});\n    GridBagConstraints cons = new GridBagConstraints ();\n    cons.insets = new Insets (10, 10, 10, 10);\n    frame.add (label, cons);\n    cons.gridx = 1;\n    cons.weightx = 1;\n    cons.weighty = 1;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.HORIZONTAL;\n    frame.add (textField, cons);\n    cons.gridx = 2;\n    cons.weightx = 0;\n    cons.weighty = 0;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.NONE;\n    frame.add (comboBox, cons);\n    frame.pack ();\n    frame.setVisible (true);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":393,"func":"def main(args):\n    frame = tk.Tk()\n    frame.title('GridBagLayout Demo')\n    frame.geometry('500x500')\n\n    label = tk.Label(frame, text=\"Demo Label\")\n    textField = tk.Entry(frame, text=\"Demo Text\")\n    comboBox = tk.Listbox(frame, values=('hello', 'goodbye', 'foo'))\n\n    label.pack(padx=10, pady=10)\n    textField.pack(expand=tk.YES,padx=10)\n    comboBox.pack(expand=tk.NO, padx=10, pady=10)\n\n    frame.mainloop()","lang":"py"}
{"idx":394,"func":" \nprivate XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {\n    XSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":395,"func":"def transform(workbookNew, fontOld):\n    fontNew = workbookNew.createFont()\n    fontNew.setBoldweight(fontOld.getBoldweight())\n    fontNew.setCharSet(fontOld.getCharSet())\n    fontNew.setColor(fontOld.getColor())\n    fontNew.setFontName(fontOld.getFontName())\n    fontNew.setFontHeight(fontOld.getFontHeight())\n    fontNew.setItalic(fontOld.getItalic())\n    fontNew.setStrikeout(fontOld.getStrikeout())\n    fontNew.setTypeOffset(fontOld.getTypeOffset())\n    fontNew.setUnderline(fontOld.getUnderline())\n    return fontNew","lang":"py"}
{"idx":396,"func":" \n            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n                System.out.println (file);\n                return FileVisitResult.CONTINUE;\n            }}\n        );\n    }\n}","lang":"java"}
{"idx":397,"func":"}\nimport os\nfor file in os.listdir():\n\tfile_path = os.path.abspath(file)\n\tif os.path.isfile(file_path):\n\t\tprint(file_path)\n","lang":"py"}
{"idx":398,"func":" \n        public void run () {\n            Application application = new Application ();\n            application.setVisible (true);\n        }}\n    );\n}","lang":"java"}
{"idx":399,"func":"}\n","lang":"py"}
{"idx":400,"func":" \npublic static void main (String [] args) {\n    int numberofDays;\n    int sharePoints;\n    Scanner keyboard = new Scanner (System.in);\n    System.out.print (\"Number of days in the period: \");\n    numberofDays = keyboard.nextInt ();\n    System.out.print (\"Share points on the first day: \");\n    sharePoints = keyboard.nextInt ();\n    numberofDays = validator (numberofDays, keyboard);\n    outPutTablePrinter (numberofDays, sharePoints);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":401,"func":"def main():    \n    numberofDays = int(input(\"Number of days in the period: \"))\n    sharePoints = int(input(\"Share points on the first day: \"))\n    numberofDays = validator(numberofDays)\n    outPutTablePrinter(numberofDays, sharePoints)\n\n #C\nint main () \n{ \n    int numberofDays;\n    int sharePoints;\n    printf(\"Number of days in the period: \");\n    scanf(\"%d\", &numberofDays);\n    printf(\"Share points on the first day: \");\n    scanf(\"%d\", &sharePoints);\n    numberofDays = validator (numberofDays);\n    outPutTablePrinter (numberofDays, sharePoints);\n    return 0; \n}","lang":"py"}
{"idx":402,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tic\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":403,"func":"def run():\n try:\n  for i in range(0,2):\n   print('tic')\n except Exception as e:\n  print(e.__traceback__)","lang":"py"}
{"idx":404,"func":" \nprotected void paintComponent (Graphics g) {\n    Graphics2D g2 = (Graphics2D) g;\n    Graphics2D imgG2 = img.createGraphics ();\n    imgG2.setBackground (new Color (0, 0, 0, 0));\n    imgG2.setColor (Color.red);\n    imgG2.fillRect (0, 0, 100, 100);\n    imgG2.clearRect (0, 0, 50, 50);\n    imgG2.dispose ();\n    g2.drawImage (img, 0, 0, null);\n    g2.dispose ();\n    super.paintComponent (g);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":405,"func":"def paintComponent(self, graphics):\n    graphics2D = graphics\n    imgG2 = self.img.createGraphics()\n    imgG2.setBackground(Color(0, 0, 0, 0))\n    imgG2.setColor(Color.red)\n    imgG2.fillRect(0, 0, 100, 100)\n    imgG2.clearRect(0, 0, 50, 50)\n    imgG2.dispose()\n    graphics2D.drawImage(self.img, 0, 0, None)\n    graphics2D.dispose()\n    super().paintComponent(graphics)","lang":"py"}
{"idx":406,"func":" \npublic boolean isAnagram (String s1, String s2) {\n    StringBuilder sb1 = new StringBuilder ();\n    StringBuilder sb2 = new StringBuilder ();\n    if (s1.length () != s2.length ()) return false;\n    char arr1 [] = s1.toCharArray ();\n    char arr2 [] = s2.toCharArray ();\n    Arrays.sort (arr1);\n    Arrays.sort (arr2);\n    for (char c : arr1) {\n        sb1.append (c);\n    }\n    for (char c : arr2) {\n        sb2.append (c);\n    }\n    System.out.println (sb1.toString ());\n    System.out.println (sb2.toString ());\n    if (sb1.toString ().equals (sb2.toString ())) return true;\n    else return false;\n}\n\n\n#====================\n\n\n","lang":"java"}
{"idx":407,"func":"def isAnagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    arr1 = sorted(list(s1))\n    arr2 = sorted(list(s2))\n    return arr1 == arr2","lang":"py"}
{"idx":408,"func":" \npublic static void printTable (String [] countries, int [] populations) {\n    if (countries.length != 0) {\n        int longestNameInput = countries [0].length ();\n        int longestPopInput = String.valueOf (populations [0]).length ();\n        for (int i = 0;\n        i < countries.length; i ++) {\n            int countLength = countries [i].length ();\n            int popLength = String.valueOf (populations [i]).length ();\n            if (countLength > longestNameInput) longestNameInput = countLength;\n            if (popLength > longestPopInput) longestPopInput = popLength;\n        }\n        for (int i = 0;\n        i < countries.length; i ++) {\n            System.out.print (countries [i]);\n            for (int j = 0;\n            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (\" \");\n            System.out.print (\" | \");\n            for (int k = 0;\n            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (\" \");\n            System.out.println (populations [i]);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":409,"func":"def printTable(countries, populations):\n    if len(countries) != 0:\n        longestNameInput = len(countries[0])\n        longestPopInput = len(str(populations[0]))\n        for i, country in enumerate(countries):\n            countLength = len(country)\n            popLength = len(str(populations[i]))\n            if countLength > longestNameInput:\n                longestNameInput = countLength\n            if popLength > longestPopInput:\n                longestPopInput = popLength\n\n        for i, country in enumerate(countries):\n            print(country, end=\"\")\n            for j in range(longestNameInput - len(country)):\n                print(\" \", end=\"\")\n            print(\" | \", end=\"\")\n            for k in range(longestPopInput - len(str(populations[i]))):\n                print(\" \", end=\"\")\n            print(populations[i])","lang":"py"}
{"idx":410,"func":" \npublic static boolean isPermutation (String str1, String str2) {\n    char [] x = str1.toCharArray ();\n    char [] y = str2.toCharArray ();\n    Arrays.sort (x);\n    Arrays.sort (y);\n    if (Arrays.equals (x, y)) return true;\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":411,"func":"def isPermutation(str1, str2): \n    x = sorted(str1) \n    y = sorted(str2) \n\n    if (x == y): \n        return True\n    else: \n        return False","lang":"py"}
{"idx":412,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int N = S.length ();\n    int M = P.length;\n    int [] result = new int [M];\n    lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;\n    for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":413,"func":"def solution(S, P, Q): \n    N = len(S) \n    M = len(P) \n    result = [0] * M \n    lastOccurrencesMap = [[-1] * N for _ in range(3)] \n    lastA = lastC = lastG = -1  \n    for i in range(N): \n        c = S[i] \n        if c == 'A': \n            lastA = i \n        elif c == 'C': \n            lastC = i \n        elif c == 'G': \n            lastG = i \n        lastOccurrencesMap[0][i] = lastA \n        lastOccurrencesMap[1][i] = lastC \n        lastOccurrencesMap[2][i] = lastG\n    \n    for i in range(M): \n        startIndex = P[i] \n        endIndex = Q[i] \n        minimum = 4\n        for n in range(3): \n            lastOccurence = getLastNucleotideOccurrence(startIndex, endIndex, n, lastOccurrencesMap) \n            if lastOccurence != 0: \n                minimum = n + 1 \n                break\n        result[i] = minimum \n    return result\ndef getLastNucleotideOccurrence(startIndex, endIndex, n, lastOccurrencesMap): \n    if startIndex == 0:\n        return lastOccurrencesMap[n][endIndex]\n    else: \n        return lastOccurrencesMap[n][endIndex] - lastOccurrencesMap[n][startIndex - 1]","lang":"py"}
{"idx":414,"func":" \nprivate void transform (Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (styleOld.getFont (this.workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":415,"func":"def transform (hash, styleOld, styleNew):\n    styleNew.setAlignment (styleOld.getAlignment ())\n    styleNew.setBorderBottom (styleOld.getBorderBottom ())\n    styleNew.setBorderLeft (styleOld.getBorderLeft ())\n    styleNew.setBorderRight (styleOld.getBorderRight ())\n    styleNew.setBorderTop (styleOld.getBorderTop ())\n    styleNew.setDataFormat (transform (styleOld.getDataFormat ()))\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ())\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ())\n    styleNew.setFillPattern (styleOld.getFillPattern ())\n    styleNew.setFont (transform (styleOld.getFont (workbookOld)))\n    styleNew.setHidden (styleOld.getHidden ())\n    styleNew.setIndention (styleOld.getIndention ())\n    styleNew.setLocked (styleOld.getLocked ())\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ())\n    styleNew.setWrapText (styleOld.getWrapText ())\n    styleMap[hash] = styleNew","lang":"py"}
{"idx":416,"func":" \npublic static void main (String args []) {\n    int ci, i, j, k, l = 0;\n    String str, str1, result, subString;\n    char c1, c2, ch;\n    Scanner scan = new Scanner (System.in);\n    System.out.print (\"Enter a String : \");\n    str = scan.nextLine ();\n    i = str.length ();\n    for (c1 = 'A'; c1 <= 'z'; c1 ++) {\n        for (c2 = 'A'; c2 <= 'z'; c2 ++) {\n            result = new String (new char [] {c1, c2});\n            k = 0;\n            for (j = 0; j < i - 1; j ++) {\n                subString = str.substring (j, j + 2);\n                if (result.equals (subString)) {\n                    k ++;\n                }\n            }\n            if (k > 0) {\n                System.out.println (\"\" + result + \": \" + k);\n            }\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":417,"func":"def main():\n    ci = 0\n    i = 0\n    j = 0\n    k = 0\n    l = 0\n    str = ''\n    str1 = \"\"\n    result = ''\n    subString = ''\n    ar = [c1, c2]\n    ch = ''\n    print(\"Enter a String : Prog\")\n    str = input()\n    i = len(str)\n    for c1 in range(ord('A'), ord('z')+1):  \n        for c2 in range(ord('A'), ord('z')+1): \n            result = \"\".join(chr(c1)+chr(c2))  \n            k = 0\n            for j in range(0, i-1): \n                subString = str[j] + str[j+1]  \n                if(result == subString): \n                    k+=1 \n            if(k>0):\n                print(\"{}: {}\". format(result, k))\nif __name__ == \"__main__\": \n    main()","lang":"py"}
{"idx":418,"func":" \nprivate void transform () {\n    String call = \"transform \";\n    System.out.println (call + \"Workbook\");\n    XSSFSheet sheetNew;\n    HSSFSheet sheetOld;\n    this.workbookNew.setForceFormulaRecalculation (this.workbookOld.getForceFormulaRecalculation ());\n    this.workbookNew.setMissingCellPolicy (this.workbookOld.getMissingCellPolicy ());\n    for (int i = 0;\n    i < this.workbookOld.getNumberOfSheets (); i ++) {\n        sheetOld = this.workbookOld.getSheetAt (i);\n        sheetNew = this.workbookNew.getSheet (sheetOld.getSheetName ());\n        System.out.println (call + \"Sheet erstellt: \" + sheetOld.getSheetName ());\n        sheetNew = this.workbookNew.createSheet (sheetOld.getSheetName ());\n        this.transform (sheetOld, sheetNew);\n    }\n    System.out.println (call + \"Anzahl verwendeter Styles: \" + this.styleMap.size ());\n    System.out.println (call + \"abgeschlossen\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":419,"func":"def transform():\n    call = \"transform \"\n    print(call + \"Workbook\")\n    sheet_new = None\n    sheet_old = None\n    self.workbook_new.setForceFormulaRecalculation(self.workbook_old.getForceFormulaRecalculation())\n    self.workbook_new.setMissingCellPolicy(self.workbook_old.getMissingCellPolicy())\n    for i in range(self.workbook_old.getNumberOfSheets()):\n        sheet_old = self.workbook_old.getSheetAt(i)\n        sheet_new = self.workbook_new.getSheet(sheet_old.getSheetName())\n        print(call + \"Sheet erstellt: \" + sheet_old.getSheetName())\n        sheet_new = self.workbook_new.createSheet(sheet_old.getSheetName())\n        self.transform(sheet_old, sheet_new)\n    print(call + \"Anzahl verwendeter Styles: \" + str(len(self.styleMap)))\n    print(call + \"abgeschlossen\")","lang":"py"}
{"idx":420,"func":" \npublic void deleteRecursive (File path) {\n    File [] c = path.listFiles ();\n    System.out.println (\"Cleaning out folder:\" + path.toString ());\n    for (File file : c) {\n        if (file.isDirectory ()) {\n            System.out.println (\"Deleting file:\" + file.toString ());\n            deleteRecursive (file);\n            file.delete ();\n        } else {\n            file.delete ();\n        }\n    }\n    path.delete ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":421,"func":"def deleteRecursive(path):\n  c = os.listdir(path)\n  print(\"Cleaning out folder:\" + path)\n  for file in c:\n    full_path = os.path.join(path, file)\n    if os.path.isdir(full_path):\n      print(\"Deleting file:\" + full_path)\n      deleteRecursive(full_path)\n      os.rmdir(full_path)\n    else:\n      os.remove(full_path)\n  os.rmdir(path)","lang":"py"}
{"idx":422,"func":" \npublic static void main (String [] args) {\n    String needle = \"ABC\";\n    String haystack = \"ABCDSGDABCSAGAABCCCCAAABAABC\";\n    int numberOfOccurences = 0;\n    int index = haystack.indexOf (needle);\n    while (index != - 1) {\n        numberOfOccurences ++;\n        haystack = haystack.substring (index + needle.length ());\n        index = haystack.indexOf (needle);\n    }\n    System.out.println (\"\" + numberOfOccurences);\n}","lang":"java"}
{"idx":423,"func":"needle = \"ABC\"\nhaystack = \"ABCDSGDABCSAGAABCCCCAAABAABC\"\nnumber_of_occurrences = 0\nindex = haystack.find(needle)\nwhile index != -1:\n    number_of_occurrences += 1\n    haystack = haystack[index + len(needle):]\n    index = haystack.find(needle)\nprint(number_of_occurrences)\n","lang":"py"}
{"idx":424,"func":" \npublic void run () {\n    try {\n        runs = true;\n        if (noColor < 2) {\n            noColor ++;\n            changeBtnForegroung (clr [noColor]);\n        } else {\n            noColor = 0;\n            changeBtnForegroung (clr [noColor]);\n        }\n        changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n        border = new EmptyBorder (0, 5, 10, 5);\n        changePnlBorder (border);\n        Thread.sleep (100);\n        changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n        border = new EmptyBorder (0, 0, 10, 10);\n        changePnlBorder (border);\n        Thread.sleep (100);\n        changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n        border = new EmptyBorder (5, 10, 5, 0);\n        changePnlBorder (border);\n        Thread.sleep (100);\n        changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n        border = new EmptyBorder (10, 10, 0, 0);\n        changePnlBorder (border);\n        Thread.sleep (100);\n        changeBtnMargin (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));\n        border = new EmptyBorder (5, 5, 5, 5);\n        changePnlBorder (border);\n        Thread.sleep (100);\n        count ++;\n    } catch (Exception e) {\n        System.out.println (e);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":425,"func":"def run(): \n  try: \n    runs = True\n    if noColor < 2: \n      noColor += 1 \n      changeBtnForeground(clr[noColor])\n    else: \n      noColor = 0 \n      changeBtnForeground(clr[noColor]) \n    changeBtnMargin(Insets(initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10))\n    border = EmptyBorder(0, 5, 10, 5)\n    changePnlBorder(border)\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10))\n    border = EmptyBorder(0, 0, 10, 10)\n    changePnlBorder(border)\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10))\n    border = EmptyBorder(5, 10, 5, 0)\n    changePnlBorder(border)\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10))\n    border = EmptyBorder(10, 10, 0, 0)\n    changePnlBorder(border)\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left, initMargin.bottom, initMargin.right))\n    border = EmptyBorder(5, 5, 5, 5)\n    changePnlBorder(border)\n    time.sleep(100)\n    count += 1\n  \n  except Exception as e: \n    print(e)","lang":"py"}
{"idx":426,"func":" \n        public void run () {\n            create ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":427,"func":"def run():\n  create()","lang":"py"}
{"idx":428,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int offset = NO_VALUE;\n    int number;\n    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number < 10) {\n        offset = (number % 10) - 1;\n    } else if (number < 20) {\n        offset = (number % 20) - 1;\n    }\n    if (offset != NO_VALUE && offset < TOKENS.length) {\n        buffer.append (TOKENS [offset]);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":429,"func":"def getName(value):\n    buffer = \"\"\n    offset = -1\n    number = 0\n    if len(value) > 3:\n        number = int(value[-3:], 10)\n    else:\n        number = int(value, 10)\n    number %= 100\n    if number < 10:\n        offset = (number % 10) - 1\n    elif number < 20:\n        offset = (number % 20) - 1\n    if offset != -1 and offset < len(TOKENS):\n        buffer+=TOKENS[offset]\n    return buffer","lang":"py"}
{"idx":430,"func":" \npublic String toString () {\n    StringBuilder sb = new StringBuilder ();\n    sb.append (\"--------\" + v + \"\\n\");\n    sb.append (\"--------\" + w + \"\\n\");\n    for (B elem : bList) {\n        sb.append (elem + \"\\n\");\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":431,"func":"def __str__(self): \n    sb = \"\" \n    sb += \"--------\" + self.v + \"\\n\" \n    sb += \"--------\" + self.w + \"\\n\" \n\n    for elem in self.bList: \n        sb += str(elem) + \"\\n\"\n\n    return sb","lang":"py"}
{"idx":432,"func":" \npublic boolean equals (Object other) {\n    boolean result;\n    if ((other == null) || (getClass () != other.getClass ())) {\n        result = false;\n    } else {\n        People otherPeople = (People) other;\n        result = name.equals (otherPeople.name) && age == otherPeople.age;\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":433,"func":"def equals(self, other):\n    result = False\n    if other == None or type(self) is not type(other):\n        result = False\n    else:\n        otherPeople = other\n        result = self.name == otherPeople.name and self.age == otherPeople.age\n    return result","lang":"py"}
{"idx":434,"func":" \npublic static void main (String [] args) {\n    String windowName = \"Document - WordPad\";\n    int [] rect;\n    try {\n        rect = GetWindowRect.getRect (windowName);\n        System.out.printf (\"The corner locations for the window \\\"%s\\\" are %s\", windowName, Arrays.toString (rect));\n    } catch (GetWindowRect.WindowNotFoundException e) {\n        e.printStackTrace ();\n    } catch (GetWindowRect.GetWindowRectException e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":435,"func":"import GetWindowRect\nwindowName = \"Document - WordPad\"\nrect = None\ntry:\n    rect = GetWindowRect.getRect(windowName)\n    print(\"The corner locations for the window \\\"%s\\\" are %s\" % (windowName, rect))\nexcept GetWindowRect.WindowNotFoundException as e:\n    e.printStackTrace()\nexcept GetWindowRect.GetWindowRectException as e:\n    e.printStackTrace()\n    \n","lang":"py"}
{"idx":436,"func":" \npublic boolean isPrime () {\n    int sqrt = (int) Math.sqrt ((double) value);\n    for (int i = 2;\n    i <= sqrt; i ++) {\n        if (value % i == 0) return false;\n    }\n    return true;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":437,"func":"def isPrime(value):\n    hp = int(math.sqrt(value))\n    for i in range(2, hp+1):\n        if value % i == 0:\n            return False\n    return True","lang":"py"}
{"idx":438,"func":" \npublic int solution (int X, int [] A) {\n    int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) \/ 2;\n    List < Integer > arrayList = new ArrayList < Integer > ();\n    for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":439,"func":"def solution(X, A):\n    listA = A\n    summed_val = 0\n    searchVal = X\n    required_sum = searchVal * (searchVal + 1) \/ 2 \n    already_encountered = []\n    for iii in range(len(listA)):\n        if listA[iii] <= searchVal and listA[iii] not in already_encountered:\n            summed_val += listA[iii]\n            if summed_val == required_sum:\n                return iii\n            already_encountered.append(listA[iii])\n    return -1","lang":"py"}
{"idx":440,"func":" \npublic static void main (String [] args) {\n    final int ThirtyOne = 31;\n    final int Thirty = 30;\n    final int FebNorm = 28;\n    final int FebLeap = 29;\n    int numOfSundays = 0;\n    int calendar [] [] = new int [12] [];\n    calendar [0] = new int [ThirtyOne];\n    calendar [1] = new int [FebLeap];\n    calendar [2] = new int [ThirtyOne];\n    calendar [3] = new int [Thirty];\n    calendar [4] = new int [ThirtyOne];\n    calendar [5] = new int [Thirty];\n    calendar [6] = new int [ThirtyOne];\n    calendar [7] = new int [ThirtyOne];\n    calendar [8] = new int [Thirty];\n    calendar [9] = new int [ThirtyOne];\n    calendar [10] = new int [Thirty];\n    calendar [11] = new int [ThirtyOne];\n    int dayOfWeek = 1;\n    for (int year = 1900;\n    year < 2001; year ++) {\n        for (int month = 0;\n        month < calendar.length; month ++) {\n            int dayOfMonth = 0;\n            int daysInMonth;\n            if (month == 1) {\n                daysInMonth = isLeapYear (year) ? FebLeap : FebNorm;\n            } else {\n                daysInMonth = calendar [month].length;\n            }\n            while (dayOfWeek < 8 && dayOfMonth < daysInMonth) {\n                System.out.println (\"year: \" + year + \"\\tday: \" + dayOfWeek + \"\\tcalendar[\" + month + \"][\" + dayOfMonth + \"]: \" + calendar [month] [dayOfMonth]);\n                if (dayOfWeek == 7 && year > 1900) {\n                    calendar [month] [dayOfMonth] ++;\n                    if (dayOfMonth == 0) {\n                        numOfSundays ++;\n                    }\n                }\n                dayOfMonth ++;\n                dayOfWeek ++;\n                if (dayOfWeek > 7) {\n                    dayOfWeek = 1;\n                }\n            }\n        }\n    }\n    for (int month = 0;\n    month < calendar.length; month ++) {\n        System.out.println (calendar [month] [0]);\n    }\n    System.out.println (numOfSundays);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":441,"func":"def main (args): \n  THIRTYONE = 31  \n  THIRTY = 30 \n  FEBNORM = 28 \n  FEBLEAP = 29 \n  numOfSundays = 0 \n  calendar = [[0 for x in range (THIRTYONE)] for y in range (12)]\n  calendar[1] = [0 for x in range (FEBLEAP)]\n  calendar[3] = [0 for x in range (THIRTY)]\n  calendar[5] = [0 for x in range (THIRTY)]\n  calendar[8] = [0 for x in range (THIRTY)]\n  calendar[10] = [0 for x in range (THIRTY)]\n  dayOfWeek = 1 \n  \n  for year in range(1900,2001):\n    for month in range(12):\n      dayOfMonth = 0 \n      if month == 1:\n        daysInMonth = FEBLEAP if isLeapYear(year) else FEBNORM \n      else:\n        daysInMonth = THIRTYONE if month not in [3,5,8,10] else THIRTY\n    while dayOfWeek < 8 and dayOfMonth < daysInMonth:\n      print(\"year: \"+ str(year)+ \"\\tday: \"+str(dayOfWeek)+ \"\\tcalendar[\"+str(month)+\"][\"+str(dayOfMonth)+\"]: \"+str(calendar[month][dayOfMonth]))\n      if dayOfWeek == 7 and year > 1900:\n        calendar[month][dayOfMonth] += 1\n        if dayOfMonth == 0:\n          numOfSundays += 1\n      dayOfMonth += 1 \n      dayOfWeek += 1 \n      if dayOfWeek > 7:\n        dayOfWeek = 1 \n        \n  for month in range (12):\n    print (calendar[month][0])\n  print(numOfSundays)","lang":"py"}
{"idx":442,"func":" \npublic static void countString (String str, char value) {\n    String [] arr = str.split (\"\");\n    StringBuffer tempString = new StringBuffer ();\n    for (String s : arr) {\n        tempString.append (s);\n        for (char ch : s.toCharArray ()) {\n            System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString.chars ().filter (i -> i == ch).count ());\n        }\n    }\n    if (! (Character.toString (value).isEmpty ())) {\n        StringBuffer tempString2 = new StringBuffer ();\n        for (String s : arr) {\n            tempString2.append (s);\n            for (char ch : s.toCharArray ()) {\n                if (ch == value) {\n                    System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString2.chars ().filter (i -> i == ch).count ());\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":443,"func":"def countString(str, value): \n    arr = str.split(\"\") \n    tempString = \"\" \n    for i in arr: \n        tempString += i \n        for j in i: \n            print(\"Number of Occurrence of \", j, \" is:\", tempString.count(j)) \n    if value: \n        tempString2 = \"\" \n        for i in arr: \n            tempString2 += i \n            for j in i: \n                if (j == value): \n                    print(\"Number of Occurrence of \", j, \" is:\", tempString2.count(j))","lang":"py"}
{"idx":444,"func":" \npublic ListNode switchPairs () {\n    if (this == null || this.next == null) return this;\n    ListNode top = this.next;\n    ListNode first = this;\n    ListNode second = first.next;\n    do {\n        ListNode third = second.next;\n        second.next = first;\n        first.next = third;\n        first = third;\n        System.out.println (\"@@@ \" + this.toString ());\n        if (first != null) {\n            second.next.next = first.next;\n            second = first.next;\n        }\n    } while (first != null && second != null);\n    return top;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":445,"func":"def switchPairs(self):\n    if self == None or self.next == None:\n        return self\n        \n    top = self.next\n    first = self\n    second = first.next\n    \n    while first != None and second != None:\n        third = second.next\n        second.next = first\n        first.next = third\n        first = third\n        \n        if first != None:\n            second.next.next = first.next\n            second = first.next\n            \n    return top","lang":"py"}
{"idx":446,"func":" \npublic void actionPerformed (ActionEvent e) {\n    System.out.println ();\n    System.out.println (\"Close Dialogs\");\n    for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\tClosing \" + dialog.getTitle ());\n            dialog.dispose ();\n        }\n    }\n    Runtime.getRuntime ().gc ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":447,"func":"def actionPerformed(e):\n    print()\n    print(\"Close Dialogs\")\n    for window in Window.getWindows():\n        if isinstance(window, JDialog):\n            dialog = window\n            print(\"\\tClosing \"+dialog.getTitle())\n            dialog.dispose()\n    Runtime.getRuntime().gc()","lang":"py"}
{"idx":448,"func":" \npublic void replaceText (int start, int end, String text) {\n    String oldValue = getText ();\n    if (! text.matches (\"[A-Za-z]\") && ! text.matches (\"[\\\\\\\\!\\\"#$%&()*+,.\/:;<=>?@\\\\[\\\\]^_{|}~]+\")) {\n        super.replaceText (start, end, text);\n    }\n    if (getText ().length () > 2) {\n        setText (oldValue);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":449,"func":"def replaceText(start, end, text):\n    old_value = getText()\n    regex = \"[A-Za-z]|[\\\\!\\\"#$%&()*+,.\/:;<=>?@\\[\\]^_{|}~]+\"\n    if re.match(regex, text):\n        super().replaceText(start, end, text)\n    if len(getText()) > 2:\n        setText(old_value)","lang":"py"}
{"idx":450,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":451,"func":"def filter(source, start, end, dest, dstart, dend):\n    dot_pos = -1\n    dest_length = len(dest)\n\n    for i in range(dest_length):\n       if dest[i] == '.' or dest[i] == ',':\n            dot_pos = i\n            break\n\n    if dot_pos >= 0:\n        if source == '.' or source == ',':\n            return \"\"\n        if dend <= dot_pos:\n            return None\n        if dest_length - dot_pos > decimalDigits:\n            return \"\"\n\n    return None","lang":"py"}
{"idx":452,"func":" \npublic static void main (String h []) {\n    Scanner sc = new Scanner (System.in);\n    int decimal = sc.nextInt ();\n    String binary = \"\";\n    if (decimal <= 0) {\n        System.out.println (\"Please Enter more than 0\");\n    } else {\n        while (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal = decimal \/ 2;\n        }\n        System.out.println (\"binary is:\" + binary);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":453,"func":"def main():\n  decimal = int(input())\n  binary = ''\n  if decimal <= 0:\n    print('Please Enter more than 0')\n  else:\n    while decimal > 0:\n      binary = str(decimal % 2) + binary\n      decimal = decimal \/\/ 2\n    print('binary is:', binary)\n\nmain()","lang":"py"}
{"idx":454,"func":" \npublic static String join (String delimiter, String...inStr) {\n    StringBuilder sb = new StringBuilder ();\n    if (inStr.length > 0) {\n        sb.append (inStr [0]);\n        for (int i = 1;\n        i < inStr.length; i ++) {\n            sb.append (delimiter);\n            sb.append (inStr [i]);\n        }\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":455,"func":"def join(delimiter, *inStr):\n    string_builder = \"\"\n    if len(inStr) > 0:\n        string_builder += inStr[0]\n        for i in range(1, len(inStr)):\n            string_builder += delimiter + inStr[i]\n    return string_builder","lang":"py"}
{"idx":456,"func":" \npublic static String toHexString (byte bytes []) {\n    if (bytes == null) {\n        return null;\n    }\n    StringBuffer sb = new StringBuffer ();\n    for (int iter = 0;\n    iter < bytes.length; iter ++) {\n        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":457,"func":"def toHexString(bytes): \n  if bytes is None: \n    return None\n    \n  hex_string = ''\n  for byte in bytes: \n    high = (byte & 0xf0) >> 4\n    low = (byte & 0x0f)\n    hex_string += nibble2char(high)\n    hex_string += nibble2char(low)\n  \n  return hex_string","lang":"py"}
{"idx":458,"func":" \n        public void run () {\n            new MainGUIJFrame ().setVisible (true);\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":459,"func":"def run(): \n    MainGUIJFrame().setVisible(True)","lang":"py"}
{"idx":460,"func":" \nstatic void merge (int [] a, int [] l, int [] r) {\n    int totElem = l.length + r.length;\n    int i, li, ri;\n    i = li = ri = 0;\n    while (i < totElem) {\n        if ((li < l.length) && (ri < r.length)) {\n            if (l [li] < r [ri]) {\n                a [i] = l [li];\n                i ++;\n                li ++;\n            } else {\n                a [i] = r [ri];\n                i ++;\n                ri ++;\n            }\n        } else {\n            if (li >= l.length) {\n                while (ri < r.length) {\n                    a [i] = r [ri];\n                    i ++;\n                    ri ++;\n                }\n            }\n            if (ri >= r.length) {\n                while (li < l.length) {\n                    a [i] = l [li];\n                    li ++;\n                    i ++;\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":461,"func":"def merge(a, l, r):\n  totElem = len(l) + len(r)\n  i, li,ri = 0, 0, 0\n  while i < totElem:\n    if li < len(l) and ri < len(r):\n      if l[li] < r[ri]:\n        a[i] = l[li]\n        i += 1\n        li += 1\n      else:\n        a[i] = r[ri]\n        i += 1\n        ri += 1\n    else:\n      if li >= len(l):\n        while ri < len(r):\n          a[i] = r[ri]\n          i += 1\n          ri += 1\n      if ri >= len(r):\n        while li < len(l):\n          a[i] = l[li]\n          li += 1\n          i += 1","lang":"py"}
{"idx":462,"func":" \npublic int solution (int N) {\n    int result = 0;\n    while (N > 0) {\n        if ((N & 1) == 1) {\n            int temp = 0;\n            while ((N>>= 1) > 0 && ((N & 1) != 1)) {\n                temp ++;\n            }\n            result = Math.max (result, temp);\n        } else {\n            N>>= 1;\n        }\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":463,"func":"def solution(N): \n    result = 0\n    while (N > 0): \n        if N & 1 == 1: \n            temp = 0\n            while (N>>= 1) > 0 and (N & 1 != 1):\n                temp+=1\n            result = max(result, temp)\n        else:\n            N>>= 1\n    return result","lang":"py"}
{"idx":464,"func":" \npublic static int countLines (File input) throws IOException {\n    try (InputStream is = new FileInputStream (input)) {\n        int count = 1;\n        for (int aChar = 0;\n        aChar != - 1; aChar = is.read ()) count += aChar == '\\n' ? 1 : 0;\n        return count;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":465,"func":"def countLines(input):\n    count = 1\n    with open(input, 'r') as f:\n        for line in f:\n            count += 1\n        return count","lang":"py"}
{"idx":466,"func":" \n                                public void onClick (DialogInterface dialogInterface, int i) {\n                                    checkPermissions ();\n                                }}\n                            );\n                        }\n                    }\n                }\n            }}\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":467,"func":"def on_click(dialog_interface, i):\n    check_permissions()","lang":"py"}
{"idx":468,"func":" \npublic static void main (String [] args) {\n    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;\n    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }\n    System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n}","lang":"java"}
{"idx":469,"func":"","lang":"py"}
{"idx":470,"func":" \npublic static String validName (Scanner input, Scanner histogram) {\n    String user = \"\";\n    String name = input.next ();\n    String tmp = \"\";\n    boolean test = false;\n    while (histogram.hasNext ()) {\n        user = histogram.next ();\n        tmp += user + \" \";\n        if (name.equalsIgnoreCase (user)) {\n            test = true;\n            break;\n        } else {\n            test = false;\n        }\n    }\n    if (! test) {\n        System.out.println (\"Name not found\");\n        user = validName (input, new Scanner (tmp));\n    }\n    return user;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":471,"func":"def validName(input, histogram):\n\tuser = \"\"\n\tname = input.next()\n\ttmp = \"\"\n\ttest = False\n \n\twhile (histogram.hasNext()):\n\t\tuser = histogram.next()\n\t\ttmp += user + \" \"\n\t\tif (name.equalsIgnoreCase(user)):\n\t\t\ttest = True\n\t\telse:\n\t\t\ttest = False\n\t\t\n\tif (test == False):\n\t\tprint(\"Name not found\")\n\t\tuser = validName(input, tmp)\n\n\treturn user","lang":"py"}
{"idx":472,"func":" \nboolean isPalindrome (String s) {\n    int n = s.length ();\n    for (int i = 0;\n    i < (n \/ 2); ++ i) {\n        if (s.charAt (i) != s.charAt (n - i - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":473,"func":"def isPalindrome(s): \n    n = len(s) \n    for i in range(0, n\/\/2): \n        if (s[i] != s[n-i-1]): \n            return False\n    return True","lang":"py"}
{"idx":474,"func":" \npublic static File createTempDir () {\n    File baseDir = new File (System.getProperty (\"java.io.tmpdir\"));\n    String baseName = System.currentTimeMillis () + \"-\";\n    for (int counter = 0;\n    counter < TEMP_DIR_ATTEMPTS; counter ++) {\n        File tempDir = new File (baseDir, baseName + counter);\n        if (tempDir.mkdir ()) {\n            return tempDir;\n        }\n    }\n    throw new IllegalStateException (\"Failed to create directory within \" + TEMP_DIR_ATTEMPTS + \" attempts (tried \" + baseName + \"0 to \" + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');\n}\n\n\n\n\n\nimport os\nimport tempfile\n\n","lang":"java"}
{"idx":475,"func":"def createTempDir():\n    baseDir = os.getenv(\"TEMP\")\n    baseName = '{0}-'.format(time.time())\n    \n    for counter in range(TEMP_DIR_ATTEMPTS):\n        tempDir = os.path.join(baseDir, baseName + str(counter))\n        if os.mkdir(tempDir):\n            return tempDir\n    else:\n        raise ValueError(\"Failed to create directory within {0} attempts (tried {1}0 to {1}{2}\".format(TEMP_DIR_ATTEMPTS, baseName, TEMP_DIR_ATTEMPTS-1))","lang":"py"}
{"idx":476,"func":" \n                                public void onClick (DialogInterface dialogInterface, int i) {\n                                    checkPermissions ();\n                                }}\n                            );\n                        }\n                    }\n                }\n            }}\n}\n\n}\n\n#====================\n\n\n","lang":"java"}
{"idx":477,"func":"def onClick (dialogInterface, i):\n    checkPermissions ()","lang":"py"}
{"idx":478,"func":" \npublic static void main (String [] args) throws Exception {\n    final int fakeConstructorArg = 10;\n    Object a = new Object () {\n        {\n            System.out.println (\"arg = \" + fakeConstructorArg);\n        }\n    }\n    ;\n}","lang":"java"}
{"idx":479,"func":"","lang":"py"}
{"idx":480,"func":" \npublic boolean equals (Object object) {\n    if (this == object) {\n        return true;\n    }\n    if (object == null) {\n        return false;\n    }\n    if (! (object instanceof CircularList < ? >)) {\n        return false;\n    }\n    CircularList < ? > that = (CircularList < ? >) object;\n    Element < ? > first0 = first;\n    Element < ? > current0 = first0;\n    Element < ? > first1 = that.first;\n    Element < ? > current1 = first1;\n    while (true) {\n        if (equalSequence (current0, current0, current1, current1)) {\n            return true;\n        }\n        current1 = current1.next;\n        if (current1 == first1) {\n            return false;\n        }\n    }\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":481,"func":"def equals(object):\n    if (object == this):\n        return True\n    elif (object == None):\n        return False\n    elif (not isinstance(object, CircularList)):\n        return False\n    else: \n        that = object\n        first0 = this.first\n        current0 = first0\n        first1 = that.first\n        current1 = first1\n        while (True):\n            if (equalSequence(current0, current0, current1, current1)):\n                return True\n            current1 = current1.next\n            if (current1 == first1):\n                return False","lang":"py"}
{"idx":482,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":483,"func":"def getName(value):\n    buffer = []\n    high, low = (\"\", value) if len(value) < getPartDivider() else (value[: -getPartDivider()], value[-getPartDivider():])\n    highName = getHighProcessor().getName(high)\n    lowName  = getLowProcessor().getName(low)\n    if highName != \"\":\n        buffer.extend([highName, SEPARATOR, getToken()])\n        if lowName != \"\":\n            buffer.append(SEPARATOR)\n    if lowName != \"\":\n        buffer.append(lowName)\n    return \"\".join(buffer)","lang":"py"}
{"idx":484,"func":" \npublic void invoke (Request request, Response response) throws IOException, ServletException {\n    getNext ().invoke (request, response);\n    Session session = null;\n    try {\n        session = request.getSessionInternal ();\n    } catch (Throwable e) {\n        log.error (getInfo () + \": Unable to perform replication request.\", e);\n    }\n    String context = request.getContext ().getName ();\n    String task = request.getPathInfo ();\n    if (task == null) {\n        task = request.getRequestURI ();\n    }\n    if (session != null) {\n        if (log.isDebugEnabled ()) {\n            log.debug (getInfo () + \": [session=\" + session.getId () + \", instanceof=\" + session.getClass ().getName () + \", context=\" + context + \", request=\" + task + \"]\");\n        }\n        if (session instanceof ReplicatedSession) {\n            ((ReplicatedSession) session).setIsDirty (true);\n            if (log.isDebugEnabled ()) {\n                log.debug (getInfo () + \": [session=\" + session.getId () + \", context=\" + context + \", request=\" + task + \"] maked DIRTY\");\n            }\n        } else {\n            List cycledNames = new LinkedList ();\n            HttpSession deltaSession = (HttpSession) session;\n            for (Enumeration < String > names = deltaSession.getAttributeNames ();\n            names.hasMoreElements ();) {\n                String name = names.nextElement ();\n                deltaSession.setAttribute (name, deltaSession.getAttribute (name));\n                cycledNames.add (name);\n            }\n            if (log.isDebugEnabled ()) {\n                log.debug (getInfo () + \": [session=\" + session.getId () + \", context=\" + context + \", request=\" + task + \"] cycled atrributes=\" + cycledNames + \"\");\n            }\n        }\n    } else {\n        String id = request.getRequestedSessionId ();\n        log.warn (getInfo () + \": [session=\" + id + \", context=\" + context + \", request=\" + task + \"] Session not available, unable to send session over cluster.\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":485,"func":"def invoke(self, request, response):\n    next_item = self.get_next()\n    next_item.invoke(request, response)\n    session = None\n    try:\n        session = request.get_session_internal()\n    except Exception as e:\n        log.error(\"{}: Unable to perform replication request. {}\".format(\n            self.get_info(), e))\n    else:\n        context = request.get_context().get_name()\n        task = request.get_path_info()\n        if task is None:\n            task = request.get_request_uri()\n\n        if session is not None:\n            if log.is_debug_enabled():\n                log.debug(\"{}: [session={}, instanceof={}, context={}, request={}]\".format(\n                    self.get_info(), session.get_id(), session.get_name(),\n                    context, task))\n\n            if isinstance(session, ReplicatedSession):\n                session.set_is_dirty(True)\n                if log.is_debug_enabled():\n                    log.debug(\"{}: [session={}, context={}, request={}] marked DIRTY\".format(\n                        self.get_info(), session.get_id(), context, task))\n            else:\n                cycled_names = []\n                for name in session.get_attribute_names():\n                    session.set_attribute(name, session.get_attribute(name))\n                    cycled_names.append(name)\n\n                if log.is_debug_enabled():\n                    log.debug(\"{}: [session={}, context={}, request={}] cycled attributes={}\".format(\n                        self.get_info(), session.get_id(), context, task, cycled_names))\n        else:\n            id = request.get_requested_session_id()\n            log.warn(\"{}: [session={}, context={}, request={}] Session not available, unable to send session over cluster.\".format(\n                self.get_info(), id, context, task))","lang":"py"}
{"idx":486,"func":" \npublic K remove () {\n    if (head == null) return null;\n    K val = head.value;\n    if (head.next == null) {\n        head = null;\n        tail = null;\n    } else {\n        head = head.next;\n        head.prev = null;\n    }\n    return val;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":487,"func":"def remove(self): \n    if self.head is None:\n        return None \n    val = self.head.value\n    if self.head.next is None: \n        self.head = None\n        self.tail = None\n    else: \n        self.head = self.head.next\n        self.head.prev = None\n    return val","lang":"py"}
{"idx":488,"func":" \npublic static void main (String [] args) {\n    int arr [];\n    Scanner scan = new Scanner (System.in);\n    for (int i = 0;\n    i < 5; i ++) {\n        System.out.print (\"Enter number \" + (i + 1) + \": \");\n        arr [i] = scan.nextInt ();\n    }\n    for (int i = 0;\n    i < 5; i ++) System.out.println (\"Number \" + (i + 1) + \": \" + arr [i]);\n}","lang":"java"}
{"idx":489,"func":"arr = []\nfor i in range(5):\n    print(\"Enter number \" + str(i+1) + \": \")\n    arr.append(int(input()))\n    \nfor i in range(5):\n    print(\"Number \" + str(i+1) + \": \" + str(arr[i]))\n","lang":"py"}
{"idx":490,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int [] answer = new int [P.length];\n    char [] chars = S.toCharArray ();\n    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];\n    for (int iii = 0;\n    iii < chars.length; iii ++) {\n        if (iii > 0) {\n            for (int zzz = 0;\n            zzz < 4; zzz ++) {\n                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];\n            }\n        }\n        switch (chars [iii]) {\n            case 'A' :\n                cumulativeAnswers [0] [iii + 1] ++;\n                break;\n            case 'C' :\n                cumulativeAnswers [1] [iii + 1] ++;\n                break;\n            case 'G' :\n                cumulativeAnswers [2] [iii + 1] ++;\n                break;\n            case 'T' :\n                cumulativeAnswers [3] [iii + 1] ++;\n                break;\n        }\n    }\n    for (int iii = 0;\n    iii < P.length; iii ++) {\n        for (int zzz = 0;\n        zzz < 4; zzz ++) {\n            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {\n                answer [iii] = zzz + 1;\n                break;\n            }\n        }\n    }\n    return answer;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":491,"func":"def solution(S, P, Q):\n    answer = [0] * len(P)\n    cumulativeAnswers = [[0 for _ in range(len(S) + 1)] for _ in range(4)]\n    for idx, s in enumerate(S):\n        if idx > 0:\n            for j in range(4):\n                cumulativeAnswers[j][idx + 1] = cumulativeAnswers[j][idx]\n\n        if s == 'A':\n            cumulativeAnswers[0][idx + 1] += 1\n        elif s == 'C':\n            cumulativeAnswers[1][idx + 1] += 1\n        elif s == 'G':\n            cumulativeAnswers[2][idx + 1] += 1\n        elif s == 'T':\n            cumulativeAnswers[3][idx + 1] += 1\n\n    for i, p in enumerate(P):\n        for j in range(4):\n            if (cumulativeAnswers[j][Q[i] + 1] - cumulativeAnswers[j][p] > 0):\n                answer[i] = j + 1\n                break\n    return answer","lang":"py"}
{"idx":492,"func":" \npublic static void countString (String str, char value) {\n    String [] arr = str.split (\"\");\n    StringBuffer tempString = new StringBuffer ();\n    for (String s : arr) {\n        tempString.append (s);\n        for (char ch : s.toCharArray ()) {\n            System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString.chars ().filter (i -> i == ch).count ());\n        }\n    }\n    if (! (Character.toString (value).isEmpty ())) {\n        StringBuffer tempString2 = new StringBuffer ();\n        for (String s : arr) {\n            tempString2.append (s);\n            for (char ch : s.toCharArray ()) {\n                if (ch == value) {\n                    System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString2.chars ().filter (i -> i == ch).count ());\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":493,"func":"def countString(str, value):\n    arr = str.split()\n    temp_string = ''\n    for s in arr:\n        temp_string += s\n        for ch in s:\n            print('Number of Occurrence of {} is:'.format(ch), temp_string.count(ch))\n    if value != '':\n        temp_string2 = ''\n        for s in arr:\n            temp_string2 += s\n            for ch in s:\n                if ch == value:\n                    print('Number of Occurrence of {} is:'.format(ch), temp_string2.count(ch))","lang":"py"}
{"idx":494,"func":" \npublic int solution (int X, int [] A) {\n    HashSet < Integer > hset = new HashSet < Integer > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":495,"func":"def solution(X, A): \n    hset = set() \n    for i in range(len(A)): \n        if A[i] <= X: \n            hset.add(A[i]) \n            if len(hset) == X: \n                return i \n    return -1","lang":"py"}
{"idx":496,"func":" \npublic void refund (int balance) {\n    while (balance >= 10) {\n        System.out.println (\"Balance: \u00a3\" + balance);\n        balance -= 10;\n    }\n    while (balance >= 0) {\n        System.out.println (\"Balance: \u00a3\" + balance);\n        balance -= 1;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":497,"func":"def refund(balance): \n    while balance >= 10: \n        print(\"Balance: \u00a3\" + str(balance)) \n        balance -= 10 \n    while balance >= 0: \n        print(\"Balance: \u00a3\" + str(balance)) \n        balance -= 1","lang":"py"}
{"idx":498,"func":" \npublic boolean equals (Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass () != obj.getClass ()) return false;\n    Connection other = (Connection) obj;\n    if (dstAddr == null) {\n        if (other.dstAddr != null) return false;\n    } else if (! dstAddr.equals (other.dstAddr)) return false;\n    if (dstPort != other.dstPort) return false;\n    if (protocol == null) {\n        if (other.protocol != null) return false;\n    } else if (! protocol.equals (other.protocol)) return false;\n    if (srcAddr == null) {\n        if (other.srcAddr != null) return false;\n    } else if (! srcAddr.equals (other.srcAddr)) return false;\n    if (srcPort != other.srcPort) return false;\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":499,"func":"def __eq__(self, other):\n    if self is other:\n        return True\n    if not hasattr(other, 'dstAddr') or not hasattr(other, 'dstPort') or not hasattr(other, 'protocol') or not hasattr(other, 'srcAddr') or not hasattr(other, 'srcPort'):\n        return False\n    if self.dstAddr != other.dstAddr:\n        return False\n    if self.dstPort != other.dstPort:\n        return False\n    if self.protocol != other.protocol:\n        return False\n    if self.srcAddr != other.srcAddr:\n        return False\n    if self.srcPort != other.srcPort:\n        return False\n    return True","lang":"py"}
{"idx":500,"func":" \npublic static void main (String [] args) {\n    JFrame frame = new JFrame (\"New Message\");\n    frame.setSize (100, 100);\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    JTextArea textArea = new JTextArea ();\n    frame.add (textArea, BorderLayout.CENTER);\n    JPanel list = new JPanel ();\n    list.setLayout (new BoxLayout (list, BoxLayout.Y_AXIS));\n    frame.add (list, BorderLayout.NORTH);\n    String [] labels = {\"To: \", \"Cc: \", \"Bcc: \", \"Subject: \"};\n    for (int i = 0;\n    i < labels.length; i ++) {\n        JLabel l = new JLabel (labels [i]);\n        JTextField f = new JTextField ();\n        JPanel p = new JPanel (new BorderLayout ());\n        p.add (l, BorderLayout.WEST);\n        p.add (f, BorderLayout.CENTER);\n        list.add (p);\n    }\n    frame.pack ();\n    frame.setVisible (true);\n}","lang":"java"}
{"idx":501,"func":"import tkinter as tk\nroot = tk.Tk()\nframe = tk.Frame(root, width=100, height=100)\nframe.pack()\ntextArea = tk.Text(frame, width=50, height=10)\ntextArea.pack(side=tk.CENTER, fill=tk.BOTH, expand= True)\nlistframe = tk.LabelFrame(frame, text=\"List\")\nlistframe.pack(side=tk.TOP, fill=tk.BOTH, expand= True)\nlabels = [\"To: \",\"Cc: \", \"Bcc: \", \"Subject: \"]\nfor i in range(len(labels)):\n    l = tk.Label(listframe, text= labels[i], width=10)\n    f = tk.Entry(listframe, width=20)\n    l.pack(side=tk.LEFT)\n    f.pack(side=tk.RIGHT)\nroot.mainloop()\n","lang":"py"}
{"idx":502,"func":" \npublic static boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) {\n        return false;\n    }\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();\n    char [] c1 = s1.toCharArray ();\n    char [] c2 = s2.toCharArray ();\n    Arrays.sort (c1);\n    Arrays.sort (c2);\n    String sc1 = new String (c1);\n    String sc2 = new String (c2);\n    return sc1.equals (sc2);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":503,"func":"def isAnagram(s1, s2): \n    if len(s1) != len(s2):\n        return False\n\n    s1 = s1.lower()\n    s2 = s2.lower()\n    c1 = list(s1)\n    c2 = list(s2)\n    c1.sort()\n    c2.sort()\n    sc1 = ''.join(c1)\n    sc2 = ''.join(c2)\n    return sc1 == sc2","lang":"py"}
{"idx":504,"func":" \nprivate int interpolateColor (int a, int b, float proportion) {\n    if (proportion > 1 || proportion < 0) {\n        throw new IllegalArgumentException (\"proportion must be [0 - 1]\");\n    }\n    float [] hsva = new float [3];\n    float [] hsvb = new float [3];\n    float [] hsv_output = new float [3];\n    Color.colorToHSV (a, hsva);\n    Color.colorToHSV (b, hsvb);\n    for (int i = 0;\n    i < 3; i ++) {\n        hsv_output [i] = interpolate (hsva [i], hsvb [i], proportion);\n    }\n    int alpha_a = Color.alpha (a);\n    int alpha_b = Color.alpha (b);\n    float alpha_output = interpolate (alpha_a, alpha_b, proportion);\n    return Color.HSVToColor ((int) alpha_output, hsv_output);\n}\n\n\n\n\n\/\/ Java\nprivate int interpolateColor(int a, int b, float proportion) {\n    if (proportion > 1 || proportion < 0) {\n        throw new IllegalArgumentException(\"proportion must be [0 - 1]\");\n    }\n    float[] hsva = new float[3];\n    float[] hsvb = new float[3];\n    float[] hsv_output = new float[3];\n    Color.colorToHSV(a, hsva);\n    Color.colorToHSV(b, hsvb);\n    for (int i = 0; i < 3; i ++) {\n        hsv_output[i] = interpolate(hsva[i], hsvb[i], proportion);\n    }\n    int alpha_a = Color.alpha(a);\n    int alpha_b = Color.alpha(b);\n    float alpha_output = interpolate(alpha_a, alpha_b, proportion);\n    return Color.HSVToColor((int)alpha_output, hsv_output);\n}\n\n\n","lang":"java"}
{"idx":505,"func":"def interpolate_color(a, b, proportion):\n    if proportion > 1 or proportion < 0:\n        raise ValueError('proportion must be [0 - 1]')\n  \n    hsva = [0, 0, 0]\n    hsvb = [0, 0, 0]\n    hsv_output = [0, 0, 0]\n    Color.color_to_hsv(a, hsva)\n    Color.color_to_hsv(b, hsvb)\n    for i in range(3):\n        hsv_output[i] = interpolate(hsva[i], hsvb[i], proportion)\n    \n    alpha_a = Color.alpha(a)\n    alpha_b = Color.alpha(b)\n    alpha_output = interpolate(alpha_a, alpha_b, proportion)\n    return Color.hsv_to_color(int(alpha_output), hsv_output)","lang":"py"}
{"idx":506,"func":" \npublic static void main (String [] args) {\n    Scanner scn = new Scanner (System.in);\n    ArrayList < Integer > integers = new ArrayList < > ();\n    System.out.println (\"Enter number 1\");\n    integers.add (scn.nextInt ());\n    System.out.println (\"Enter number 2\");\n    integers.add (scn.nextInt ());\n    System.out.println (\"Enter number 3\");\n    integers.add (scn.nextInt ());\n    System.out.println (\"Enter number 4\");\n    integers.add (scn.nextInt ());\n    System.out.println (\"Enter number 5\");\n    integers.add (scn.nextInt ());\n    Collections.sort (integers, Comparator.comparingInt (Math :: abs));\n    System.out.println (\"The number near zero 0 is\" + integers.get (0));\n}","lang":"java"}
{"idx":507,"func":"import sys\nfrom collections import *\nintegers = []\nprint(\"Enter number 1\")\nintegers.append(int(sys.stdin.readline().strip()))\nprint(\"Enter number 2\")\nintegers.append(int(sys.stdin.readline().strip()))\nprint(\"Enter number 3\")\nintegers.append(int(sys.stdin.readline().strip()))\nprint(\"Enter number 4\")\nintegers.append(int(sys.stdin.readline().strip()))\nprint(\"Enter number 5\")\nintegers.append(int(sys.stdin.readline().strip()))\nintegers.sort(key=lambda x: abs(x))\nprint(\"The number near zero 0 is \" + str(integers[0]))\n","lang":"py"}
{"idx":508,"func":" \npublic static void main (String [] args) {\n    for (int row = 1;\n    row <= 7; row += 2) {\n        for (int space = 7;\n        space >= row; space -= 2) {\n            System.out.print (\"*\");\n        }\n        for (int i = 1;\n        i <= row; i ++) {\n            System.out.print (\" \");\n        }\n        System.out.print (\"\\n\");\n    }\n    for (int row = 5;\n    row >= 1; row -= 2) {\n        for (int space = 7;\n        space >= row; space -= 2) {\n            System.out.print (\"*\");\n        }\n        for (int i = 1;\n        i <= row; i ++) {\n            System.out.print (\" \");\n        }\n        System.out.print (\"\\n\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":509,"func":"def main():\n    for row in range(1, 8, 2):\n        for space in range(7, row, -2):\n            print(\"*\", end = \"\")\n        for i in range(1, row + 1):\n            print(\" \", end = \"\")\n        print(\"\\n\")\n    for row in range(5, -1, -2):\n        for space in range(7, row, -2):\n            print(\"*\", end = \"\")\n        for i in range(1, row + 1):\n            print(\" \", end = \"\")\n        print(\"\\n\")\nmain()","lang":"py"}
{"idx":510,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int number;\n    if (\"\".equals (value)) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number \/ 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! \"\".equals (tensName) && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":511,"func":"def get_name(value):\n    buffer = \"\"\n    number = 0\n\n    if value == \"\":\n        number = 0\n    elif len(value) > 4:\n        number = int(value[-4:], 10)\n    else:\n        number = int(value, 10)\n    \n    number %= 1000\n\n    if number >= 100:\n        buffer += unit_processor.get_name(int(number \/ 100))\n        buffer += SEPARATOR\n        buffer += SCALE.get_name(EXPONENT)\n    \n    tens_name = tens_processor.get_name(number % 100)\n    \n    if tens_name != \"\" and number >= 100:\n        buffer += SEPARATOR\n    \n    buffer += tens_name\n    \n    return buffer","lang":"py"}
{"idx":512,"func":" \npublic static void main (String args []) {\n    Scanner myScanner = new Scanner (System.in);\n    double mon = getExpensesForDay (myScanner, \"Monday\");\n    double tues = getExpensesForDay (myScanner, \"Tuesday\");\n    double wed = getExpensesForDay (myScanner, \"Wednesday\");\n    double thurs = getExpensesForDay (myScanner, \"Thursday\");\n    double fri = getExpensesForDay (myScanner, \"Friday\");\n    double sat = getExpensesForDay (myScanner, \"Saturday\");\n    double sun = getExpensesForDay (myScanner, \"Sunday\");\n}\n\n\n\n\n\nimport sys\n\n","lang":"java"}
{"idx":513,"func":"def getExpensesForDay(my_scanner, day):\n    expenses = int(input(\"Please enter the cost for \" + day + \":\")\n    return expenses \n\nif __name__ == \"__main__\":\n    my_scanner = sys.stdin \n    mon = getExpensesForDay(my_scanner, \"Monday\")\n    tues = getExpensesForDay(my_scanner, \"Tuesday\")\n    wed = getExpensesForDay(my_scanner, \"Wednesday\")\n    thurs = getExpensesForDay(my_scanner, \"Thursday\")\n    fri = getExpensesForDay(my_scanner, \"Friday\")\n    sat = getExpensesForDay(my_scanner, \"Saturday\")\n    sun = getExpensesForDay(my_scanner, \"Sunday\")","lang":"py"}
{"idx":514,"func":" \nstatic void test_02 () throws FileNotFoundException {\n    final File file = new File (\"input.txt\");\n    final Scanner scanner = new Scanner (file);\n    int [] houseLocations = new int [73382];\n    for (int counter = 0;\n    counter < 73382; counter ++) {\n        houseLocations [counter] = scanner.nextInt ();\n    }\n    scanner.close ();\n    final int rounds = 400;\n    final int [] uniqueHouseLocationsSorted = uniqueHouseLocationsSorted (houseLocations);\n    final int transmitterRange = 73381;\n    final long start = System.currentTimeMillis ();\n    for (int i = 0;\n    i < rounds; i ++) {\n        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);\n    }\n    final long end = System.currentTimeMillis ();\n    System.out.println (\"Took: \" + (end - start) + \" milliseconds..\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":515,"func":"def test_02():\n    file = open(\"input.txt\", \"r\")\n    houseLocations = list(map(int, file.readline().split())) # List of house locations in array format\n    rounds = 400 # Number of rounds \n    transmitterRange = 73381 # Range of the transmitter\n\n    uniqueHouseLocationsSorted = sorted(list(set(houseLocations))) # Get unique house locations and sort it\n    start = time.time() # Start Time\n    for i in range(0, rounds):\n        minNumOfTransmitters = minNumOfTransmitters(uniqueHouseLocationsSorted, transmitterRange)\n    end = time.time() # End Time\n\n    print(\"Took\", (end - start), \"milliseconds..\")","lang":"py"}
{"idx":516,"func":" \npublic VV remove (String key) {\n    synchronized (lock) {\n        Item < VV > item = cache.remove (key);\n        if (item != null) {\n            return item.payload;\n        } else {\n            return null;\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":517,"func":"def remove(key):\n    with lock:\n        item = cache.remove(key)\n        if item is not None:\n            return item.payload\n        else:\n            return None","lang":"py"}
{"idx":518,"func":" \n        public void run () {\n            createAndShowGUI (new JTableTest ().panel, \"Test\");\n        }}\n    );\n}\n\n}\n\n\n\n\nimport Tkinter\n\n","lang":"java"}
{"idx":519,"func":"def run():\n    mainFrame = Tkinter.Tk()\n    mainFrame.title(\"Test\")\n    panel = JTableTest().panel\n    mainFrame.createAndShowGUI(panel)\n    mainFrame.mainloop()","lang":"py"}
{"idx":520,"func":" \npublic void put (K key, V val) {\n    while (currentSize >= maxSize) {\n        freeSpace ();\n    }\n    if (map.containsKey (key)) {\n        get (key);\n        return;\n    }\n    ListNode < K > ln = queue.add (key);\n    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);\n    map.put (key, rv);\n    currentSize ++;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":521,"func":"def put(self, key, val):\n    while self.currentSize >= self.maxSize:\n        self.freeSpace()\n\n    if key in self.map:\n        self.get(key)\n        return\n\n    ln = self.queue.add(key)\n    rv = ValueHolder(val, ln)\n    self.map[key] = rv\n    self.currentSize += 1","lang":"py"}
{"idx":522,"func":" \npublic void run () {\n    while (true) {\n        try {\n            Object expensiveObject = expensiveObjects.take ();\n            String output = task ();\n            expensiveObjects.put (expensiveObject);\n            if (output != null) {\n                int counter = outputCount.getAndIncrement ();\n                System.out.println (counter);\n                if (counter >= 100) {\n                    break;\n                }\n            }\n        } catch (InterruptedException e) {\n            System.out.println (\"Error!\");\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":523,"func":"def run ():\n    while True:\n        try:\n            expensive_object = expensiveObjects.get()\n            result = task()\n            expensiveObjects.put(expensive_object)\n            if result != None:\n                counter = outputCount.get_and_increment()\n                print(counter)\n                if counter >= 100:\n                    break\n        except InterruptedException as e:\n            print(\"Error!\")","lang":"py"}
{"idx":524,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"toe\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":525,"func":"def run(): \n    try: \n        for i in range(2): \n            print(\"toe\")\n    except Exception as e: \n        print(e.__traceback__)","lang":"py"}
{"idx":526,"func":" \npublic static String camelCaser (String str) {\n    String [] words = str.split (\"_\");\n    String res = \"\";\n    for (String word : words) {\n        if (! word.isEmpty ()) {\n            res += Character.toUpperCase (word.charAt (0));\n            if (word.length () > 1) {\n                res += word.substring (1);\n            }\n        }\n    }\n    return res;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":527,"func":"def camelCaser(str): \n    words = str.split(\"_\")\n    res = \"\"\n    for word in words: \n        if len(word) != 0: \n            res += word[0].upper()\n            if len(word) > 1: \n                res += word[1:]\n    return res","lang":"py"}
{"idx":528,"func":" \nprivate void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {\n    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":529,"func":"def transform (workbookOld, workbookNew, cellOld, cellNew): \n    cellNew.setCellComment (cellOld.getCellComment ()) \n    hash = cellOld.getCellStyle ().hash_code () \n    if styleMap is not None and hash not in styleMap: \n        transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), workbookNew.createCellStyle ()) \n    cellNew.setCellStyle (styleMap [hash]) \n  \n    cell_type = cellOld.getCellType () \n    if cell_type == Cell.CELL_TYPE_BLANK: \n        pass \n    elif cell_type == Cell.CELL_TYPE_BOOLEAN: \n        cellNew.setCellValue (cellOld.getBooleanCellValue ()) \n    elif cell_type == Cell.CELL_TYPE_ERROR: \n        cellNew.setCellValue (cellOld.getErrorCellValue ()) \n    elif cell_type == Cell.CELL_TYPE_FORMULA: \n        cellNew.setCellValue (cellOld.getCellFormula ()) \n    elif cell_type == Cell.CELL_TYPE_NUMERIC: \n        cellNew.setCellValue (cellOld.getNumericCellValue ()) \n    elif cell_type == Cell.CELL_TYPE_STRING: \n        cellNew.setCellValue (cellOld.getStringCellValue ()) \n    else: \n        print (\"transform: Unbekannter Zellentyp\" + cellOld.getCellType ())","lang":"py"}
{"idx":530,"func":" \npublic static String interleave (String you, String me) {\n    char [] a = you.toCharArray ();\n    char [] b = me.toCharArray ();\n    StringBuilder out = new StringBuilder ();\n    int maxLength = Math.max (a.length, b.length);\n    for (int i = 0;\n    i < maxLength; i ++) {\n        if (i < a.length) out.append (a [i]);\n        if (i < b.length) out.append (b [i]);\n    }\n    return out.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":531,"func":"def interleave(you, me): \n  a = list(you) \n  b = list(me) \n  out = [] \n  maxLength = max(len(a), len(b)) \n\n  for i in range(maxLength): \n    if i < len(a): \n      out.append(a[i]) \n    if i < len(b): \n      out.append(b[i]) \n\n  return ''.join(out)","lang":"py"}
{"idx":532,"func":" \n        public void run () {\n            JFrame frame = new FrameDemo ();\n            frame.setVisible (true);\n        }}\n    );\n}","lang":"java"}
{"idx":533,"func":"}\n","lang":"py"}
{"idx":534,"func":" \npublic void run () {\n    JMenuBar menuBar = new JMenuBar ();\n    JMenu menu = new JMenu (\"A regular menu\");\n    menu.add (new JMenuItem (\"Menu item\"));\n    JMenu gridMenu = new JMenu (\"Menu with grid\");\n    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));\n    gridMenu.add (\"Top left\");\n    gridMenu.add (\"Top right\");\n    gridMenu.add (\"Bottom left\");\n    gridMenu.add (\"Bottom right\");\n    menu.add (gridMenu);\n    menuBar.add (menu);\n    JFrame frame = new JFrame (\"Menus\");\n    frame.setJMenuBar (menuBar);\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.pack ();\n    frame.setVisible (true);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":535,"func":"def run (): \n    menu_bar = JMenuBar() \n    menu = JMenu(\"A regular menu\") \n    menu.add(JMenuItem(\"Menu item\")) \n    grid_menu = JMenu(\"Menu with grid\") \n    grid_menu.getPopupMenu().setLayout(GridLayout(2, 2)) \n    grid_menu.add(\"Top left\") \n    grid_menu.add(\"Top right\") \n    grid_menu.add(\"Bottom left\") \n    grid_menu.add(\"Bottom right\") \n    menu.add(grid_menu) \n    menu_bar.add(menu) \n    frame = JFrame(\"Menus\") \n    frame.setJMenuBar(menu_bar) \n    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE) \n    frame.pack() \n    frame.setVisible(True)","lang":"py"}
{"idx":536,"func":" \npublic static void countString (String str, char searchKey) {\n    String count = \"\";\n    for (int i = 0;\n    i < str.length (); i ++) {\n        if (str.charAt (i) == searchKey) count += str.charAt (i) + \"\\n\";\n    }\n    System.out.println (count + \"\\nNumber of Occurrence of \" + searchKey + \" is \" + count.length () + \" in string \" + str);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":537,"func":"def countString(string,searchKey): \n    count = 0\n    for i in string:\n        if i == searchKey:\n            count +=1\n    print(\"Number of Occurrence of \" + searchKey + \" is \" + str(count) + \" in string \" + string)","lang":"py"}
{"idx":538,"func":" \npublic void start (Stage primaryStage) {\n    double y1 = 15;\n    ProgressBar p1 = new ProgressBar ();\n    p1.setLayoutY (y1);\n    HBox vb1 = new HBox (10);\n    vb1.getChildren ().addAll (new Label (\"Progressbar 1\"), p1);\n    double y2 = 15;\n    ProgressBar p2 = new ProgressBar ();\n    p2.setLayoutY (y2);\n    HBox vb2 = new HBox (10);\n    vb2.getChildren ().addAll (new Label (\"Progressbar 2\"), p2);\n    double y3 = 15;\n    ProgressBar p3 = new ProgressBar ();\n    p3.setLayoutY (y3);\n    HBox vb3 = new HBox (10);\n    vb3.getChildren ().addAll (new Label (\"Progressbar 3\"), p3);\n    TextChooser textChooser = new TextChooser (vb1, vb2, vb3);\n    textChooser.setStyle (\"-fx-font: 10px \\\"Verdana\\\";\");\n    StackPane root = new StackPane ();\n    root.getChildren ().add (textChooser);\n    Scene scene = new Scene (root, 300, 250);\n    primaryStage.setTitle (\"Hello World!\");\n    primaryStage.setScene (scene);\n    primaryStage.show ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":539,"func":"def start(primaryStage):\n\ty1 = 15\n\tp1 = ProgressBar()\n\tp1.layoutY = y1\n\tvb1 = HBox(10)\n\tvb1.children.add(Label(\"Progressbar 1\"), p1)\n\ty2 = 15\n\tp2 = ProgressBar()\n\tp2.layoutY = y2\n\tvb2 = HBox(10)\n\tvb2.children.add(Label(\"Progressbar 2\"), p2)\n\ty3 = 15\n\tp3 = ProgressBar()\n\tp3.layoutY = y3\n\tvb3 = HBox(10)\n\tvb3.children.add(Label(\"Progressbar 3\"), p3)\n\ttextChooser = TextChooser(vb1, vb2, vb3)\n\ttextChooser.style = \"-fx-font: 10px \\\"Verdana\\\";\"\n\troot = StackPane()\n\troot.children.add(textChooser)\n\tscene = Scene(root, 300, 250)\n\tprimaryStage.title = \"Hello World!\"\n\tprimaryStage.scene = scene\n\tprimaryStage.show()","lang":"py"}
{"idx":540,"func":" \nprivate void expandAllNodes (JTree tree) {\n    int j = tree.getRowCount ();\n    int i = 0;\n    while (i < j) {\n        tree.expandRow (i);\n        i += 1;\n        j = tree.getRowCount ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":541,"func":"def expandAllNodes (tree):\n    j = tree.getRowCount ()\n    i = 0\n    while i < j:\n        tree.expandRow (i)\n        i += 1\n        j = tree.getRowCount ()","lang":"py"}
{"idx":542,"func":" \nstatic boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) return false;\n    int n = s1.length ();\n    int [] charMap = new int [256];\n    for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":543,"func":"def isAnagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    \n    charMap = [0] * 256\n    \n    for i in range(len(s1)):\n        charMap[ord(s1[i])] += 1\n        charMap[ord(s2[i])] -= 1\n    \n    for x in charMap:\n        if x != 0:\n            return False\n    \n    return True","lang":"py"}
{"idx":544,"func":" \npublic Component getTableCellEditorComponent (JTable table, Object value, boolean isSelected, int row, int col) {\n    Component comp = super.getTableCellEditorComponent (table, value, isSelected, row, col);\n    if (value instanceof java.lang.String) {\n        DefaultStyledDocument sty_doc = new DefaultStyledDocument ();\n        try {\n            sty_doc.insertString (0, (String) value, null);\n        } catch (BadLocationException e) {\n            e.printStackTrace ();\n        }\n        JTextPane jtp_comp = new JTextPane (sty_doc);\n        jtp_comp.setEditable (false);\n        return jtp_comp;\n    }\n    return comp;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":545,"func":"def getTableCellEditorComponent(table, value, isSelected, row, col):\n    comp = super(getTableCellEditorComponent, (table, value, isSelected, row, col))\n    if type(value) is str:\n        sty_doc = DefaultStyledDocument()\n        try:\n            sty_doc.insertString(0, value, None)\n        except Exception as e:\n            print(e)\n        jtp_comp = JTextPane(sty_doc)\n        jtp_comp.setEditable(False)\n        return jtp_comp\n    return comp","lang":"py"}
{"idx":546,"func":" \npublic static void main (String [] args) {\n    String str = \"my name is khan\";\n    String words [] = str.split (\"\\\\s\");\n    String capitalizedWord = \"\";\n    for (String w : words) {\n        String first = w.substring (0, 1);\n        String f_after = w.substring (1);\n        capitalizedWord += first.toUpperCase () + f_after + \" \";\n    }\n    System.out.println (capitalizedWord);\n}","lang":"java"}
{"idx":547,"func":"str = \"my name is khan\"\n","lang":"py"}
{"idx":548,"func":" \npublic synchronized void run () {\n    if (! this.infinite) {\n        if (this.repeatCounter > 0) {\n            this.command.run ();\n            this.repeatCounter --;\n        } else {\n            this.control.cancel (false);\n        }\n    } else {\n        this.command.run ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":549,"func":"def run(self):\n    if not self.infinite:\n        if self.repeatCounter > 0:\n            self.command.run()\n            self.repeatCounter -= 1\n        else:\n            self.control.cancel(False)\n    else:\n        self.command.run()","lang":"py"}
{"idx":550,"func":" \npublic boolean isExpectedPassword (final String password, final byte [] salt, final byte [] hash) {\n    Validate.notNull (password, \"Password must not be null\");\n    Validate.notNull (salt, \"Salt must not be null\");\n    Validate.notNull (hash, \"Hash must not be null\");\n    try {\n        final byte [] passwordBytes = password.getBytes (\"UTF-8\");\n        final byte [] all = ArrayUtils.addAll (passwordBytes, salt);\n        SHA3.DigestSHA3 md = new SHA3.Digest512 ();\n        md.update (all);\n        final byte [] digest = md.digest ();\n        return Arrays.equals (digest, hash);\n    } catch (UnsupportedEncodingException e) {\n        final String message = String.format (\"Caught UnsupportedEncodingException e: <%s>\", e.getMessage ());\n        LOGGER.error (message);\n    }\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":551,"func":"def isExpectedPassword(password, salt, hash):\n    Validate.notNull(password, \"Password must not be null\")\n    Validate.notNull(salt, \"Salt must not be null\")\n    Validate.notNull(hash, \"Hash must not be null\")\n    try:\n        passwordBytes = password.encode('utf-8')\n        all = passwordBytes + salt\n        md = SHA3.Digest512()\n        md.update(passwordBytes)\n        digest = md.digest()\n        return digest == hash\n    except UnsupportedEncodingException as e:\n        message = \"Caught UnsupportedEncodingException e: {}\".format(e.message)\n        LOGGER.error(message):\n    return False","lang":"py"}
{"idx":552,"func":" \npublic static void main (String [] args) {\n    long twoTo10 = 1024;\n    long sum210 = 0;\n    for (long i = 1;\n    i <= 1000; i ++) {\n        sum210 += pow (i, i, twoTo10);\n        sum210 %= twoTo10;\n    }\n    long fiveTo10 = 9_765_625;\n    long sum510 = 0;\n    for (long i = 1;\n    i <= 1000; i ++) {\n        sum510 += pow (i, i, fiveTo10);\n        sum510 %= fiveTo10;\n    }\n    long tenTo10 = 10_000_000_000L;\n    long answer = sum210 * inverse (fiveTo10, twoTo10) * fiveTo10 + sum510 * inverse (twoTo10, fiveTo10) * twoTo10;\n    answer %= tenTo10;\n    System.out.println (answer);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":553,"func":"def main(): \n   twoTo10 = 1024\n   sum_2_10 = 0\n   for i in range(1,1001): \n      sum_2_10 += pow(i, i, twoTo10)\n      sum_2_10 %= twoTo10\n   \n   fiveTo10 = 9765625\n   sum_5_10 = 0\n   for i in range(1,1001): \n      sum_5_10 += pow(i, i, fiveTo10)\n      sum_5_10 %= fiveTo10\n\n   tenTo10 = 10000000000\n   answer = sum_2_10 * inverse(fiveTo10, twoTo10) * fiveTo10 + sum_5_10 * inverse(twoTo10, fiveTo10) * twoTo10\n   answer %= tenTo10\n\n   print(answer)\n\nmain()","lang":"py"}
{"idx":554,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":555,"func":"def solution(X, A):\n    length = len(A)\n    if X > length:\n        return -1\n    isFilled = [0] * X\n    jumped = 0\n    for i, x in enumerate(A):\n        if x <= X:\n            if isFilled[x-1] == 0:\n                isFilled[x-1] = 1\n                jumped += 1\n                if jumped == X:\n                    return i\n    return -1","lang":"py"}
{"idx":556,"func":" \npublic void actionPerformed (ActionEvent e) {\n    System.out.println ();\n    System.out.println (\"Display Dialogs\");\n    for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\t\" + dialog.getTitle () + \" \" + dialog.isDisplayable ());\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":557,"func":"def actionPerformed(e):\n  print()\n  print(\"Display Dialogs\")\n  for window in Window.getWindows():\n    if isinstance(window, JDialog):\n      dialog = JDialog(window)\n      print(\"\\t\"+dialog.getTitle()+\" \"+str(dialog.isDisplayable()))","lang":"py"}
{"idx":558,"func":" \n        public void run () {\n            new RowSorterCustom ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":559,"func":"def run():\n    RowSorterCustom()","lang":"py"}
{"idx":560,"func":" \npublic static String toHexString (byte bytes []) {\n    if (bytes == null) {\n        return null;\n    }\n    StringBuffer sb = new StringBuffer ();\n    for (int iter = 0;\n    iter < bytes.length; iter ++) {\n        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":561,"func":"def toHexString(bytes):\n    if bytes is None:\n        return None\n    sb = \"\"\n    for i in range(len(bytes)):\n        high = (bytes[i] & 0xf0) >> 4\n        low = bytes[i] & 0x0f\n        sb += nibble2char(high)\n        sb += nibble2char(low)\n    return sb","lang":"py"}
{"idx":562,"func":" \nbool isPrime (int number) {\n    if (number < 2) return false;\n    if (number == 2) return true;\n    if (number % 2 == 0) return false;\n    for (int i = 3;\n    (i * i) <= number; i += 2) {\n        if (number % i == 0) return false;\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":563,"func":"def isPrime(number):\n    if number < 2:\n        return False\n    if number == 2:\n        return True\n    if number % 2 == 0:\n        return False\n    for i in range(3, number \/\/ 2, 2):\n        if number % i == 0:\n            return False\n    return True","lang":"py"}
{"idx":564,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int N = S.length ();\n    int M = P.length;\n    int [] result = new int [M];\n    lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;\n    for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":565,"func":"def solution(S, P, Q):\n    N = len(S)\n    M = len(P)\n    result = [0] * M\n    lastOccurencesMap = [[0,0,0] for _ in range(N)]\n    lastA, lastC, lastG = -1, -1, -1\n    for i,c in enumerate(S):\n        if c == \"A\":\n            lastA = i\n        elif c == \"C\":\n            lastC = i\n        elif c == \"G\":\n            lastG = i\n        lastOccurencesMap[i] = [lastA, lastC, lastG]\n\n    for i in range(M):\n        startIndex, endIndex = P[i],Q[i]\n        minimum = 4\n        for n in range(3):\n            lastOccurence = getLastNucleotideOccurrence(startIndex, endIndex, n)\n            if lastOccurence != 0:\n                minimum = n+1\n                break\n        result[i] = minimum\n    return result","lang":"py"}
{"idx":566,"func":" \npublic static void main (String [] args) {\n    System.out.println (\"Hello World\");\n    String xyz = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    final int mid = (xyz.length () + 1) \/ 2;\n    String [] spstr = {xyz.substring (0, mid), xyz.substring (mid)};\n    String firstMix = spstr [1] + spstr [0];\n    String [] array = firstMix.split (\"\");\n    for (int i = 1;\n    i < 3; i ++) {\n        String temp = array [i];\n        array [i] = array [array.length - i];\n        array [array.length - i] = temp;\n    }\n    String str1 = Arrays.toString (array);\n    str1 = str1.substring (1, str1.length () - 1).replaceAll (\",\", \"\");\n    int j = 2;\n    for (int i = ((array.length \/ 2) - 2);\n    i < (array.length) \/ 2; i ++) {\n        String temp = array [i];\n        array [i] = array [array.length \/ 2 + j];\n        array [array.length \/ 2 + j] = temp;\n        j --;\n    }\n    String str2 = Arrays.toString (array);\n    str2 = str2.substring (1, str2.length () - 1).replaceAll (\",\", \"\");\n    System.out.println (firstMix);\n    System.out.println (str1);\n    System.out.println (str2);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":567,"func":"def main(args):\n    print(\"Hello World\")\n    xyz = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    mid = (len(xyz) + 1) \/\/ 2\n    spstr = [xyz[0:mid], xyz[mid:]]\n    first_mix = spstr[1] + spstr[0]\n    array = list(first_mix)\n    for i in range(1,3):\n        temp = array[i]\n        array[i] = array[len(array) - i]\n        array[len(array) - i] = temp\n    str1 = ''.join(array)\n    j = 2\n    for i in range(len(array) \/\/ 2 - 2, len(array) \/\/ 2):\n        temp = array[i]\n        array[i] = array[len(array) \/\/ 2 + j]\n        array[len(array) \/\/ 2 + j] = temp\n        j -= 1\n    str2 = ''.join(array)\n    print(first_mix)\n    print(str1)\n    print(str2)\n\nif __name__ == '__main__':\n    main(sys.argv)","lang":"py"}
{"idx":568,"func":" \npublic static void shuffle (Object [] a) {\n    int n = a.length;\n    for (int i = 0;\n    i < n; i ++) {\n        int r = i + (int) (Math.random () * (n - i));\n        Object swap = a [r];\n        a [r] = a [i];\n        a [i] = swap;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":569,"func":"def shuffle(array):\n    n = len(array)\n    for i in range(n):\n        r = i + int(random.random()*(n-i))\n        swap = array[r]\n        array[r] = array[i]\n        array[i] = swap","lang":"py"}
{"idx":570,"func":" \nprivate void transform () {\n    String call = \"transform \";\n    System.out.println (call + \"Workbook\");\n    XSSFSheet sheetNew;\n    HSSFSheet sheetOld;\n    this.workbookNew.setForceFormulaRecalculation (this.workbookOld.getForceFormulaRecalculation ());\n    this.workbookNew.setMissingCellPolicy (this.workbookOld.getMissingCellPolicy ());\n    for (int i = 0;\n    i < this.workbookOld.getNumberOfSheets (); i ++) {\n        sheetOld = this.workbookOld.getSheetAt (i);\n        sheetNew = this.workbookNew.getSheet (sheetOld.getSheetName ());\n        System.out.println (call + \"Sheet erstellt: \" + sheetOld.getSheetName ());\n        sheetNew = this.workbookNew.createSheet (sheetOld.getSheetName ());\n        this.transform (sheetOld, sheetNew);\n    }\n    System.out.println (call + \"Anzahl verwendeter Styles: \" + this.styleMap.size ());\n    System.out.println (call + \"abgeschlossen\");\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":571,"func":"def transform(): \n    call = \"transform \"\n    print (call + \"Workbook\")\n    workbookNew = \"\"\n    workbookOld = \"\"\n    workbookNew.setForceFormulaRecalculation (workbookOld.getForceFormulaRecalculation ())\n    workbookNew.setMissingCellPolicy (workbookOld.getMissingCellPolicy ())\n    for i in range (workbookOld.getNumberOfSheets ()):\n        sheetOld = workbookOld.getSheetAt (i)\n        sheetNew = workbookNew.getSheet (sheetOld.getSheetName ())\n        print (call + \"Sheet erstellt: \" + sheetOld.getSheetName ())\n        sheetNew = workbookNew.createSheet (sheetOld.getSheetName ())\n        transform (sheetOld, sheetNew)\n    print (call + \"Anzahl verwendeter Styles: \" + len(styleMap))\n    print (call + \"abgeschlossen\")","lang":"py"}
{"idx":572,"func":" \npublic void mouseReleased (int mod, Point loc) {\n    if (pressLocation != null && dragLocation != null) {\n        pressLocation = null;\n    } else if (dragLocation != null) {\n    } else {\n    }\n    pressLocation = null;\n    dragLocation = null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":573,"func":"def mouseReleased(mod, loc):\n    if pressLocation is not None and dragLocation is not None:\n        pressLocation = None \n    elif dragLocation is not None:\n    else:\n    pressLocation = None\n    dragLocation = None","lang":"py"}
{"idx":574,"func":" \n        public void run () {\n            whiteSpace = new WhiteSpace ();\n        }}\n    ;\n\n\n\n\n","lang":"java"}
{"idx":575,"func":"def run(): \n    whiteSpace = WhiteSpace()","lang":"py"}
{"idx":576,"func":" \npublic void contextDestroyed (ServletContextEvent sce) {\n    Context initContext = new InitialContext ();\n    Context envContext = (Context) initContext.lookup (\"java:\/comp\/env\");\n    DataSource datasource = (DataSource) envContext.lookup (\"jdbc\/database\");\n    try {\n        java.sql.Driver mySqlDriver = DriverManager.getDriver (\"jdbc:mysql:\/\/localhost:3306\/\");\n        DriverManager.deregisterDriver (mySqlDriver);\n    } catch (SQLException ex) {\n        logger.info (\"Could not deregister driver:\".concat (ex.getMessage ()));\n    }\n    dataSource = null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":577,"func":"def contextDestroyed(sce): \n    initContext = InitialContext() \n    envContext = initContext.lookup(\"java:\/comp\/env\") \n    datasource = envContext.lookup(\"jdbc\/database\") \n    try: \n        mySqlDriver = DriverManager.getDriver(\"jdbc:mysql:\/\/localhost:3306\/\") \n        DriverManager.deregisterDriver(mySqlDriver) \n    except SQLException as ex: \n        logger.info(\"Could not deregister driver:\".concat(ex.getMessage())) \n    dataSource = null","lang":"py"}
{"idx":578,"func":" \npublic static void main (String [] args) {\n    String s1 = \"Cat\";\n    String s2 = \"Cat\";\n    String s3 = new String (\"Cat\");\n    if (s1 == s2) {\n        System.out.println (\"true\");\n    } else {\n        System.out.println (\"false\");\n    }\n    if (s1 == s3) {\n        System.out.println (\"true\");\n    } else {\n        System.out.println (\"false\");\n    }\n    if (s1.equals (s3)) {\n        System.out.println (\"true\");\n    } else {\n        System.out.println (\"False\");\n    }\n}","lang":"java"}
{"idx":579,"func":"s1 = \"Cat\"\ns2 = \"Cat\"\ns3 = \"Cat\"\nif s1 == s2:\n    print(\"true\")\nelse:\n    print(\"false\")\nif s1 == s3:\n    print(\"true\")\nelse:\n    print(\"false\")\nif s1.equals(s3):\n    print(\"true\")\nelse:\n    print(\"false\")\n","lang":"py"}
{"idx":580,"func":" \nstatic int search (int [] A, int K) {\n    int l = 0;\n    int u = A.length - 1;\n    int m;\n    while (l <= u) {\n        m = (u - l) \/ 2 + l;\n        if (A [m] < K) l = m + 1;\n        else if (A [m] == K) return m;\n        else u = m - 1;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":581,"func":"def search(A,K):\n  l = 0 \n  u = len(A) - 1 \n  while (l <= u): \n    m = (u - l)\/\/2 + l\n    if A[m] < K: \n      l = m + 1 \n    elif A[m] == K: \n      return m \n    else: \n      u = m - 1 \n  return -1","lang":"py"}
{"idx":582,"func":" \npublic static boolean hasLoop (Node root) {\n    if (root == null) return false;\n    Node slow = root, fast = root;\n    int taken = 0, limit = 2;\n    while (fast.next != null) {\n        fast = fast.next;\n        taken ++;\n        if (slow == fast) return true;\n        if (taken == limit) {\n            taken = 0;\n            limit <<= 1;\n            slow = fast;\n        }\n    }\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":583,"func":"def hasLoop(root):\n    if root is None:\n        return False\n    slow = root\n    fast = root\n    taken = 0\n    limit = 2\n    while(fast.next != None):\n        fast = fast.next\n        taken += 1\n        if (slow == fast):\n            return True\n        if taken == limit:\n            taken = 0\n            limit = limit * 2\n            slow = fast\n    return False","lang":"py"}
{"idx":584,"func":" \npublic static void main (String [] args) {\n    Scanner input = new Scanner (System.in);\n    System.out.println (\"Enter elemnt size \");\n    int size = input.nextInt ();\n    int x = 0;\n    int [] list1Array = new int [size];\n    for (int y = 0;\n    y < size; y ++) {\n        System.out.println (\"Enter number\");\n        list1Array [x] = input.nextInt ();\n        x ++;\n    }\n    System.out.println (Arrays.toString (list1Array));\n}","lang":"java"}
{"idx":585,"func":"size = int( input(\"Enter element size:\"))\nlist1Array = []\nfor i in range (size):\n    list1Array.append(int(input(\"Enter number: \")))\nprint(list1Array)\n","lang":"py"}
{"idx":586,"func":" \npublic static boolean isBalanced (String brackets) {\n    Map < Character, Character > braces = new HashMap < > ();\n    braces.put ('(', ')');\n    braces.put ('[', ']');\n    braces.put ('{', '}');\n    if (brackets.length () % 2 != 0) {\n        return false;\n    }\n    Stack < Character > halfBraces = new Stack ();\n    for (char ch : brackets.toCharArray ()) {\n        if (braces.containsKey (ch)) {\n            halfBraces.push (braces.get (ch));\n        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {\n            return false;\n        }\n    }\n    return halfBraces.isEmpty ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":587,"func":"def isBalanced(brackets):\n  braces = {\n    '(' : ')',\n    '[' : ']',\n    '{' : '}'\n  }\n  if len(brackets) % 2 != 0:\n    return False\n\n  halfBraces = []\n  for char in brackets:\n    if char in braces:\n      halfBraces.append(braces[char])\n    elif not halfBraces or char != halfBraces.pop():\n      return False\n\n  return not halfBraces","lang":"py"}
{"idx":588,"func":" \n        public void run () {\n            fileChooser.setSelectedFile (new File (file));\n            if (fileChooser.showOpenDialog (button) == JFileChooser.APPROVE_OPTION) {\n                file = fileChooser.getSelectedFile ().getAbsolutePath ();\n            }\n            fireEditingStopped ();\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":589,"func":"def run():\n    fileChooser.setSelectedFile(file)\n    if fileChooser.showOpenDialog(button) == JFileChooser.APPROVE_OPTION:\n      file = fileChooser.getSelectedFile().getAbsolutePath()\n    fireEditingStopped()","lang":"py"}
{"idx":590,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;\n}\n\n\n\n\n\n    ","lang":"java"}
{"idx":591,"func":"def filter(source, start, end, dest, dstart, dend):\n        dot_pos = -1\n        for i in range(len(dest)):\n            if dest[i] == '.' or dest[i] == ',':\n                dot_pos = i\n                break\n        if dot_pos >= 0:\n            if source == '.' or source == ',':\n                return ''\n            if dend <= dot_pos:\n                return None\n            if len(dest) - dot_pos > decimalDigits:\n                return ''\n        return None","lang":"py"}
{"idx":592,"func":" \n        void go () {\n            acquireUninterruptibly ();\n            System.err.println (max - availablePermits ());\n            go ();\n        }}\n    .go ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":593,"func":"def go():\n    acquireUninterruptibly()\n    print(max - availablePermits())\n    go()\n\ngo()","lang":"py"}
{"idx":594,"func":" \npublic void actionPerformed (ActionEvent e) {\n    Color c = label.getBackground ();\n    if (FLASH_COLOR.equals (c)) {\n        label.setBackground (null);\n        label.setForeground (Color.black);\n    } else {\n        label.setBackground (FLASH_COLOR);\n        label.setForeground (Color.white);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":595,"func":"def actionPerformed(e):\n    c = label.getBackground()\n    if c == FLASH_COLOR:\n        label.setBackground(None)\n        label.setForeground(Color.black)\n    else:\n        label.setBackground(FLASH_COLOR)\n        label.setForeground(Color.white)","lang":"py"}
{"idx":596,"func":" \npublic static void main (String args []) {\n    String inputString;\n    Scanner s = new Scanner (System.in);\n    inputString = s.nextLine ();\n    if (! inputString.matches (\"([+-]?([0-9]*[.])?[0-9]+)\")) {\n        System.out.println (\"Not a Number\");\n    } else {\n        Double result2 = getNumber (inputString);\n        System.out.println (\"result = \" + result2);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":597,"func":"def main(): \n    inputString = input('Enter number: ')\n    if not inputString.replace('.','',1).isdigit(): \n        print('Not a Number') \n    else: \n        result2 = getNumber(inputString) \n        print('result = ', result2)","lang":"py"}
{"idx":598,"func":" \npublic static void main (String args []) {\n    inp = new Scanner (System.in);\n    String str = inp.nextLine ();\n    List < Character > arrlist = new ArrayList < Character > ();\n    for (int i = 0;\n    i < str.length (); i ++) {\n        arrlist.add (str.charAt (i));\n    }\n    for (int i = 0;\n    i < str.length (); i ++) {\n        int freq = Collections.frequency (arrlist, str.charAt (i));\n        System.out.println (\"Frequency of \" + str.charAt (i) + \"  is:   \" + freq);\n    }\n}","lang":"java"}
{"idx":599,"func":"import collections\ninp = input()\narrlist = []\nfor char in inp:\n    arrlist.append(char)\nfor char in inp:\n    x = arrlist.count(char)\n    print(\"Frequency of \" + char + \"  is:   \" + str(x))\n","lang":"py"}
{"idx":600,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (name.isEmpty ()) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || decimalValue.isEmpty ())) {\n        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n    }\n    return name;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":601,"func":"def getName(value):\n    negative = False\n    if value.startswith('-'):\n        negative = True\n        value = value[1:]\n\n    decimals = value.find('.')\n    decimalValue = None\n    if decimals >= 0:\n        decimalValue = value[decimals+1:]\n        value = value[ : decimals]\n\n    name = processor.getName(value)\n    if not name:\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n\n    if decimalValue and not decimalValue.isEmpty():\n        name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    return name","lang":"py"}
{"idx":602,"func":" \npublic String getString () {\n    StringBuilder msg = new StringBuilder ();\n    String read;\n    do {\n        read = inputGenerator.getMessage ();\n        msg.append (read);\n    } while (read.toLowerCase ().startsWith (\"hi\"));\n    return msg.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":603,"func":"def getString(): \n    msg = \"\"\n    read = \"init\"\n    while read.lower().startswith(\"hi\"):\n        read = inputGenerator.getMessage()\n        msg = msg + read\n    return msg","lang":"py"}
{"idx":604,"func":" \npublic static void main (String [] args) {\n    try {\n        InetAddress address = InetAddress.getByName (\"192.168.1.103\");\n        boolean reachable = address.isReachable (10000);\n        System.out.println (\"Is host reachable? \" + reachable);\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":605,"func":"import socket\ntry:\n    host = socket.gethostbyname(\"192.168.1.103\")\n    s = socket.create_connection((host, 80), 10)\n    print(\"Is host reachable? \" + s.recv(2048).decode(\"utf-8\"))\nexcept:\n    print(\"Host not reachable\")\n","lang":"py"}
{"idx":606,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":607,"func":"def solution (X, A):\n    len = len(A)\n    if X > len:\n        return -1\n    isFilled = [0] * X\n    jumped = 0\n    for i in range (0, len):\n        x = A[i]\n        if x <= X:\n            if isFilled[x - 1] == 0:\n                isFilled[x - 1] = 1\n                jumped += 1\n                if jumped == X:\n                    return i\n    return -1","lang":"py"}
{"idx":608,"func":" \n        public void run () {\n            newPanel.scrollRectToVisible (newPanel.getBounds ());\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":609,"func":"def run():\n    newPanel.scroll_rect_to_visible(newPanel.get_bounds())","lang":"py"}
{"idx":610,"func":" \npublic static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {\n    String answer = \"\";\n    int count = 1;\n    for (int i = 0;\n    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {\n        if (sixLetter.length > i) {\n            answer += sixLetter [i] + \" \";\n        }\n        if (fiveLetter.length > i) {\n            answer += fiveLetter [i] + \" \";\n        }\n        if (fourLetter.length > i) {\n            answer += fourLetter [i];\n        }\n        answer += \"\\n\";\n        for (int j = 0;\n        j < count; j ++) {\n            answer += \"\\t\";\n        }\n        count ++;\n    }\n    return answer;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":611,"func":"def output(fourLetter, fiveLetter, sixLetter):\n    answer = \"\"\n    count = 1\n    lenfour = len(fourLetter)\n    lenfive = len(fiveLetter)\n    lensix = len(sixLetter)\n    maximum = max(max(lenfour, lenfive), lensix)\n    for i in range (maximum):\n        if lensix > i:\n            answer += sixLetter[i] + \" \"\n        if lenfive > i: \n            answer += fiveLetter[i] + \" \"\n        if lenfour > i:\n            answer += fourLetter[i]\n        answer += \"\\n\"\n        for j in range (count):\n            answer += \"\\t\"\n        count += 1\n    return answer","lang":"py"}
{"idx":612,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":613,"func":"def solution(X, A):\n    leaves = set()\n    for i in range(len(A)):\n        leaves.add(A[i])\n        if X in leaves and len(leaves) == X:\n            return i\n    return -1","lang":"py"}
{"idx":614,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tac\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":615,"func":"def run():\n    try:\n        for i in range(2):\n            print(\"tac\")\n    except Exception as e:\n        e.print_stack_trace()","lang":"py"}
{"idx":616,"func":" \npublic static int score (final String gene1, final String gene2) {\n    final char [] a;\n    final char [] b;\n    final int s;\n    a = gene1.toCharArray ();\n    b = gene2.toCharArray ();\n    s = score (a, b, 0, 0);\n    return (s);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":617,"func":"def score(gene1, gene2):\n  a = list(gene1)\n  b = list(gene2)\n  s = score(a, b, 0, 0)\n  \n  return s","lang":"py"}
{"idx":618,"func":" \npublic void actionPerformed (ActionEvent ae) {\n    if (count < charsTiming.size ()) {\n        highlightNextWord ();\n        ((Timer) ae.getSource ()).setInitialDelay (charsTiming.get (count));\n        ((Timer) ae.getSource ()).restart ();\n    } else {\n        reset ();\n        ((Timer) ae.getSource ()).stop ();\n    }\n    count ++;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":619,"func":"def actionPerformed(ae):\n    if count < len(charsTiming):\n        highlightNextWord()\n        ae.getSource().setInitialDelay(charsTiming[count])\n        ae.getSource().restart()\n    else:\n        reset()\n        ae.getSource().stop()\n    count += 1","lang":"py"}
{"idx":620,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int number;\n    if (\"\".equals (value)) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number \/ 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! \"\".equals (tensName) && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":621,"func":"def getName(value): \n    buffer = \"\"\n    number = 0\n    if (value == \"\"): \n        number = 0\n    elif (len(value) > 4): \n        number = int(value[len(value)-4:], 10)\n    else: \n        number = int(value, 10)\n        \n    number %= 1000\n    if (number >= 100): \n        buffer += unitProcessor.getName(int(number\/100)) + SEPARATOR\n        buffer += SCALE.getName(EXPONENT)\n        \n    tensName = tensProcessor.getName(number % 100)\n    if (tensName != \"\" and number >= 100): \n        buffer += SEPARATOR\n    buffer += tensName\n          \n    return buffer","lang":"py"}
{"idx":622,"func":" \npublic static void removeDuplicates (char [] str) {\n    int map = 0;\n    for (int i = 0;\n    i < str.length; i ++) {\n        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;\n        else map |= 1 << (str [i] - 'a');\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":623,"func":"def remove_duplicates(string):\n    seen_chars = set()\n    for char in string:\n        if char in seen_chars:\n            string = string.replace(char, '')\n        else:\n            seen_chars.add(char)\n    return string","lang":"py"}
{"idx":624,"func":" \npublic static String getDurationBreakdown (long millis) {\n    String [] units = {\" Days \", \" Hours \", \" Minutes \", \" Seconds \"};\n    Long [] values = new Long [units.length];\n    if (millis < 0) {\n        throw new IllegalArgumentException (\"Duration must be greater than zero!\");\n    }\n    values [0] = TimeUnit.MILLISECONDS.toDays (millis);\n    millis -= TimeUnit.DAYS.toMillis (values [0]);\n    values [1] = TimeUnit.MILLISECONDS.toHours (millis);\n    millis -= TimeUnit.HOURS.toMillis (values [1]);\n    values [2] = TimeUnit.MILLISECONDS.toMinutes (millis);\n    millis -= TimeUnit.MINUTES.toMillis (values [2]);\n    values [3] = TimeUnit.MILLISECONDS.toSeconds (millis);\n    StringBuilder sb = new StringBuilder (64);\n    boolean startPrinting = false;\n    for (int i = 0;\n    i < units.length; i ++) {\n        if (! startPrinting && values [i] != 0) startPrinting = true;\n        if (startPrinting) {\n            sb.append (values [i]);\n            sb.append (units [i]);\n        }\n    }\n    return (sb.toString ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":625,"func":"def getDurationBreakdown(millis):\n    units = [\"Days\", \"Hours\", \"Minutes\", \"Seconds\"]\n    values = [0] * len(units)\n    if millis < 0:\n        raise ValueError(\"Duration must be greater than zero!\")\n\n    values[0] = TimeUnit.MILLISECONDS.toDays(millis)\n    millis -= TimeUnit.DAYS.toMillis(values[0])\n    values[1] = TimeUnit.MILLISECONDS.toHours(millis)\n    millis -= TimeUnit.HOURS.toMillis(values[1])\n    values[2] = TimeUnit.MILLISECONDS.toMinutes(millis)\n    millis -= TimeUnit.MINUTES.toMillis(values[2])\n    values[3] = TimeUnit.MILLISECONDS.toSeconds(millis)\n\n    output = \"\"\n    startPrinting = False\n    for i in range(len(units)):\n        if not startPrinting and values[i] != 0:\n            startPrinting = True\n        if startPrinting:\n            output += str(values[i]) + units[i]\n\n    return output","lang":"py"}
{"idx":626,"func":" \nprivate void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {\n    XSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":627,"func":"def transform (workbookOld, workbookNew, rowOld, rowNew):\n    rowNew.setHeight (rowOld.getHeight ())\n    for cell in rowOld.cells:\n        cellNew = rowNew.createCell (cell.columnIndex, cell.cellType)\n        if cellNew != None:\n            this.transform(workbookOld, workbookNew, cellOld, cellNew)\n    this.lastColumn = max (this.lastColumn, rowOld.getLastCellNum())","lang":"py"}
{"idx":628,"func":" \n        public void actionPerformed (ActionEvent e) {\n            long start = System.currentTimeMillis ();\n            frame.remove (panel);\n            long end = System.currentTimeMillis ();\n            JPanel newPanel = new JPanel ();\n            newPanel.setBackground (Color.BLUE);\n            frame.add (newPanel);\n            frame.validate ();\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":629,"func":"def actionPerformed(e):\n    start = time.time()\n    frame.remove(panel)\n    end = time.time()\n    new_panel = tk.Frame(background='blue')\n    frame.add(new_panel)\n    frame.update()","lang":"py"}
{"idx":630,"func":" \npublic Fluid addFluid () {\n    boolean alreadyAnswered1 = false;\n    boolean alreadyAnswered2 = false;\n    boolean alreadyAnswered3 = false;\n    do {\n        try {\n            if (! alreadyAnswered1) {\n                System.out.println (\"Please enter fluids ID: \");\n                f.setFluidID (input.next ());\n                alreadyAnswered1 = true;\n            }\n            if (! alreadyAnswered2) {\n                System.out.println (\"Please enter fluids molecular weight: \");\n                f.setMolecularWeight (input.nextDouble ());\n                alreadyAnswered2 = true;\n            }\n            if (! alreadyAnswered3) {\n                System.out.println (\"Please enter fluids temperature: \");\n                f.setTemperature (input.nextDouble ());\n                alreadyAnswered3 = true;\n            }\n            error = false;\n        } catch (InputMismatchException e) {\n            System.out.println (\"Error! Please provide the right input.\");\n        }\n    } while (error != false);\n    getFluid ().add (f);\n    System.out.println (getFluid ());\n    return f;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":631,"func":"def addFluid(): \n  alreadyAnswered1 = False\n  alreadyAnswered2 = False\n  alreadyAnswered3 = False\n  while True:\n    try:\n      if not alreadyAnswered1:\n        f.setFluidID(input(\"Please enter fluid's ID: \"))\n        alreadyAnswered1 = True\n      if not alreadyAnswered2:\n        f.setMolecularWeight(float(input(\"Please enter fluid's molecular weight: \")))\n        alreadyAnswered2 = True\n      if not alreadyAnswered3:\n        f.setTemperature(float(input(\"Please enter fluid's temperature: \")))\n        alreadyAnswered3 = True\n      error = False\n      break\n    except ValueError:\n      print(\"Error! Please provide the right input.\")\n  getFluid().add(f)\n  print(getFluid())\n  return f","lang":"py"}
{"idx":632,"func":" \nprivate XSSFFont transform (HSSFFont fontOld) {\n    XSSFFont fontNew = this.workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":633,"func":"def transform(fontOld):\n  fontNew = workbookNew.createFont()\n  fontNew.setBoldweight(fontOld.getBoldweight())\n  fontNew.setCharSet(fontOld.getCharSet())\n  fontNew.setColor(fontOld.getColor())\n  fontNew.setFontName(fontOld.getFontName())\n  fontNew.setFontHeight(fontOld.getFontHeight())\n  fontNew.setItalic(fontOld.getItalic())\n  fontNew.setStrikeout(fontOld.getStrikeout())\n  fontNew.setTypeOffset(fontOld.getTypeOffset())\n  fontNew.setUnderline(fontOld.getUnderline())\n  return fontNew","lang":"py"}
{"idx":634,"func":" \npublic void put (Key key, Value val) {\n    if (map.containsKey (key)) {\n        put (key, val);\n        return;\n    }\n    while (currentSize >= maxSize) {\n        freeSpace ();\n    }\n    synchronized (this) {\n        queue.add (key);\n        map.put (key, val);\n        currentSize ++;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":635,"func":"def put(key, value): \n    if key in map: \n        put(key, value)\n        return\n      \n    while currentSize >= maxSize: \n        freeSpace()\n        \n    with self: \n        queue.add(key)\n        map[key] = value\n        currentSize += 1","lang":"py"}
{"idx":636,"func":" \nprivate void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {\n    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":637,"func":"def transform(workbook_old, workbook_new, cell_old, cell_new):\n    cell_new.set_cell_comment(cell_old.get_cell_comment())\n    hash = cell_old.get_cell_style().__hash__()\n    if style_map != None and hash not in style_map:\n        transform(workbook_old, workbook_new, hash, cell_old.get_cell_style(), workbook_new.create_cell_style())\n    cell_new.set_cell_style(style_map[hash])\n    cell_type = cell_old.get_cell_type()\n    if cell_type == 0:\n        pass\n    elif cell_type == 1:\n        cell_new.set_cell_value(cell_old.get_bool_cell_value())\n    elif cell_type == 2:\n        cell_new.set_cell_value(cell_old.get_error_cell_value())\n    elif cell_type == 3:\n        cell_new.set_cell_value(cell_old.get_cell_formula())\n    elif cell_type == 4:\n        cell_new.set_cell_value(cell_old.get_numeric_cell_value())\n    elif cell_type == 5:\n        cell_new.set_cell_value(cell_old.get_string_cell_value())\n    else:\n        print('transform: Unbekannter Zellentyp ' + cell_old.get_cell_type())","lang":"py"}
{"idx":638,"func":" \npublic static void main (String [] args) {\n    List < String > list = new ArrayList < String > ();\n    Scanner stdin = new Scanner (System.in);\n    do {\n        System.out.println (\"Current list is \" + list);\n        System.out.println (\"Add more? (y\/n)\");\n        if (stdin.next ().startsWith (\"y\")) {\n            System.out.println (\"Enter : \");\n            list.add (stdin.next ());\n        } else {\n            break;\n        }\n    } while (true);\n    stdin.close ();\n    System.out.println (\"List is \" + list);\n    String [] arr = list.toArray (new String [0]);\n    System.out.println (\"Array is \" + Arrays.toString (arr));\n}","lang":"java"}
{"idx":639,"func":"list = []\nfrom builtins import input\nwhile True:\n  print(\"Current List is \" , list)\n  print(\"Add more? (y\/n)\")\n  \n  x = input()\n  if x.startswith(\"y\"):\n    print(\"Enter:\")\n    list.append(input())\n  else:\n    break\nprint(\"List is \" , list)\narr = list\nprint(\"Array is \" , arr)\n","lang":"py"}
{"idx":640,"func":" \npublic void actionPerformed (ActionEvent e) {\n    int x = (int) (Math.random () * getWidth ());\n    int y = (int) (Math.random () * getHeight ());\n    int width = (int) (Math.random () * (getWidth () \/ 4));\n    int height = (int) (Math.random () * (getHeight () \/ 4));\n    if (x + width > getWidth ()) {\n        x = getWidth () - width;\n    }\n    if (y + height > getHeight ()) {\n        y = getHeight () - height;\n    }\n    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));\n    lstShapes.add (new MyRectangle (x, y, width, height, color));\n    repaint ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":641,"func":"def actionPerformed(event): \n    x = random.randint(0, getWidth()) \n    y = random.randint(0, getHeight()) \n    width = random.randint(0, getWidth()\/4) \n    height = random.randint(0, getHeight()\/4) \n    if x + width > getWidth(): \n        x = getWidth() - width \n    if y + height > getHeight(): \n        y = getHeight() - height \n    r = random.randint(0, 255) \n    g = random.randint(0, 255) \n    b = random.randint(0, 255)\n    color = (r, g, b) \n    lstShapes.add(MyRectangle(x, y, width, height, color)) \n    repaint()","lang":"py"}
{"idx":642,"func":" \npublic static void main (String [] args) {\n    String string = \"aaabbbbbaccc\";\n    int counter;\n    String result = \"\";\n    int i = 0;\n    while (i < string.length ()) {\n        counter = 1;\n        for (int j = i + 1;\n        j < string.length (); j ++) {\n            System.out.println (\"string length =\" + string.length ());\n            if (string.charAt (i) == string.charAt (j)) {\n                counter ++;\n            }\n        }\n        result = result + string.charAt (i) + counter;\n        string = string.replaceAll (String.valueOf (string.charAt (i)), \"\");\n    }\n    System.out.println (\"result is = \" + result);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":643,"func":"def main(args): \n    string = \"aaabbbbbaccc\" \n    counter = 1 \n    result = \"\" \n    i = 0 \n    \n    while i < len(string): \n        for j in range(i + 1, len(string)): \n            if string[i] == string[j]: \n                counter += 1 \n        result = result + string[i] + str(counter) \n        string = string.replace(string[i], '') \n    print(\"result is = \" + result)","lang":"py"}
{"idx":644,"func":" \nstatic void shuffleArray (int [] ar) {\n    Random rnd = ThreadLocalRandom.current ();\n    for (int i = ar.length - 1;\n    i > 0; i --) {\n        int index = rnd.nextInt (i + 1);\n        int a = ar [index];\n        ar [index] = ar [i];\n        ar [i] = a;\n    }\n}\n\n\n\n\n\n\nimport random\n","lang":"java"}
{"idx":645,"func":"def shuffleArray(ar):\n    random.shuffle(ar)","lang":"py"}
{"idx":646,"func":" \npublic static void main (String [] args) throws ParseException {\n    String st1 = \"2015-07-24T09:39:14.000Z\";\n    String st2 = \"2015-07-24T09:45:44.000Z\";\n    String time1 = st1.substring (st1.indexOf (\"T\") + 1, st1.indexOf (\".0\"));\n    String time2 = st2.substring (st2.indexOf (\"T\") + 1, st2.indexOf (\".0\"));\n    Date dateTime1 = new java.text.SimpleDateFormat (\"HH:mm\").parse (time1);\n    Date dateTime2 = new java.text.SimpleDateFormat (\"HH:mm\").parse (time2);\n    System.out.println (dateTime1.after (dateTime2));\n}\n\n\n\n\n\nimport datetime\n\n","lang":"java"}
{"idx":647,"func":"def main(args):\n    st1 = \"2015-07-24T09:39:14.000Z\"\n    st2 = \"2015-07-24T09:45:44.000Z\"\n    time1 =st1[st1.index(\"T\")+1:st1.index(\".0\")]\n    time2 = st2[st2.index(\"T\")+1:st2.index(\".0\")]\n    dateTime1 = datetime.datetime.strptime(time1,\"%H:%M\").time()\n    dateTime2 = datetime.datetime.strptime(time2,\"%H:%M\").time()\n    print dateTime1>dateTime2","lang":"py"}
{"idx":648,"func":" \npublic static void main (String [] args) throws Exception {\n    int [] [] matrix = new int [3] [];\n    matrix [0] = new int [] {1, 2, 2};\n    matrix [1] = new int [] {2, 2, 3};\n    matrix [2] = new int [] {0, 1, 2};\n    int resultL2R = 1;\n    int resultR2L = 1;\n    for (int i = 0;\n    i < matrix.length; i ++) {\n        resultL2R *= matrix [i] [i];\n        resultR2L *= matrix [i] [matrix.length - 1 - i];\n    }\n    System.out.println (\"left-to-right: \" + resultL2R);\n    System.out.println (\"right-to-left: \" + resultR2L);\n}","lang":"java"}
{"idx":649,"func":"matrix = [[1, 2, 2], [2, 2, 3], [0, 1, 2]]\nresultL2R = 1\nresultR2L = 1\nfor i in range(3):\n    resultL2R *= matrix[i][i]\n    resultR2L *= matrix[i][2-i]\nprint(\"left-to-right: \", resultL2R)\nprint(\"right-to-left: \", resultR2L)\n","lang":"py"}
{"idx":650,"func":" \npublic static Boolean isAnagram (String word, String anagram_word) {\n    if (word.length () != anagram_word.length ()) {\n        return false;\n    }\n    char [] words_char = word.toCharArray ();\n    char [] anagram_word_char = anagram_word.toCharArray ();\n    int words_char_num = 1;\n    int anagram_word_num = 1;\n    Map < Character, Integer > wordPrimeMap = wordPrimeMap ();\n    for (int i = 0;\n    i < words_char.length; i ++) {\n        words_char_num *= wordPrimeMap.get (words_char [i]);\n    }\n    for (int i = 0;\n    i < anagram_word_char.length; i ++) {\n        anagram_word_num *= wordPrimeMap.get (anagram_word_char [i]);\n    }\n    return anagram_word_num == words_char_num;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":651,"func":"def isAnagram (word, anagram_word): \n    if len(word) != len(anagram_word):\n        return False\n\n    words_char = list(word)\n    anagram_word_char = list(anagram_word)\n    wordPrimeMap = wordPrimeMap()\n    words_char_num = 1\n    anagram_word_num = 1\n    \n    for i in range(len(words_char)):\n        words_char_num *= wordPrimeMap[words_char[i]]\n\n    for i in range(len(anagram_word_char)):\n        anagram_word_num *= wordPrimeMap[anagram_word_char[i]]\n\n    return anagram_word_num == words_char_num","lang":"py"}
{"idx":652,"func":" \npublic void start (Stage primaryStage) {\n    final HTMLEditor htmlEditor = new HTMLEditor ();\n    primaryStage.setScene (new Scene (htmlEditor));\n    primaryStage.show ();\n    for (Node toolBar = htmlEditor.lookup (\".tool-bar\");\n    toolBar != null; toolBar = htmlEditor.lookup (\".tool-bar\")) {\n        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":653,"func":"def start (primaryStage):\n    htmlEditor = HTMLEditor ()\n    primaryStage.setScene (Scene (htmlEditor))\n    primaryStage.show ()\n    while (htmlEditor.lookup (\".tool-bar\")):\n        toolBar = htmlEditor.lookup (\".tool-bar\")\n        Pane (toolBar.getParent ()).getChildren ().remove (toolBar)","lang":"py"}
{"idx":654,"func":" \npublic static void main (String [] args) {\n    List < String > list = new ArrayList < String > ();\n    Scanner stdin = new Scanner (System.in);\n    do {\n        System.out.println (\"Current list is \" + list);\n        System.out.println (\"Add more? (y\/n)\");\n        if (stdin.next ().startsWith (\"y\")) {\n            System.out.println (\"Enter : \");\n            list.add (stdin.next ());\n        } else {\n            break;\n        }\n    } while (true);\n    stdin.close ();\n    System.out.println (\"List is \" + list);\n    String [] arr = list.toArray (new String [0]);\n    System.out.println (\"Array is \" + Arrays.toString (arr));\n}","lang":"java"}
{"idx":655,"func":"list = []\nadd_more = 'y'\nwhile add_more == 'y':\n    print(f\"Current list is {list}\")\n    add_more = input(\"Add more? (y\/n)\")\n    if add_more == 'y':\n        item = input(\"Enter: \")\n        list.append(item)\n    else:\n        break\nprint(f\"List is {list}\")\narr = list\nprint(f\"Array is {arr}\")\n","lang":"py"}
{"idx":656,"func":" \npublic static int mode (int [] [] arr) {\n    List < Integer > list = new ArrayList < Integer > ();\n    for (int i = 0;\n    i < arr.length; i ++) {\n        for (int j = 0;\n        j < arr [i].length; j ++) {\n            list.add (arr [i] [j]);\n        }\n    }\n    int [] vector = new int [list.size ()];\n    for (int i = 0;\n    i < vector.length; i ++) {\n        vector [i] = list.get (i);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":657,"func":"def mode(arr):\n    lst = list()\n    for l in arr:\n        for el in l:\n            lst.append(el)\n    vector = list()\n    for el in lst:\n        vector.append(el)","lang":"py"}
{"idx":658,"func":" \npublic static void main (String [] args) {\n    char [] values = {'a', 'b', 'c', 'd'};\n    int n = values.length;\n    int r = 2;\n    int i [] = new int [r];\n    int rc = 0;\n    for (int j = 0;\n    j < Math.pow (n, r); j ++) {\n        rc = 0;\n        while (rc < r) {\n            System.out.print (values [i [rc]] + \" \");\n            rc ++;\n        }\n        System.out.println ();\n        rc = 0;\n        while (rc < r) {\n            if (i [rc] < n - 1) {\n                i [rc] ++;\n                break;\n            } else {\n                i [rc] = 0;\n            }\n            rc ++;\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":659,"func":"def main(): \n    values = ['a', 'b', 'c', 'd']\n    n = len(values)\n    r = 2\n    i = [0] * r\n    rc = 0\n    while rc < int(math.pow(n, r)):\n        rc = 0\n        while rc < r:\n            print(values[i[rc]], end=\" \")\n            rc += 1\n        print()\n        rc = 0\n        while rc < r:\n            if i[rc] < n - 1:\n                i[rc] += 1\n                break\n            else:\n                i[rc] = 0\n            rc += 1\n \nif __name__ == \"__main__\": \n    main()","lang":"py"}
{"idx":660,"func":" \npublic static void main (String [] args) {\n    for (int i = 1;\n    i < 16; ++ i) {\n        if ((i & 1) > 0) System.out.print (\"A\");\n        if ((i & 2) > 0) System.out.print (\"B\");\n        if ((i & 4) > 0) System.out.print (\"C\");\n        if ((i & 8) > 0) System.out.print (\"D\");\n        System.out.println (\"\");\n    }\n}","lang":"java"}
{"idx":661,"func":"for i in range (1, 16):\n    s = \"\"\n    if (i & 1) > 0:\n        s += \"A\"\n    if (i & 2) > 0:\n        s += \"B\"\n    if (i & 4) > 0:\n        s += \"C\"\n    if (i & 8) > 0:\n        s += \"D\"\n    print (s)\n","lang":"py"}
{"idx":662,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    final char [] characterInput = S.toCharArray ();\n    final int [] integerInput = new int [characterInput.length];\n    for (int counter = 0;\n    counter < characterInput.length; counter ++) {\n        integerInput [counter] = characterMapping.get (characterInput [counter]);\n    }\n    int [] result = new int [P.length];\n    for (int index = 0;\n    index < P.length; index ++) {\n        if (P [index] == Q [index]) {\n            result [index] = integerInput [P [index]];\n            break;\n        }\n        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);\n        final int minimumValue = minimum (subArray);\n        result [index] = minimumValue;\n    }\n    return result;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":663,"func":"def solution(S, P, Q): \n    character_input = list(S) \n    integer_input = [0] * len(character_input) \n    \n    for i in range(len(character_input)): \n        integer_input[i] = character_mapping[character_input[i]] \n    result = [0] * len(P) \n    \n    for i in range(len(P)): \n        if P[i] == Q[i]: \n            result[i] = integer_input[P[i]] \n            break \n        sub_list = integer_input[P[i] : Q[i] + 1] \n        minimum_value = min(sub_list) \n        result[i] = minimum_value \n    return result","lang":"py"}
{"idx":664,"func":" \npublic void deleteRecursive (File path) {\n    File [] c = path.listFiles ();\n    System.out.println (\"Cleaning out folder:\" + path.toString ());\n    for (File file : c) {\n        if (file.isDirectory ()) {\n            System.out.println (\"Deleting file:\" + file.toString ());\n            deleteRecursive (file);\n            file.delete ();\n        } else {\n            file.delete ();\n        }\n    }\n    path.delete ();\n}\n\n\n\n\n\nimport os\n\n","lang":"java"}
{"idx":665,"func":"def deleteRecursive(path):\n    for file in os.listdir(path):\n        file_path = os.path.join(path, file)\n        print(\"Cleaning out folder: \"+path.toString())\n        try:\n            if os.path.isfile(file_path):\n                os.unlink(file_path)\n            elif os.path.isdir(file_path): \n                deleteRecursive(file_path)\n                os.removedirs(file_path)\n        except Exception as e:\n            print(e)\n    os.removedirs(path)","lang":"py"}
{"idx":666,"func":" \npublic boolean onOptionsItemSelected (MenuItem item) {\n    switch (item.getItemId ()) {\n        case android.R.id.home :\n            if (getParentActivityIntent () == null) {\n                Log.i (TAG, \"You have forgotten to specify the parentActivityName in the AndroidManifest!\");\n                onBackPressed ();\n            } else {\n                NavUtils.navigateUpFromSameTask (this);\n            }\n            return true;\n        default :\n            return super.onOptionsItemSelected (item);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":667,"func":"def onOptionsItemSelected(self, item):\n    if item.getItemId() == android.R.id.home:\n        if getParentActivityIntent() == None:\n            Log.i(TAG, \"You have forgotten to specify the parentActivityName in the AndroidManifest!\")\n            onBackPressed()\n        else:\n            NavUtils.navigateUpFromSameTask(self)\n        return True\n    else:\n        return super(onOptionsItemSelected, self).onOptionsItemSelected(item)","lang":"py"}
{"idx":668,"func":" \npublic static void main (String [] args) {\n    Scanner scan = new Scanner (System.in);\n    ArrayList < Integer > list = new ArrayList < Integer > ();\n    System.out.print (\"Enter integers please \");\n    System.out.println (\"(EOF or non-integer to terminate): \");\n    while (scan.hasNextInt ()) {\n        list.add (scan.nextInt ());\n    }\n    Integer [] nums = list.toArray (new Integer [0]);\n    for (int i = 0;\n    i < nums.length; i ++) {\n        System.out.println (nums [i]);\n    }\n}","lang":"java"}
{"idx":669,"func":"inputs = []\nprint(\"Enter integers please (EOF or non-integer to terminate):\") \nwhile True: \n    inp = input() \n    if inp.isdigit(): \n        inputs.append(int(inp)) \n    else: \n        break \nfor num in inputs:\n    print(num)\n","lang":"py"}
{"idx":670,"func":" \n            public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {\n                Files.delete (directory);\n                return FileVisitResult.CONTINUE;\n            }}\n        );\n    }\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":671,"func":"def post_visit_directory(directory, io_exception):\n    try:  \n        os.remove(directory) \n    except OSError as e: \n        print (\"Error: %s : %s\" % (directory, e.strerror))\n    return FileVisitResult.CONTINUE","lang":"py"}
{"idx":672,"func":" \n        public void run () {\n            JOptionPane.showMessageDialog (null, \"Close to exit!\");\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":673,"func":"def run():\n    import tkinter\n    window = tkinter.Tk()\n    window.wm_withdraw()\n    tkinter.messagebox.showinfo('Close to Exit', 'Close to exit!')","lang":"py"}
{"idx":674,"func":" \npublic int sum13 (int [] nums) {\n    int sum = 0;\n    for (int i = 0;\n    i < nums.length; i ++) {\n        if (nums [i] != 13) {\n            sum += nums [i];\n        } else {\n            i ++;\n        }\n    }\n    return sum;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":675,"func":"def sum13(nums):\n  sum = 0\n  for i in range (len(nums)):\n    if nums[i] != 13:\n      sum += nums[i]\n    else:\n      i += 1\n  return sum","lang":"py"}
{"idx":676,"func":" \n        public void mouseMoved (MouseEvent e) {\n            int x = e.getX ();\n            int y = e.getY ();\n            int imgWidth = 50;\n            int imgHeight = 50;\n            l5.setBounds (x - (imgWidth \/ 2), y - (imgHeight \/ 2), imgWidth, imgHeight);\n            l5.repaint ();\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":677,"func":"def mouseMoved(e):\n    x = e.getX()\n    y = e.getY()\n    imgWidth = 50\n    imgHeight = 50\n    l5.setBounds(x - (imgWidth \/ 2), y - (imgHeight \/ 2), imgWidth, imgHeight)\n    l5.repaint()","lang":"py"}
{"idx":678,"func":" \npublic static boolean longerTF (boolean [] guess) {\n    int variableTrue = 0;\n    int variableFalse = 0;\n    for (int x = 0;\n    x < guess.length; x ++) {\n        if (guess [x]) {\n            variableTrue ++;\n        } else {\n            variableFalse ++;\n        }\n    }\n    return variableTrue >= variableFalse;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":679,"func":"def longerTF(guess): \n    variableTrue = 0\n    variableFalse = 0\n    for x in range(len(guess)):\n        if (guess[x]):\n            variableTrue += 1\n        else: \n            variableFalse += 1\n    return variableTrue >= variableFalse","lang":"py"}
{"idx":680,"func":" \nprivate HSSFFont transform (HSSFWorkbook workbookNew, XSSFFont fontOld) {\n    HSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":681,"func":"def transform(workbookNew, fontOld):\n    fontNew = workbookNew.createFont()\n    fontNew.setBoldweight(fontOld.getBoldweight())\n    fontNew.setCharSet(fontOld.getCharSet())\n    fontNew.setColor(fontOld.getColor())\n    fontNew.setFontName(fontOld.getFontName())\n    fontNew.setFontHeight(fontOld.getFontHeight())\n    fontNew.setItalic(fontOld.getItalic())\n    fontNew.setStrikeout(fontOld.getStrikeout())\n    fontNew.setTypeOffset(fontOld.getTypeOffset())\n    fontNew.setUnderline(fontOld.getUnderline())\n    return fontNew","lang":"py"}
{"idx":682,"func":" \npublic static File createTempDir () {\n    final String baseTempPath = System.getProperty (\"java.io.tmpdir\");\n    Random rand = new Random ();\n    int randomInt = 1 + rand.nextInt ();\n    File tempDir = new File (baseTempPath + File.separator + \"tempDir\" + randomInt);\n    if (tempDir.exists () == false) {\n        tempDir.mkdir ();\n    }\n    tempDir.deleteOnExit ();\n    return tempDir;\n}\n\n\n\n\n\nimport uuid \nimport os\n","lang":"java"}
{"idx":683,"func":"def createTempDir(): \n  baseTempPath = os.getcwd() \n  tempDir = os.path.join(baseTempPath, uuid.uuid4().hex) \n  os.mkdir(tempDir) \n  return tempDir","lang":"py"}
{"idx":684,"func":" \npublic boolean handleMessage (SOAPMessageContext context) {\n    SOAPMessage msg = context.getMessage ();\n    try {\n        msg.writeTo (System.out);\n    } catch (Exception ex) {\n        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":685,"func":"def handleMessage (context):\n    msg = context.getMessage ()\n    try: \n        msg.writeTo (sys.stdout)\n    except Exception as ex:\n        logger.exception (ex)\n    return True","lang":"py"}
{"idx":686,"func":" \nprivate void transform (HSSFRow rowOld, XSSFRow rowNew) {\n    XSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    if (rowOld.getRowStyle () != null) {\n        Integer hash = rowOld.getRowStyle ().hashCode ();\n        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());\n        rowNew.setRowStyle (this.styleMap.get (hash));\n    }\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":687,"func":"def transform(row_old, row_new):\n    row_new.height = row_old.height\n    if row_old.row_style is not None:\n        hash_code = row_old.row_style.hash_code\n        if not row_old.style_map.__contains__(hash_code):\n            transform(hash_code, row_old.row_style, row_new.workbook.create_cell_style())\n        row_new.row_style = row_old.style_map.get(hash_code)\n    for cell in row_old:\n        cell_new = row_new.create_cell(cell.column_index, cell.cell_type)\n        if cell_new is not None:\n            transform(cell, cell_new)\n    last_column = max(last_column, row_old.last_cell_num)","lang":"py"}
{"idx":688,"func":" \npublic static Comparable [] findCommonElements (Comparable [] [] collections) {\n    Comparable [] arr1 = collections [0];\n    Comparable [] arr2 = collections [1];\n    Comparable [] arr3 = collections [2];\n    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {\n        hashArray = arr1;\n        queryArray = ArrayUtils.addAll (arr2, arr3);\n    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {\n        hashArray = arr2;\n        queryArray = ArrayUtils.addAll (arr1, arr3);\n    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {\n        hashArray = arr3;\n        queryArray = ArrayUtils.addAll (arr1, arr2);\n    }\n    HashSet < Comparable > intersectionSet = new HashSet < > ();\n    HashSet < Comparable > arrayToHash = new HashSet < > ();\n    for (Comparable element : hashArray) {\n        arrayToHash.add (element);\n    }\n    for (Comparable element : queryArray) {\n        if (element != null) {\n            comparisons ++;\n        }\n        if (arrayToHash.contains (element)) {\n            intersectionSet.add (element);\n        }\n    }\n    return intersectionSet.toArray (new Comparable [0]);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":689,"func":"def findCommonElements(collections):\n    arr1 = collections[0]\n    arr2 = collections[1]\n    arr3 = collections[2]\n\n    if arr1.length < arr2.length and arr1.length < arr3.length or arr2.length <= arr3.length:\n        hash_array = arr1\n        query_array = arr2 + arr3\n    elif arr2.length < arr1.length and arr2.length < arr3.length or arr1.length <= arr3.length:\n        hash_array = arr2\n        query_array = arr1 + arr3\n    elif arr3.length < arr1.length and arr3.length < arr2.length or arr1.length <= arr2.length:\n        hash_array = arr3\n        query_array = arr1 +arr2\n\n    intersection_set = set()\n    array_to_hash = set()\n\n    for element in hash_array:\n        array_to_hash.add(element)\n\n    for element in query_array:\n        if element != None:\n            comparisons += 1\n        if element in array_to_hash:\n            intersection_set.add(element)\n\n    return list(intersection_set)","lang":"py"}
{"idx":690,"func":" \npublic static void main (String [] arguments) {\n    Scanner inputChar = new Scanner (System.in);\n    int i;\n    while (true) {\n        System.out.println (\"Type in any integer:\");\n        if (! inputChar.hasNextInt ()) {\n            System.out.println (\"Not a number\");\n            inputChar.next ();\n        } else {\n            i = inputChar.nextInt ();\n            if (i != 0) {\n                if (i % 2 == 0) System.out.println (i + \" is even\");\n                else {\n                    System.out.println (i + \" is odd\");\n                }\n            } else {\n                System.out.println (\"Zeros are not allowed, bye!\");\n                break;\n            }\n        }\n    }\n}","lang":"java"}
{"idx":691,"func":"while True:\n    i = input(\"Type in any integer: \")\n    if not i.isdigit():\n        print(\"Not a number\")\n    else:\n        num = int(i)\n        if num != 0:\n            if num % 2 == 0:\n                print(str(num) + \" is even\")\n            else:\n                print(str(num) + \" is odd\")\n        else:\n            print(\"Zeros are not allowed, bye!\")\n            break\n","lang":"py"}
{"idx":692,"func":" \nboolean isPerfectSquare (long number) {\n    if (number < 0) return false;\n    if (number < 2) return true;\n    for (int i = 0;\n    ; i ++) {\n        long square = squareTable [i];\n        if (square > number) return false;\n        while (number % square == 0) {\n            number \/= square;\n        }\n        if (number == 1) return true;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":693,"func":"def isPerfectSquare(number):\n    if number < 0:\n        return False\n    elif number < 2:\n        return True\n    else:\n        i = 0\n        while True:\n            square = squareTable[i]\n            if square > number:\n                return False\n            while number % square == 0:\n                number = number \/\/ square\n            if number == 1:\n                return True\n            i += 1","lang":"py"}
{"idx":694,"func":" \npublic void deleteRecursive (File path) {\n    File [] c = path.listFiles ();\n    System.out.println (\"Cleaning out folder:\" + path.toString ());\n    for (File file : c) {\n        if (file.isDirectory ()) {\n            System.out.println (\"Deleting file:\" + file.toString ());\n            deleteRecursive (file);\n            file.delete ();\n        } else {\n            file.delete ();\n        }\n    }\n    path.delete ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":695,"func":"def deleteRecursive(path):\n    c = os.listdir(path)\n    print(\"Cleaning out folder: {}\".format(path))\n\n    for file in c:\n        full_path = os.path.join(path, file)\n        if os.path.isdir(full_path):\n            print(\"Deleting file: {}\".format(full_path))\n            deleteRecursive(full_path)\n            os.rmdir(full_path)\n        else:\n            os.remove(full_path)\n    os.rmdir(path)","lang":"py"}
{"idx":696,"func":" \npublic static void main (String [] args) {\n    double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};\n    double data1 [] = new double [data.length];\n    double data2 [] = new double [data.length];\n    double data3 [] = new double [data.length];\n    for (int x = 0;\n    x < data.length; x ++) {\n        for (int y = 0;\n        y < data [x].length; y ++) {\n            if (y == 0) data1 [x] = data [x] [y];\n            else if (y == 1) data2 [x] = data [x] [y];\n            else if (y == 2) data3 [x] = data [x] [y];\n        }\n    }\n    for (int i = 0;\n    i < data1.length; i ++) {\n        System.out.print (data1 [i] + \" \");\n        System.out.print (data2 [i] + \" \");\n        System.out.print (data3 [i] + \" \");\n        System.out.println ();\n    }\n}","lang":"java"}
{"idx":697,"func":"data = [[97, 36, 79], [94, 74, 60], [68, 76, 58], [64, 87, 56], [68, 27, 73], [74, 99, 42], [7, 93, 87], [51, 69, 40], [38, 23, 33], [57, 86, 31]]\ndata1 = []\ndata2 = []\ndata3 = []\nfor x in data:\n  for y in range(len(x)):\n    if y==0:\n      data1.append(x[y])\n    elif y==1:\n      data2.append(x[y])\n    elif y==2:\n      data3.append(x[y])\nfor i in range(len(data1)):\n  print(data1[i], data2[i], data3[i]) \n","lang":"py"}
{"idx":698,"func":" \n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n\n\n\n\n","lang":"java"}
{"idx":699,"func":"def run():\n    try:\n        time.sleep(100)\n    except InterruptedException as e:\n        print(e)\n    gc.collect()\n\nThread(target=run).start()","lang":"py"}
{"idx":700,"func":" \npublic static void main (String [] args) {\n    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();\n    System.out.println (\"Enter an String:\");\n    Scanner sc = new Scanner (System.in);\n    String s1 = sc.nextLine ();\n    for (int i = 0;\n    i < s1.length (); i ++) {\n        if (! hm.containsKey (s1.charAt (i))) {\n            hm.put (s1.charAt (i), (Integer) 1);\n        } else {\n            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);\n        }\n    }\n    System.out.println (\"The Charecters are:\" + hm);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":701,"func":"def main():\n    hm = {}\n    print(\"Enter an String:\")\n    s1 = input()\n\n    for i in range(len(s1)):\n        if s1[i] not in hm:\n            hm[s1[i]] = 1\n        else:\n            hm[s1[i]] += 1\n    \n    print(\"The characters are:\", hm)\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":702,"func":" \npublic static void removeDuplicates (char [] str) {\n    int map = 0;\n    for (int i = 0;\n    i < str.length; i ++) {\n        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;\n        else map |= 1 << (str [i] - 'a');\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":703,"func":"def removeDuplicates(arr): \n    map = 0\n    for i in range(len(arr)): \n        if map & (1 << (ord(arr[i]) - ord('a'))) > 0: \n            arr[i] = 0\n        else: \n            map |= 1 << (ord(arr[i]) - ord('a'))","lang":"py"}
{"idx":704,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tic\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":705,"func":"def run():\n    try:\n        for i in range(2):\n            print(\"tic\")\n    except Exception as e:\n        e.getStackTrace()","lang":"py"}
{"idx":706,"func":" \npublic static boolean checkZero (Object toCheck) {\n    final Class < ? > numerics = new Class < ? > [] {int.class, double.class, float.class, long.class, short.class, byte.class, Integer.class, Double.class, Float.class, Long.class, Short.class, Byte.class};\n    try {\n        Class < ? > clazz = toCheck.getClass ();\n        Field [] fields = clazz.getDeclaredFields ();\n        for (Field field : fields) {\n            Class < ? > type = field.getType ();\n            boolean isNumeric = false;\n            for (Class < ? > numeric : numerics) {\n                if (type.equals (numeric)) {\n                    isNumeric = true;\n                    break;\n                }\n            }\n            if (isNumeric) {\n                Object value = field.get (toCheck);\n                if (value == 0) {\n                    return true;\n                }\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":707,"func":"def check_zero(to_check):\n    numerics = [int, float, long, short, byte, int, float, long, short, byte] \n    try:\n        fields = to_check.__class__.__dict__.items()\n        for field, value in fields:\n            if type(value) in numerics:\n                if value == 0:\n                    return True\n    except Exception as e:\n        e.print_stack_trace()\n    return False","lang":"py"}
{"idx":708,"func":" \npublic boolean onKeyDown (int keyCode, KeyEvent event) {\n    super.onKeyDown (keyCode, event);\n    if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {\n        Toast.makeText (MainActivity.this, \"Down working\", Toast.LENGTH_SHORT).show ();\n        return true;\n    }\n    return false;\n}\n\n\n\n\n\nOverride ","lang":"java"}
{"idx":709,"func":"def onKeyDown (self, keyCode, event):\n  super().onKeyDown (keyCode, event)\n  if keyCode == KeyEvent.KEYCODE_VOLUME_DOWN:\n    Toast.makeText(MainActivity.this, \"Down working\", Toast.LENGTH_SHORT).show()\n    return True\n  return False","lang":"py"}
{"idx":710,"func":" \npublic static void main (String [] args) throws IOException {\n    String ch;\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.print (\"Enter the Statement:\");\n    ch = br.readLine ();\n    int count = 0, len = 0;\n    do {\n        try {\n            char name [] = ch.toCharArray ();\n            len = name.length;\n            count = 0;\n            for (int j = 0;\n            j < len; j ++) {\n                if ((name [0] == name [j]) && ((name [0] >= 65 && name [0] <= 91) || (name [0] >= 97 && name [0] <= 123))) count ++;\n            }\n            if (count != 0) System.out.println (name [0] + \" \" + count + \" Times\");\n            ch = ch.replace (\"\" + name [0], \"\");\n        } catch (Exception ex) {\n        }\n    } while (len != 1);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":711,"func":"def main():\n    ch = input(\"Enter the Statement: \")\n    count = 0\n    len = 0\n    while len != 1:\n        try:\n            name = list(ch)\n            len = len(name)\n            count = 0\n            for j in range(0,  len):\n                if ((name[0] == name[j]) and ((name[0] >= chr(65) and name[0] <= chr(91)) or (name[0] >= chr(97) and name[0] <= chr(123)))):\n                    count += 1\n            if (count != 0):\n                print(name[0], count, \"Times\")\n            ch = ch.replace(name[0], \"\")\n        except Exception:\n            pass\n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":712,"func":" \n        void go () {\n            acquireUninterruptibly ();\n            System.err.println (max - availablePermits ());\n            go ();\n        }}\n    .go ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":713,"func":"def go():\n    acquireUninterruptibly()\n    print (max - availablePermits())\n    go()\ngo()","lang":"py"}
{"idx":714,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":715,"func":"def solution (X, A):\n    s = set()\n    sum1 = 0\n    sum2 = 0\n    for i in range (X + 1):\n        sum1 += i\n    for i in range (len (A)):\n        if A[i] in s:\n            continue\n        s.add (A[i])\n        sum2 += A[i]\n        if sum1 == sum2:\n            return i\n    return -1","lang":"py"}
{"idx":716,"func":" \nprivate static String decrypt (final String s) {\n    final List < Integer > crypt = new ArrayList < > ();\n    final String [] groups = s.split (\"#\");\n    for (int i = 0;\n    i < groups.length; i ++) {\n        final String group = groups [i];\n        int j = 0;\n        if ((i == (groups.length - 1)) && ! s.endsWith (\"#\")) {\n            j = group.length ();\n        }\n        if (group.length () > 2) {\n            j = group.length () - 2;\n        }\n        for (int k = 0;\n        k < j; k ++) {\n            crypt.add (Integer.valueOf (group.substring (k, k + 1)));\n        }\n        if (j < group.length ()) {\n            crypt.add (Integer.valueOf (group.substring (j, group.length ())));\n        }\n    }\n    final StringBuilder n = new StringBuilder (crypt.size ());\n    for (final Integer c : crypt) {\n        final char d = (char) (('a' + c) - 1);\n        n.append (d);\n    }\n    return n.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":717,"func":"def decrypt(s):\n  crypt = []\n  groups = s.split('#')\n  for i in range(len(groups)):\n    group = groups[i]\n    j = 0\n    if i == len(groups) - 1 and not s.endswith('#'):\n      j = len(group)\n    if len(group) > 2:\n      j = len(group) - 2\n    for k in range(j):\n      crypt.append(int(group[k:k+1]))\n    if j < len(group):\n      crypt.append(int(group[j:len(group)]))\n\n  n = \"\"\n  for c in crypt:\n    d = chr(97 + c - 1)\n    n += d\n  \n  return n","lang":"py"}
{"idx":718,"func":" \npublic static boolean hasLoop (Node root) {\n    if (root == null) return false;\n    Node slow = root, fast = root;\n    int taken = 0, limit = 2;\n    while (fast.next != null) {\n        fast = fast.next;\n        taken ++;\n        if (slow == fast) return true;\n        if (taken == limit) {\n            taken = 0;\n            limit <<= 1;\n            slow = fast;\n        }\n    }\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":719,"func":"def hasLoop(root): \n    if root is None: \n        return False\n    slow = root \n    fast = root \n    taken = 0\n    limit = 2\n  \n    while fast.next is not None: \n        fast = fast.next\n        taken += 1\n  \n        if slow == fast: \n            return True\n  \n        if taken == limit: \n            taken = 0\n            limit = limit << 1\n            slow = fast \n  \n    return False","lang":"py"}
{"idx":720,"func":" \npublic ZonedDateTime parseToZonedDateTime (String date, String dateFormat) {\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern (dateFormat);\n    ZonedDateTime zonedDateTime = null;\n    try {\n        zonedDateTime = ZonedDateTime.parse (date, formatter);\n    } catch (DateTimeException e) {\n        LocalDateTime localDateTime = LocalDateTime.parse (date, formatter);\n        zonedDateTime = localDateTime.atZone (ZoneId.systemDefault ());\n    }\n    return zonedDateTime;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":721,"func":"def parseToZonedDateTime(date, dateFormat):\n  formatter = DateTimeFormatter.ofPattern(dateFormat)\n  try:\n    zonedDateTime = ZonedDateTime.parse(date, formatter)\n  except DateTimeException as e:\n    localDateTime = LocalDateTime.parse(date, formatter)\n    zonedDateTime = localDateTime.atZone(ZoneId.systemDefault())\n  return zonedDateTime","lang":"py"}
{"idx":722,"func":" \npublic void doFilter (ServletRequest arg0, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n    logger.info (\"checking client id in filter\");\n    HttpServletRequest request = (HttpServletRequest) arg0;\n    String clientId = request.getHeader (\"clientId\");\n    if (StringUtils.isNotEmpty (clientId)) {\n        chain.doFilter (request, response);\n    } else {\n        logger.error (\"client id missing.\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":723,"func":"def doFilter(arg0, response, chain):\n    print(\"checking client id in filter\")\n    request = arg0\n    clientId = request.getHeader(\"clientId\") \n    if(clientId):\n        chain.doFilter(request, response)\n    else:\n        print(\"client id missing.\")","lang":"py"}
{"idx":724,"func":" \nprivate void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {\n    File folder = new File (srcFolder);\n    if (folder.list ().length == 0) {\n        addFileToZip (path, srcFolder, zip, true);\n    } else {\n        for (String fileName : folder.list ()) {\n            if (path.equals (\"\")) {\n                addFileToZip (folder.getName (), srcFolder + \"\/\" + fileName, zip, false);\n            } else {\n                addFileToZip (path + \"\/\" + folder.getName (), srcFolder + \"\/\" + fileName, zip, false);\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":725,"func":"def addFolderToZip (path, srcFolder, zip): \n    folder = os.path.join(srcFolder) \n    if len(os.listdir(folder)) == 0: \n        addFileToZip(path, srcFolder, zip, True) \n    else: \n        for fileName in os.listdir(folder): \n            if path == \"\": \n                addFileToZip(os.path.basename(folder), os.path.join(srcFolder, fileName), zip, False) \n            else: \n                addFileToZip(os.path.join(path, os.path.basename(folder)), os.path.join(srcFolder, fileName), zip, False)","lang":"py"}
{"idx":726,"func":" \n                    public void run () {\n                        try {\n                            Thread.sleep (100);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace ();\n                        }\n                        Runtime.getRuntime ().gc ();\n                    }}\n                .start ();\n\n\n\n\n\n","lang":"java"}
{"idx":727,"func":"def run():\n    try:\n        time.sleep(100)\n    except InterruptedError as e:\n        print(e.message)\n\n    import gc\n    gc.collect()\n\nthread = Thread(target = run)\nthread.start()","lang":"py"}
{"idx":728,"func":" \nprotected Node getTrueParent () {\n    if (getEdges () != null && ! getEdges ().isEmpty ()) {\n        for (Edge e : getEdges ()) {\n            if (e != null && e.getNode2 () == this && ! e.isPseudo ()) {\n                return e.getNode1 ();\n            }\n        }\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":729,"func":"def getTrueParent(self):\n    edges = self.getEdges()\n    if edges is not None and not edges.isEmpty():\n        for edge in edges:\n            if edge is not None and edge.getNode2() == self and not edge.isPseudo():\n                return edge.getNode1()\n    return None","lang":"py"}
{"idx":730,"func":" \npublic static void main (String [] args) {\n    int [] coins = new int [] {1, 2, 3, 4, 5};\n    int money = 600;\n    int [] [] recorder = new int [money + 1] [coins.length];\n    for (int k = 0;\n    k < coins.length; k ++) {\n        recorder [0] [k] = 1;\n    }\n    for (int i = 1;\n    i <= money; i ++) {\n        int with = 0;\n        int without = 0;\n        for (int coin_index = 0;\n        coin_index < coins.length; coin_index ++) {\n            if (i - coins [coin_index] < 0) {\n                with = 0;\n            } else {\n                with = recorder [i - coins [coin_index]] [coin_index];\n            }\n            if (coin_index - 1 < 0) {\n                without = 0;\n            } else {\n                without = recorder [i] [coin_index - 1];\n            }\n            recorder [i] [coin_index] = with + without;\n        }\n    }\n    System.out.print (recorder [money] [coins.length - 1]);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":731,"func":"def main(args):\n    coins = [1, 2, 3, 4, 5]\n    money = 600\n    recorder = [[0 for i in range(len(coins))] for j in range(money + 1)] \n    for k in range(len(coins)):\n        recorder[0][k] = 1\n    for i in range(1, money + 1):\n        with_index = 0\n        without_index = 0\n        for coin_index in range(len(coins)):\n            if (i - coins[coin_index] < 0):\n                with_index = 0\n            else:\n                with_index = recorder[i - coins[coin_index]][coin_index]\n            if (coin_index - 1 < 0):\n                without_index = 0\n            else:\n                without_index = recorder[i][coin_index - 1]\n            recorder[i][coin_index] = with_index + without_index\n    print(recorder[money][len(coins) - 1])","lang":"py"}
{"idx":732,"func":" \npublic int solution (int N) {\n    int result = 0;\n    while (N > 0) {\n        if ((N & 1) == 1) {\n            int temp = 0;\n            while ((N>>= 1) > 0 && ((N & 1) != 1)) {\n                temp ++;\n            }\n            result = Math.max (result, temp);\n        } else {\n            N>>= 1;\n        }\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":733,"func":"def solution(N):\n    result = 0\n    while N > 0:\n        if (N & 1) == 1: \n            temp = 0\n            while (N >>= 1) > 0 and ((N & 1) != 1):\n                temp += 1\n            result = max(result,temp)\n        else:\n            N >>= 1\n    return result","lang":"py"}
{"idx":734,"func":" \npublic int solution (final int X, final int [] A) {\n    Set < Integer > emptyPosition = new HashSet < Integer > ();\n    for (int i = 1;\n    i <= X; i ++) {\n        emptyPosition.add (i);\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        emptyPosition.remove (A [i]);\n        if (emptyPosition.size () == 0) {\n            return i;\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":735,"func":"def solution(X, A): \n    emptyPosition = set(range(1, X+1)) \n  \n    for i in range(len(A)): \n        if A[i] in emptyPosition: \n            emptyPosition.remove(A[i]) \n          \n        if (len(emptyPosition) == 0): \n            return i \n          \n    return -1","lang":"py"}
{"idx":736,"func":" \nprivate static void printPath (int [] [] mat, int i, int j) {\n    if (mat.length == 0 || mat [0].length == 0) {\n        System.out.println (\"Empty matrix\");\n        return;\n    }\n    System.out.println (\"(\" + i + \",\" + j + \")\");\n    int rightValue = i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j] ? mat [i + 1] [j] : mat [i] [j];\n    int belowValue = j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1] ? mat [i] [j + 1] : mat [i] [j];\n    int aboveValue = i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j] ? mat [i - 1] [j] : mat [i] [j];\n    int leftValue = j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1] ? mat [i] [j - 1] : mat [i] [j];\n    if (rightValue > leftValue) {\n        if (rightValue > belowValue) {\n            if (rightValue > aboveValue) {\n                printPath (mat, i + 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        } else {\n            if (belowValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        }\n    } else {\n        if (leftValue > belowValue) {\n            if (leftValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        } else {\n            if (belowValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":737,"func":"def printPath(mat, i, j): \n  if(len(mat) == 0 or len(mat[0]) == 0): \n    print(\"Empty matrix\")\n    return\n  print(\"(\" + str(i) + \",\" + str(j) + \")\") \n  rightValue = mat[i+1][j] if i >= 0 and i < len(mat)-1 and mat[i][j] < mat[i+1][j] else mat[i][j] \n  belowValue = mat[i][j+1] if j >= 0 and j < len(mat[0])-1 and mat[i][j] < mat[i][j+1] else mat[i][j] \n  aboveValue = mat[i-1][j] if i > 0 and i < len(mat)-1 and mat[i][j] < mat[i-1][j] else mat[i][j] \n  leftValue = mat[i][j-1] if j > 0 and j < len(mat[0])-1 and mat[i][j] < mat[i][j-1] else mat[i][j]\n  if rightValue > leftValue: \n    if rightValue > belowValue: \n      if rightValue > aboveValue: \n        printPath(mat, i+1, j)\n      else: \n        printPath(mat, i, j+1) \n    else: \n      if belowValue > aboveValue: \n        printPath(mat, i-1, j)\n      else: \n        printPath(mat, i, j+1) \n  else: \n    if leftValue > belowValue: \n      if leftValue > aboveValue: \n        printPath(mat, i-1, j)\n      else: \n        printPath(mat, i, j+1) \n    else: \n      if belowValue > aboveValue: \n        printPath(mat, i-1, j)\n      else: \n        printPath(mat, i, j+1)","lang":"py"}
{"idx":738,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    expensiveObjects.put (new Object ());\n    ExecutorService executorService = Executors.newFixedThreadPool (4);\n    for (int i = 0;\n    i < 4; i ++) {\n        executorService.execute (new MyRunnable (expensiveObjects));\n    }\n    executorService.shutdown ();\n    executorService.awaitTermination (5, TimeUnit.SECONDS);\n    System.out.println (\"Final: \" + outputCount.get ());\n}\n\n\n\n\n\nimport queue\nimport threading\n\nexpensiveObjects = queue.Queue()\nexpensiveObjects.put(Object())\nexpensiveObjects.put(Object())\nexpensiveObjects.put(Object())\nexpensiveObjects.put(Object()) \n\nexecutor_threads = [] \n\n","lang":"java"}
{"idx":739,"func":"def MyRunnable(queue):\n    while not queue.empty():\n        expensiveObjects.get()\n        #add output count\n\nfor i in range(4):\n    thread = threading.Thread(target=MyRunnable, args=(expensiveObjects,))\n    execuor_threads.append(thread)\n    thread.start()\n\nfor thread in execuor_threads:\n    thread.join()\n\nprint(\"Final:\" + outputCount.get())","lang":"py"}
{"idx":740,"func":" \nint findCombinationsCount (int amount, int coins [], int checkFromIndex) {\n    if (amount == 0) return 1;\n    else if (amount < 0 || coins.length == checkFromIndex) return 0;\n    else {\n        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);\n        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);\n        return withFirstCoin + withoutFirstCoin;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":741,"func":"def findCombinationsCount(amount, coins, checkFromIndex):\n    if (amount == 0):\n        return 1\n    elif (amount < 0 or len(coins) == checkFromIndex):\n        return 0\n    else:\n        withFirstCoin = findCombinationsCount((amount - coins[checkFromIndex]), coins, checkFromIndex)\n        withoutFirstCoin = findCombinationsCount(amount, coins, (checkFromIndex + 1))\n        return (withFirstCoin + withoutFirstCoin)","lang":"py"}
{"idx":742,"func":" \npublic static void main (String [] args) {\n    CustomClassLoader loader = new CustomClassLoader ();\n    try {\n        Class < ? > c = loader.findClass (\"sample.Sample\");\n        Object o = c.newInstance ();\n    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n    } catch (InstantiationException e) {\n        e.printStackTrace ();\n    } catch (IllegalAccessException e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":743,"func":"import sample\nloader = CustomClassLoader()\ntry:\n    c = loader.findClass(\"sample.Sample\")\n    o = c.newInstance()\nexcept ClassNotFoundException as e:\n    print(e)\nexcept InstantiationException as e:\n    print(e)\nexcept IllegalAccessException as e:\n    print(e)\n","lang":"py"}
{"idx":744,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int offset = NO_VALUE;\n    int number;\n    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number < 10) {\n        offset = (number % 10) - 1;\n    } else if (number < 20) {\n        offset = (number % 20) - 1;\n    }\n    if (offset != NO_VALUE && offset < TOKENS.length) {\n        buffer.append (TOKENS [offset]);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":745,"func":"def getName(value):\n    buffer = ''\n    offset = -1\n    num = 0\n    if len(value) > 3:\n        num = int(value[-3:], 10)\n    else:\n        num = int(value, 10)\n    num = num % 100\n    if num < 10:\n        offset = (num % 10) - 1\n    elif num < 20:\n        offset = (num % 20) - 1\n    if offset != -1 and offset < len(TOKENS):\n        buffer = TOKENS [offset]\n    return buffer","lang":"py"}
{"idx":746,"func":" \npublic static void main (String [] args) {\n    int a = 100;\n    int b = 1000;\n    int lowest = b;\n    int highest = a;\n    int count = 100000;\n    Random random = new Random ();\n    for (int i = 0;\n    i < count; i ++) {\n        int nextNumber = (int) ((Math.abs (random.nextDouble ()) * (b - a))) + a;\n        if (nextNumber < a || nextNumber > b) {\n            System.err.println (\"number not in range :\" + nextNumber);\n        } else {\n            System.out.println (nextNumber);\n        }\n        if (nextNumber < lowest) {\n            lowest = nextNumber;\n        }\n        if (nextNumber > highest) {\n            highest = nextNumber;\n        }\n    }\n    System.out.println (\"Produced \" + count + \" numbers from \" + lowest + \" to \" + highest);\n}","lang":"java"}
{"idx":747,"func":"import random \na = 100\nb = 1000\nlowest = b\n","lang":"py"}
{"idx":748,"func":" \npublic static void main (String [] args) {\n    String string = \"aaabbbbbaccc\";\n    int counter;\n    String result = \"\";\n    int i = 0;\n    while (i < string.length ()) {\n        counter = 1;\n        for (int j = i + 1;\n        j < string.length (); j ++) {\n            System.out.println (\"string length =\" + string.length ());\n            if (string.charAt (i) == string.charAt (j)) {\n                counter ++;\n            }\n        }\n        result = result + string.charAt (i) + counter;\n        string = string.replaceAll (String.valueOf (string.charAt (i)), \"\");\n    }\n    System.out.println (\"result is = \" + result);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":749,"func":"def main(args = []):","lang":"py"}
{"idx":750,"func":" \npublic int tortoiseMoves () {\n    switch (tGen ()) {\n        case 1 :\n        case 2 :\n        case 3 :\n        case 4 :\n        case 5 :\n            return 3;\n        case 6 :\n        case 7 :\n        case 8 :\n            return 1;\n        case 9 :\n        case 10 :\n            return - 6;\n        default :\n            return 0;\n    }\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":751,"func":"def tortoiseMoves():\n    tortoise_gen = tGen()\n    if tortoise_gen in range(1, 6):\n        return 3\n    elif tortoise_gen in range(6, 9):\n        return 1\n    elif tortoise_gen in range(9, 11):\n        return -6\n    else:\n        return 0","lang":"py"}
{"idx":752,"func":" \npublic static void main (String [] args) {\n    for (int row = 1;\n    row <= 7; row += 2) {\n        for (int space = 7;\n        space >= row; space -= 2) {\n            System.out.print (\"*\");\n        }\n        for (int i = 1;\n        i <= row; i ++) {\n            System.out.print (\" \");\n        }\n        System.out.print (\"\\n\");\n    }\n    for (int row = 5;\n    row >= 1; row -= 2) {\n        for (int space = 7;\n        space >= row; space -= 2) {\n            System.out.print (\"*\");\n        }\n        for (int i = 1;\n        i <= row; i ++) {\n            System.out.print (\" \");\n        }\n        System.out.print (\"\\n\");\n    }\n}","lang":"java"}
{"idx":753,"func":"for row in range(1, 8, 2):\n    for space in range(7, row-1, -2):\n        print(\"*\", end=\"\")\n    for i in range(row):\n        print(\" \", end=\"\")\n    print()\nfor row in range(5, 0, -2):\n    for space in range(7, row-1, -2):\n        print(\"*\", end=\"\")\n    for i in range(row):\n        print(\" \", end=\"\")\n    print()\n","lang":"py"}
{"idx":754,"func":" \npublic void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) {\n    super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    switch (requestCode) {\n        case REQUEST_READ_PHONE_STATE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_ACCESS_FINE_LOCATION :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_WRITE_STORAGE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            }}\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":755,"func":"def onRequestPermissionsResult(requestCode, permissions, grantResults):\n    super().onRequestPermissionsResult(requestCode, permissions, grantResults)\n    if requestCode == REQUEST_READ_PHONE_STATE:\n        if len(grantResults) > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            Toast.makeText(LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show()\n            finish()\n            startActivity(getIntent())\n        else:\n            Toast.makeText(LoginActivity.this, \"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show()\n    elif requestCode == REQUEST_ACCESS_FINE_LOCATION:\n        if len(grantResults) > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            Toast.makeText(LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show()\n            finish()\n            startActivity(getIntent())\n        else:\n            Toast.makeText(LoginActivity.this, \"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show()\n    elif requestCode == REQUEST_WRITE_STORAGE:\n        if len(grantResults) > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            Toast.makeText(LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show()\n            finish()\n            startActivity(getIntent())\n        else:\n            Toast.makeText(LoginActivity.this, \"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show()","lang":"py"}
{"idx":756,"func":" \nstatic String removeDuplicates (String s) {\n    StringBuilder noDupes = new StringBuilder ();\n    for (int i = 0;\n    i < s.length (); i ++) {\n        String si = s.substring (i, i + 1);\n        if (noDupes.indexOf (si) == - 1) {\n            noDupes.append (si);\n        }\n    }\n    return noDupes.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":757,"func":"def removeDuplicates(s):\n  noDupes = []\n  for i in s:\n    if i not in noDupes:\n      noDupes.append(i)\n  return ''.join(noDupes)","lang":"py"}
{"idx":758,"func":" \npublic static void main (String...args) {\n    List < List < Integer > > array = new ArrayList < List < Integer > > ();\n    Scanner input = new Scanner (System.in);\n    out.println (\"Enter n:\");\n    int n = input.nextInt ();\n    out.println (\"Enter m:\");\n    int m = input.nextInt ();\n    out.println (\"Enter the values:\");\n    for (int i = 0;\n    i < n; i ++) {\n        List < Integer > list = new ArrayList < Integer > ();\n        array.add (list);\n        for (int j = 0;\n        j < m; j ++) {\n            list.add (input.nextInt ());\n        }\n    }\n    out.println (\"Result:\");\n    out.println (array);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":759,"func":"def main (args): \n   array = []\n   n = int(input(\"Enter n: \"))\n   m = int(input(\"Enter m: \"))\n   for i in range (0, n): \n       list_j = [] \n       array.append(list_j) \n       for j in range (0, m): \n           list_j.append(int(input(\"Enter value: \")))\n      \n   print(\"Result: \") \n   print(array)","lang":"py"}
{"idx":760,"func":" \npublic void remove (E element) {\n    Node n = head;\n    Node tmp;\n    while (n != null && ! n.data.equals (element)) {\n        tmp = n;\n        n = n.previous;\n    }\n    if (n == null) {\n        System.out.println (\"Element \" + element + \" not found.\");\n    } else {\n        tmp.prev = n.prev;\n        n.prev = null;\n        System.out.println (\"Element \" + element + \" removed.\");\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":761,"func":"def remove(element):\n    n = head\n    tmp = None\n    while n != None and n.data != element:\n        tmp = n\n        n = n.previous\n  \n    if n is None:\n        print(\"Element \" + element + \" not found.\")\n    else:\n        tmp.prev = n.prev\n        n.prev = None\n        print(\"Element \" + element + \" removed.\")","lang":"py"}
{"idx":762,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int number;\n    if (\"\".equals (value)) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number \/ 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! \"\".equals (tensName) && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":763,"func":"def getName(value): \n    number = 0 \n    buffer = \"\"\n    if value == \"\":\n        number = 0\n    elif len(value)> 4:\n        number = int(value[-4:])\n    else:\n        number = int(value, 10)\n    number %= 1000\n    if number >= 100:\n        buffer += unitProcessor.getName(number\/100)\n        buffer += SEPARATOR\n        buffer += SCALE.getName(EXPONENT)\n    tensName = tensProcessor.getName(number % 100)\n    if tensName and number >= 100:\n        buffer += SEPARATOR\n    buffer += tensName\n    return buffer","lang":"py"}
{"idx":764,"func":" \npublic static String toHexString (byte [] bytes) {\n    StringBuilder hexString = new StringBuilder ();\n    for (int i = 0;\n    i < bytes.length; i ++) {\n        String hex = Integer.toHexString (0xFF & bytes [i]);\n        if (hex.length () == 1) {\n            hexString.append ('0');\n        }\n        hexString.append (hex);\n    }\n    return hexString.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":765,"func":"def toHexString (bytes):\n    hexString = \"\"\n    for i in range(len(bytes)):\n        hex = format(bytes[i], '02x')\n        hexString += hex\n    return hexString","lang":"py"}
{"idx":766,"func":" \npublic static void main (String [] args) {\n    System.out.println (\"Please enter the String\");\n    Scanner input = new Scanner (System.in);\n    String userInput = input.nextLine ().trim ();\n    int numOfWords = getNumberOfWords (userInput);\n    char words [] [] = new char [numOfWords + 1] [];\n    words = getWordsFromString (userInput);\n    System.out.println (\"Total number of words found in the String is \" + (numOfWords));\n    for (int i = 0;\n    i < numOfWords; i ++) {\n        System.out.println (\" \");\n        for (int j = 0;\n        j < words [i].length; j ++) {\n            System.out.print (words [i] [j]);\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":767,"func":"def main(args): \n  print(\"Please enter the String\")\n  user_input = input().trim()\n  num_of_words = get_number_of_words(user_input)\n  words = [[0 for x in range(num_of_words+1)] for y in range(num_of_words+1)]\n  words = get_words_from_string(user_input) \n  print(\"Total number of words found in the String is \" + str(num_of_words)) \n  for i in range(num_of_words): \n    print(\" \")\n    for j in range(len(words[i])): \n      print(words[i][j], end=\"\")","lang":"py"}
{"idx":768,"func":" \npublic String generateRandomPassword (final int length) {\n    if (length < 1) {\n        throw new IllegalArgumentException (\"length must be greater than 0\");\n    }\n    final char [] buf = new char [length];\n    for (int idx = 0;\n    idx < buf.length; ++ idx) {\n        buf [idx] = symbols [RANDOM.nextInt (symbols.length)];\n    }\n    return shuffle (new String (buf));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":769,"func":"def generateRandomPassword (length):\n    if length < 1:\n        raise ValueError('length must be greater than 0')\n    buf = [characters[random.randint(0,len(characters)-1)] for _ in range(length)]\n    return ''.join(shuffle(buf))","lang":"py"}
{"idx":770,"func":" \n        public void actionPerformed (ActionEvent ae) {\n            if (count < charsTiming.size ()) {\n                highlightNextWord ();\n                ((Timer) ae.getSource ()).setInitialDelay (charsTiming.get (count));\n                ((Timer) ae.getSource ()).restart ();\n            } else {\n                reset ();\n                ((Timer) ae.getSource ()).stop ();\n            }\n            count ++;\n        }}\n    ).start ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":771,"func":"def actionPerformed(ae): \n    if count < len(charsTiming): \n        highlightNextWord()\n        ae.getSource().setInitialDelay(charsTiming[count])\n        ae.getSource().restart()\n    else: \n        reset()\n        ae.getSource().stop()\n    count += 1","lang":"py"}
{"idx":772,"func":" \npublic static void main (String [] args) throws IOException {\n    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File (\"big.jar\")));\n    zos.putNextEntry (new ZipEntry (\"resource.txt\"));\n    zos.write (\"not too much in here\".getBytes ());\n    zos.closeEntry ();\n    zos.putNextEntry (new ZipEntry (\"largeFile.out\"));\n    for (int i = 0;\n    i < 10000000; i ++) {\n        zos.write ((int) (Math.round (Math.random () * 100) + 20));\n    }\n    zos.closeEntry ();\n    zos.close ();\n}","lang":"java"}
{"idx":773,"func":"import zipfile\nwith zipfile.ZipFile('big.jar', 'w') as zos:\n    zos.writestr('resource.txt', 'not too much in here')\n    with zos.open('largeFile.out', 'w') as entry:\n        for i in range(10000000):\n            entry.write(int(round(random.random()*100 + 20)))\n","lang":"py"}
{"idx":774,"func":" \npublic IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n    JsonObject jsonObject = json.getAsJsonObject ();\n    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);\n    String className = prim.getAsString ();\n    Class < ? > klass = null;\n    try {\n        klass = Class.forName (className);\n    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n        throw new JsonParseException (e.getMessage ());\n    }\n    return context.deserialize (jsonObject.get (INSTANCE), klass);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":775,"func":"def deserialize(json, typeOfT, context):\n    jsonObject = json.get_as_json_object()\n    prim = jsonObject.get(CLASSNAME)\n    className = prim.get_as_string()\n    klass = None\n    try: \n        klass = Class.for_name(className)\n    except ClassNotFoundException as e:\n        e.print_stack_trace()\n        raise JsonParseException(e.get_message())\n    return context.deserialize(jsonObject.get(INSTANCE), klass)","lang":"py"}
{"idx":776,"func":" \npublic static void main (String [] args) {\n    byte [] dataToCompress = \"This is the test data.\".getBytes (StandardCharsets.ISO_8859_1);\n    try {\n        ByteArrayOutputStream byteStream = new ByteArrayOutputStream (dataToCompress.length);\n        try {\n            GZIPOutputStream zipStream = new GZIPOutputStream (byteStream);\n            try {\n                zipStream.write (dataToCompress);\n            } finally {\n                zipStream.close ();\n            }\n        } finally {\n            byteStream.close ();\n        }\n        byte [] compressedData = byteStream.toByteArray ();\n        FileOutputStream fileStream = new FileOutputStream (\"C:\/Users\/UserName\/Desktop\/zip_file.gz\");\n        try {\n            fileStream.write (compressedData);\n        } finally {\n            try {\n                fileStream.close ();\n            } catch (Exception e) {\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":777,"func":"import gzip\ndata_to_compress = \"This is the test data.\".encode('ISO-8859-1')\nwith open('C:\/Users\/UserName\/Desktop\/zip_file.gz', 'wb') as file_stream: \n    with gzip.GzipFile(fileobj=file_stream) as zip_stream: \n        zip_stream.write(data_to_compress)\n","lang":"py"}
{"idx":778,"func":" \nprivate void sort (int [] input, int startIndx, int endIndx) {\n    int endIndexOrig = endIndx;\n    int startIndexOrig = startIndx;\n    if (startIndx >= endIndx) return;\n    int pavitVal = input [endIndx];\n    while (startIndx <= endIndx) {\n        while (input [startIndx] < pavitVal) startIndx ++;\n        while (input [endIndx] > pavitVal) endIndx --;\n        if (startIndx <= endIndx) {\n            int tmp = input [startIndx];\n            input [startIndx] = input [endIndx];\n            input [endIndx] = tmp;\n            startIndx ++;\n            endIndx --;\n        }\n    }\n    sort (input, startIndexOrig, endIndx);\n    sort (input, startIndx, endIndexOrig);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":779,"func":"def sort(input_list, startIndx, endIndx):\n    endIndexOrig = endIndx\n    startIndexOrig = startIndx\n    if startIndx >= endIndx:\n        return\n    pavitVal = input_list[endIndx]\n    while startIndx <= endIndx:\n        while input_list[startIndx] < pavitVal:\n            startIndx += 1\n        while input_list[endIndx] > pavitVal:\n            endIndx -= 1\n        if startIndx <= endIndx:\n            tmp = input_list[startIndx]\n            input_list[startIndx] = input_list[endIndx]\n            input_list[endIndx] = tmp\n            startIndx += 1\n            endIndx -= 1\n    sort(input_list, startIndexOrig, endIndx)\n    sort(input_list, startIndx, endIndexOrig)","lang":"py"}
{"idx":780,"func":" \nboolean isPrime (int x) {\n    for (int i = 2;\n    i * i <= x; i ++) {\n        if (x % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":781,"func":"def isPrime(x):\n    for i in range(2,int(x**1\/2)):\n        if x%i==0:\n            return False\n    return True","lang":"py"}
{"idx":782,"func":" \npublic static void main (String...a) {\n    System.out.print (\"Enter the String\");\n    Scanner sc = new Scanner (System.in);\n    String st = sc.nextLine ();\n    int [] ar = new int [256];\n    for (int i = 0;\n    i < st.length (); i ++) {\n        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        char ch = (char) i;\n        if (ar [i] > 0) {\n            if (ar [i] == 1) {\n                System.out.print (ch);\n            } else {\n                System.out.print (ch + \"\" + ar [i]);\n            }\n        }\n    }\n}","lang":"java"}
{"idx":783,"func":"print('Enter the String ')\nst = input()\nar = [0] * 256\nfor i in range(len(st)):\n    ar[ord(st[i])] += 1\nfor i in range(256):\n    if ar[i] > 0:\n        if ar[i] == 1:\n            print(chr(i), sep='', end='')\n        else:\n            print(chr(i) + str(ar[i]), sep='', end='')\n","lang":"py"}
{"idx":784,"func":" \npublic static void main (String [] args) {\n    int n = 0;\n    Scanner s = new Scanner (System.in);\n    System.out.print (\"Enter an integer number: \");\n    n = s.nextInt ();\n    if (n <= 0) System.out.print (\"Enter numbers greater than 0\");\n    else {\n        NumberToWord a = new NumberToWord ();\n        System.out.print (\"After conversion number in words is :\");\n        a.pw ((n \/ 1000000000), \" Hundred\");\n        a.pw ((n \/ 10000000) % 100, \" crore\");\n        a.pw (((n \/ 100000) % 100), \" lakh\");\n        a.pw (((n \/ 1000) % 100), \" thousand\");\n        a.pw (((n \/ 100) % 10), \" hundred\");\n        a.pw ((n % 100), \" \");\n    }\n}","lang":"java"}
{"idx":785,"func":"n = 0\nprint(\"Enter an integer number: \")\nn = int(input())\nif n <= 0: \n    print(\"Enter numbers greater than 0\")\nelse: \n    a = NumberToWord()\n    print(\"After conversion number in words is: \")\n    a.pw(int(n\/1000000000),\" Hundred\")\n    a.pw(int(n\/10000000)%100, \"crore\")\n    a.pw(int((n\/100000)%100), \"lakh\")\n    a.pw(int((n\/1000)%100), \"thousand\")\n    a.pw(int((n\/100)%10), \"hundred\")\n    a.pw(int(n%100), \"\")\n","lang":"py"}
{"idx":786,"func":" \npublic static void main (String [] args) throws IOException {\n    String ch;\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.print (\"Enter the Statement:\");\n    ch = br.readLine ();\n    int count = 0, len = 0;\n    do {\n        try {\n            char name [] = ch.toCharArray ();\n            len = name.length;\n            count = 0;\n            for (int j = 0;\n            j < len; j ++) {\n                if ((name [0] == name [j]) && ((name [0] >= 65 && name [0] <= 91) || (name [0] >= 97 && name [0] <= 123))) count ++;\n            }\n            if (count != 0) System.out.println (name [0] + \" \" + count + \" Times\");\n            ch = ch.replace (\"\" + name [0], \"\");\n        } catch (Exception ex) {\n        }\n    } while (len != 1);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":787,"func":"def main(): \n    ch = input(\"Enter the Statement: \")\n    count = 0\n    len = len(ch)\n\n    while len != 1: \n        name = list(ch)\n        len = len(name)\n        count = 0\n        for j in range(len): \n            if ord(name[0]) >= 65 and ord(name[0]) <= 91 or ord(name[0]) >= 97 and ord(name[0]) <= 123: \n                if name[0] == name[j]: \n                    count += 1\n\n        if count != 0: \n            print(name[0] + ' ' + str(count) + ' Times')\n        ch = ch.replace(name[0], '')","lang":"py"}
{"idx":788,"func":" \npublic void run () {\n    System.out.println (i);\n    try {\n        cb.await ();\n        i = i + 3;\n        Thread.sleep (1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (BrokenBarrierException e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":789,"func":"def run(self):\n    print(self.i)\n    try:\n        self.cb.await()\n        self.i = self.i + 3\n        time.sleep(1000)\n    except InterruptedError:\n        print(traceback.format_exc())\n    except BrokenBarrierException:\n        print(traceback.format_exc())","lang":"py"}
{"idx":790,"func":" \npublic static int findArray (int [] array, int [] subArray) {\n    int index = - 1;\n    arrayLoop : for (int i = 0;\n    i < array.length; i ++) {\n        if (array [i] == subArray [0]) {\n            for (int j = 1;\n            j < subArray.length; j ++) {\n                if (i + j > array.length - 1 || array [i + j] != subArray [j]) continue arrayLoop;\n            }\n            index = i;\n        }\n    }\n    return index;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":791,"func":"def findArray (array, subArray):\n    index = -1\n    for i in range(len(array)):\n        if array[i] == subArray[0]:\n            for j in range(1, len(subArray)):\n                if i + j > len(array) - 1 or array[i + j] != subArray[j]:\n                    continue\n            index = i\n            break \n    return index","lang":"py"}
{"idx":792,"func":" \nprotected void exportDone (JComponent c, Transferable data, int action) {\n    if ((action == MOVE) && (indices != null)) {\n        DefaultListModel model = (DefaultListModel) source.getModel ();\n        for (int i = indices.length - 1;\n        i >= 0; i --) model.remove (indices [i]);\n    }\n    if (addCount > 0) {\n        for (int i = 0;\n        i < indices.length; i ++) {\n            if (indices [i] > addIndex) {\n                indices [i] += addCount;\n            }\n        }\n    }\n    indices = null;\n    addIndex = - 1;\n    addCount = 0;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":793,"func":"def export_done(c, data, action):\n   if action == MOVE and indices != None:\n      model = source.getModel()\n      for i in reversed(range(len(indices))):\n         model.remove(indices[i])\n   if addCount > 0:\n      for i in range(len(indices)):\n         if indices[i] > addIndex:\n            indices[i] += addCount\n      indices = None\n      addIndex = -1\n      addCount = 0","lang":"py"}
{"idx":794,"func":" \npublic Key secondMaxKey () {\n    if (size () < 2) {\n        return null;\n    }\n    Node max = null;\n    Node max_2 = null;\n    Node second = first.next;\n    if (first.key.compareTo (second.key) > 0) {\n        max = first;\n        max_2 = second;\n    } else {\n        max = second;\n        max_2 = first;\n    }\n    for (Node x = second.next;\n    x != null; x = x.next) {\n        if (x.key.compareTo (max.key) > 0) {\n            max_2 = max;\n            max = x;\n        } else if ((x.key.compareTo (max_2.key) > 0) && (x.key.compareTo (max.key) < 0)) {\n            max_2 = x;\n        }\n    }\n    return max_2.key;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":795,"func":"def secondMaxKey(self):\n  if self.size() < 2:\n    return None\n  max = None\n  max_2 = None\n  second = self.first.next\n  if self.first.key > second.key:\n    max = self.first\n    max_2 = second\n  else:\n    max = second\n    max_2 = self.first\n  x = second.next\n  while x != None:\n    if x.key > max.key:\n      max_2 = max\n      max = x\n    elif x.key > max_2.key and x.key < max.key:\n      max_2 = x\n    x = x.next\n  return max_2.key","lang":"py"}
{"idx":796,"func":" \npublic boolean hasSameAncestor (String person1, String person2) {\n    if (allRelations.containsKey (person1)) {\n        if (ancestors.contains (allRelations.get (person1))) {\n            if (allRelations.containsKey (person2)) {\n                if (ancestors.contains (allRelations.get (person2))) {\n                    return true;\n                } else if (allRelations.containsKey (allRelations.get (person2))) {\n                    return hasSameAncestor (person1, allRelations.get (person2));\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        } else {\n            ancestors.add (allRelations.get (person1));\n            if (allRelations.containsKey (allRelations.get (person1))) {\n                return hasSameAncestor (allRelations.get (person1), person2);\n            } else if (allRelations.containsKey (person2)) {\n                return hasSameAncestor (person1, allRelations.get (person2));\n            } else {\n                return false;\n            }\n        }\n    } else {\n        return false;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":797,"func":"def hasSameAncestor(person1, person2):\n    if person1 in allRelations:\n        if allRelations.get(person1) in ancestors:\n            if person2 in allRelations:\n                if allRelations.get(person2) in ancestors:\n                    return True\n                elif allRelations.get(allRelations.get(person2)) in allRelations:\n                    return hasSameAncestor(person1, allRelations.get(person2))\n                else:\n                    return False\n            else:\n                return False\n        else:\n            ancestors.append(allRelations.get(person1))\n            if allRelations.get(allRelations.get(person1)) in allRelations:\n                return hasSameAncestor(allRelations.get(person1), person2)\n            elif person2 in allRelations:\n                return hasSameAncestor(person1, allRelations.get(person2))\n            else:\n                return False\n    else:\n        return False","lang":"py"}
{"idx":798,"func":" \npublic void start (Stage primaryStage) {\n    Canvas canvas = new Canvas (width, height);\n    GraphicsContext gc = canvas.getGraphicsContext2D ();\n    Scene scene = new Scene (new Group (canvas));\n    primaryStage.setScene (scene);\n    primaryStage.show ();\n    Random ran = new Random ();\n    triangle = new Point [3];\n    triangle [1] = new Point (0d, 0d);\n    triangle [0] = new Point (width \/ 2d, (double) height);\n    triangle [2] = new Point ((double) width, 0d);\n    midPoint = Point.findMidTo (triangle [0], triangle [1], triangle [2]);\n    timer = new Timeline (new KeyFrame (Duration.millis (.1), (ActionEvent event) -> {\n        if (points -- > 0) {\n            int r = ran.nextInt (3);\n            midPoint = midPoint.findMidTo (triangle [r]);\n            gc.fillOval (midPoint.getX (), midPoint.getY (), 1, 1);\n        } else {\n            System.out.println (\"Stopping!\");\n            timer.stop ();\n        }\n    }));\n    timer.setCycleCount (Timeline.INDEFINITE);\n    timer.play ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":799,"func":"def start(primaryStage):\n    canvas = Canvas(width, height)\n    gc = canvas.getGraphicsContext2D()\n    scene = Scene(Group(canvas))\n    primaryStage.setScene(scene)\n    primaryStage.show()\n\n    ran = Random()\n    triangle = np.zeros((3, 2))\n    triangle[1] = [0, 0]\n    triangle[0] = [width\/2, (double) height]\n    triangle[2] = [double) width, 0]\n    midPoint = Point.findMidTo(triangle[0], triangle[1], triangle[2])\ndef animate(event):\n        if points > 0:\n            r = ran.nextInt(3)\n            midPoint = midPoint.findMidTo(triangle[r])\n            gc.fillOval(midPoint.getX(), midPoint.getY(), 1, 1)\n        else:\n            print(\"Stopping!\")\n            timer.stop()\n\n    timer = Timeline(KeyFrame(Duration.millis(.1), animate))\n    timer.setCycleCount(Timeline.INDEFINITE)\n    timer.play()","lang":"py"}
{"idx":800,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    boolean tensFound = false;\n    int number;\n    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number >= 20) {\n        buffer.append (TOKENS [(number \/ 10) - 2]);\n        number %= 10;\n        tensFound = true;\n    } else {\n        number %= 20;\n    }\n    if (number != 0) {\n        if (tensFound) {\n            buffer.append (UNION_SEPARATOR);\n        }\n        buffer.append (unitProcessor.getName (number));\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":801,"func":"def getName(value):\n    buffer = []\n    tensFound = False\n    if len(value) > 3:\n        number = int(value[len(value)-3:], 10)\n    else:\n        number = int(value, 10)\n    number %= 100\n    if number >= 20:\n        buffer.append(TOKENS[(number\/10)-2])\n        number %= 10\n        tensFound = True\n    else:\n        number %= 20\n    if number != 0:\n        if tensFound:\n            buffer.append(UNION_SEPARATOR)\n        buffer.append(unitProcessor.getName(number))\n    return ''.join(buffer)","lang":"py"}
{"idx":802,"func":" \nprivate static int countZeros (int [] f) {\n    int start = 0, end = 0, cnt = 0;\n    for (int i = 1;\n    i < f.length; i ++) {\n        if (f [i - 1] != 0 && f [i] == 0) {\n            start = i;\n        } else if (f [i - 1] == 0 && f [i] != 0 && start > 0) {\n            end = i;\n            cnt += end - start;\n        }\n    }\n    return cnt;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":803,"func":"def countZeros(f): \n  start = 0\n  end = 0\n  cnt = 0\n  \n  for i in range(1, len(f)): \n    if f[i-1] != 0 and f[i] == 0: \n      start = i \n    elif f[i-1] == 0 and f[i] != 0 and start > 0: \n      end = i \n      cnt += end-start \n  \n  return cnt","lang":"py"}
{"idx":804,"func":" \npublic static void main (String [] args) {\n    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();\n    System.out.println (\"Enter an String:\");\n    Scanner sc = new Scanner (System.in);\n    String s1 = sc.nextLine ();\n    for (int i = 0;\n    i < s1.length (); i ++) {\n        if (! hm.containsKey (s1.charAt (i))) {\n            hm.put (s1.charAt (i), (Integer) 1);\n        } else {\n            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);\n        }\n    }\n    System.out.println (\"The Charecters are:\" + hm);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":805,"func":"def main():\n    hm = dict()\n    print(\"Enter a String:\")\n    s1 = input()\n    for i in range(len(s1)):\n        if s1[i] not in hm:\n            hm[s1[i]] = 1\n        else:\n            hm[s1[i]] += 1\n    print(\"The characters are: \", hm)","lang":"py"}
{"idx":806,"func":" \npublic static void main (String [] args) {\n    Dog dog = new Dog ();\n    Horse horse = new Horse ();\n    Animal animal = dog;\n    Animal horseAnimal = new Horse ();\n    Dog upcastedAnimal = upcastToDog (animal);\n    dog.saySomething ();\n    dog.getTheBall ();\n    upcastedAnimal.saySomething ();\n    upcastedAnimal.getTheBall ();\n    horse.saySomething ();\n    horse.getTheBall ();\n    try {\n        Dog upcastedDog = upcastToDog (horseAnimal);\n    } catch (Exception ex) {\n        System.out.println (ex.getClass ().getSimpleName () + \": Obviously a horse is not a dog!\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":807,"func":"def main(args): \n    dog = Dog() \n    horse = Horse() \n    animal = dog \n    horseAnimal = Horse() \n    upcastedAnimal = upcastToDog(animal) \n    dog.saySomething() \n    dog.getTheBall() \n    upcastedAnimal.saySomething() \n    upcastedAnimal.getTheBall() \n    horse.saySomething() \n    horse.getTheBall() \n    \n    try: \n        upcastedDog = upcastToDog(horseAnimal)  \n    except Exception as ex: \n        print(ex.__class__.name + \": Obviously a horse is not a dog!\")","lang":"py"}
{"idx":808,"func":" \npublic static int solution (int X, int [] A) {\n    int [] counter = new int [X + 1];\n    int ans = - 1;\n    int x = 0;\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (counter [A [i]] == 0) {\n            counter [A [i]] = A [i];\n            x += 1;\n            if (x == X) {\n                return i;\n            }\n        }\n    }\n    return ans;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":809,"func":"def solution(X, A): \n    counter = [0] * (X + 1) \n    ans = -1\n    x = 0\n    \n    for i in range(len(A)): \n        if counter[A[i]] == 0:\n            counter[A[i]] = A[i]\n            x += 1\n            if x == X: \n                return(i) \n    return ans","lang":"py"}
{"idx":810,"func":" \nprivate void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {\n    XSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":811,"func":"def transform(workbookOld, workbookNew, rowOld, rowNew):\n    cellNew=None\n    rowNew.set_height(rowOld.get_height())\n    for cell in rowOld:\n       cellNew=rowNew.create_cell(cell.get_column_index(),cell.get_cell_type())\n       if(cellNew != None):\n           this.transform(workbookOld, workbookNew, cell, cellNew)\n    this.lastColumn=max(this.lastColumn, rowOld.get_last_cell_num())","lang":"py"}
{"idx":812,"func":" \nprivate void type (char character) {\n    handleSpecialCharacter (character);\n    if (Character.isLowerCase (character)) {\n        typeCharacter (Character.toUpperCase (character));\n    }\n    if (Character.isUpperCase (character)) {\n        typeShiftCharacter (character);\n    }\n    if (Character.isDigit (character)) {\n        typeCharacter (character);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":813,"func":"def type(character): \n    handleSpecialCharacter(character)\n    if character.islower(): \n        typeCharacter(character.upper()) \n    if character.isupper(): \n        typeShiftCharacter(character) \n    if character.isdigit(): \n        typeCharacter(character)","lang":"py"}
{"idx":814,"func":" \npublic static String compressBad (String str) {\n    int countConsecutive = 0;\n    String compressedString = \"\";\n    for (int i = 0;\n    i < str.length (); i ++) {\n        countConsecutive ++;\n        if (str.length () == (i + 1)) {\n            compressedString += \"\" + str.charAt (i) + countConsecutive;\n            countConsecutive = 0;\n            break;\n        } else if (str.charAt (i) != str.charAt (i + 1)) {\n            compressedString += \"\" + str.charAt (i) + countConsecutive;\n            countConsecutive = 0;\n        }\n    }\n    return compressedString;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":815,"func":"def compressBad(str):\n    countConsecutive = 0\n    compressedString = \"\"\n    for i in range(len(str)):\n        countConsecutive += 1\n        if len(str) == (i + 1):\n            compressedString += '' + str[i] + str(countConsecutive)\n            countConsecutive = 0\n            break\n        elif str[i] != str[i+1]:\n            compressedString += '' + str[i] + str(countConsecutive)\n            countConsecutive = 0\n    return compressedString","lang":"py"}
{"idx":816,"func":" \npublic void primeFactor () {\n    input = sc.nextInt ();\n    for (num = 1; num <= input; num ++) {\n        if (isPrime (num)) {\n            if (divide (num)) {\n                System.out.println (\"Adding a new int...\");\n                factors.add (num);\n            }\n        }\n    }\n    for (int element : factors) {\n        System.out.println (element);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":817,"func":"def prime_factor():\n  input = int(input(\"Enter a number: \"))\n  factors = []\n  for num in range(1,input + 1):\n    if num > 1:\n      for i in range(2,num):\n        if (num % i) == 0:\n          break\n      else:\n        if (input % num) == 0:\n          factors.append(num)\n  for element in factors:\n    print(element)","lang":"py"}
{"idx":818,"func":" \npublic String getNextMonth (boolean maxDate) {\n    Calendar calendar = Calendar.getInstance ();\n    calendar.set (year, monthNo, 1);\n    calendar.add (Calendar.MONTH, 1);\n    if (maxDate) {\n        int maxD = calendar.getActualMaximum (Calendar.DAY_OF_MONTH);\n        calendar.set (Calendar.DAY_OF_MONTH, maxD);\n    } else {\n        calendar.set (Calendar.DAY_OF_MONTH, day);\n    }\n    String date = (calendar.get (Calendar.YEAR)) + \"-\" + (calendar.get (Calendar.MONTH) + 1) + \"-\" + calendar.get (Calendar.DAY_OF_MONTH);\n    calendar.clear ();\n    return date;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":819,"func":"def getNextMonth(maxDate):\n  calendar = datetime.date.today()\n  year = calendar.year\n  monthNo = calendar.month\n  day = calendar.day\n  if maxDate: \n    month = datetime.date(year, monthNo, 1)\n    first_day_next_month = month + relativedelta(months=+1)\n    last_day_next_month = month + relativedelta(day=31, months=+1)\n    date = (last_day_next_month.year) + \"-\" + (last_day_next_month.month) + \"-\" + last_day_next_month.day\n    return date\n  else:\n    month = datetime.date(year, monthNo, day)\n    first_day_next_month = month + relativedelta(months=+1) \n    date = (first_day_next_month.year) + \"-\" + (first_day_next_month.month) + \"-\" + first_day_next_month.day\n    return date","lang":"py"}
{"idx":820,"func":" \npublic boolean isAnagram (String s1, String s2) {\n    StringBuilder sb1 = new StringBuilder ();\n    StringBuilder sb2 = new StringBuilder ();\n    if (s1.length () != s2.length ()) return false;\n    char arr1 [] = s1.toCharArray ();\n    char arr2 [] = s2.toCharArray ();\n    Arrays.sort (arr1);\n    Arrays.sort (arr2);\n    for (char c : arr1) {\n        sb1.append (c);\n    }\n    for (char c : arr2) {\n        sb2.append (c);\n    }\n    System.out.println (sb1.toString ());\n    System.out.println (sb2.toString ());\n    if (sb1.toString ().equals (sb2.toString ())) return true;\n    else return false;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":821,"func":"def isAnagram(s1, s2):\n  if len(s1) != len(s2):\n    return False\n  arr1 = sorted(list(s1))\n  arr2 = sorted(list(s2))\n  if arr1 == arr2:\n    return True\n  else:\n    return False","lang":"py"}
{"idx":822,"func":" \npublic void draw (Graphics2D g) {\n    float arrowRatio = 0.5f;\n    float arrowLength = 80.0f;\n    BasicStroke stroke = (BasicStroke) g.getStroke ();\n    float endX = 350.0f;\n    float veeX = endX - stroke.getLineWidth () * 0.5f \/ arrowRatio;\n    Path2D.Float path = new Path2D.Float ();\n    float waisting = 0.5f;\n    float waistX = endX - arrowLength * 0.5f;\n    float waistY = arrowRatio * arrowLength * 0.5f * waisting;\n    float arrowWidth = arrowRatio * arrowLength;\n    path.moveTo (veeX - arrowLength, - arrowWidth);\n    path.quadTo (waistX, - waistY, endX, 0.0f);\n    path.quadTo (waistX, waistY, veeX - arrowLength, arrowWidth);\n    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);\n    path.lineTo (veeX - arrowLength, - arrowWidth);\n    g.setColor (Color.BLUE);\n    g.fill (path);\n    g.setColor (Color.RED);\n    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":823,"func":"def draw (g): \n    arrowRatio = 0.5 \n    arrowLength = 80.0 \n    stroke = g.get_stroke () \n    endX = 350.0 \n    veeX = endX - stroke.get_line_width () * 0.5 \/ arrowRatio \n    path = [] \n    waisting = 0.5 \n    waistX = endX - arrowLength * 0.5 \n    waistY = arrowRatio * arrowLength * 0.5 * waisting \n    arrowWidth = arrowRatio * arrowLength \n\n    path.append((veeX - arrowLength, -arrowWidth)) \n    path.append((waistX, -waistY)) \n    path.append((endX, 0.0)) \n    path.append((waistX, waistY)) \n    path.append((veeX - arrowLength, arrowWidth)) \n    path.append((veeX - arrowLength * 0.75, 0.0)) \n\n    g.set_color(Color.BLUE) \n    g.fill(path) \n    g.set_color(Color.RED) \n    g.draw(new Line2D.Float((50.0, 0.0, veeX - arrowLength * 0.5, 0.0)))","lang":"py"}
{"idx":824,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    String replacement = source.subSequence (start, end).toString ();\n    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();\n    Matcher matcher = mPattern.matcher (newVal);\n    if (matcher.matches ()) return null;\n    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);\n    else return \"\";\n}\n\n\n\n\n\n","lang":"java"}
{"idx":825,"func":"def filter(source, start, end, dest, dstart, dend):\n    replc = source[start:end]\n    newVal = dest[:dstart] + replc + dest[dend:end]\n    matcher = mPattern.match(newVal)\n    if matcher:\n        return None\n    if source == '':\n        return dest[dstart:dend]\n    else:\n        return ''","lang":"py"}
{"idx":826,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tac\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":827,"func":"def run():\n    try:\n        for i in range(2):\n            print(\"tac\")\n    except Exception as e:\n        print(e)","lang":"py"}
{"idx":828,"func":" \n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n\n\n\n\nimport time\nfrom threading import Thread\n\n","lang":"java"}
{"idx":829,"func":"def run():\n    time.sleep(100)\n    import gc\n    gc.collect()\n\nThread(target=run).start()","lang":"py"}
{"idx":830,"func":" \npublic int solution (final int X, final int [] A) {\n    Set < Integer > emptyPosition = new HashSet < Integer > ();\n    for (int i = 1;\n    i <= X; i ++) {\n        emptyPosition.add (i);\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        emptyPosition.remove (A [i]);\n        if (emptyPosition.size () == 0) {\n            return i;\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":831,"func":"def solution(X, A):\n    emptyPosition = set(range(1, X+1))\n    for i in range(len(A)):\n        emptyPosition.discard(A[i])\n        if len(emptyPosition) == 0:\n            return i\n    return -1","lang":"py"}
{"idx":832,"func":" \npublic Object [] tokenizer (String value, String [] delimeters) {\n    List < String > list = new ArrayList < String > ();\n    for (String s : delimeters) {\n        if (value.contains (s)) {\n            String [] strArr = value.split (\"\\\\\" + s);\n            for (String str : strArr) {\n                list.add (str);\n                if (! list.contains (s)) {\n                    list.add (s);\n                }\n            }\n        }\n    }\n    Object [] newValues = list.toArray ();\n    return newValues;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":833,"func":"def tokenizer(value, delimeters):\n    list = []\n    for s in delimeters:\n        if s in value:\n            strArr = value.split(s)\n            for str in strArr:\n                list.append(str)\n                if s not in list:\n                    list.append(s)\n    return list","lang":"py"}
{"idx":834,"func":" \npublic static void main (String [] args) {\n    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();\n    for (String string : \"House, House, House, Dog, Dog, Dog, Dog\".split (\", \")) {\n        if (unique.get (string) == null) unique.put (string, 1);\n        else unique.put (string, unique.get (string) + 1);\n    }\n    String uniqueString = join (unique.keySet (), \", \");\n    List < Integer > value = new ArrayList < Integer > (unique.values ());\n    System.out.println (\"Output = \" + uniqueString);\n    System.out.println (\"Values = \" + value);\n}","lang":"java"}
{"idx":835,"func":"unique = {}\nfor i in \"House, House, House, Dog, Dog, Dog, Dog\".split(\", \"):\n    if i not in unique:\n        unique[i] = 1\n    else:\n        unique[i] = unique[i] + 1 \nuniqueString = \", \".join(list(unique.keys()))\nvalue = list(unique.values())\nprint(\"Output = \" + uniqueString)\nprint(\"Values = \" + str(value))\n","lang":"py"}
{"idx":836,"func":" \n        public String toString () {\n            return Integer.toString (++ count);\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":837,"func":"def __str__ (self):\n     return str(self.count + 1)","lang":"py"}
{"idx":838,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int [] answer = new int [P.length];\n    char [] chars = S.toCharArray ();\n    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];\n    for (int iii = 0;\n    iii < chars.length; iii ++) {\n        if (iii > 0) {\n            for (int zzz = 0;\n            zzz < 4; zzz ++) {\n                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];\n            }\n        }\n        switch (chars [iii]) {\n            case 'A' :\n                cumulativeAnswers [0] [iii + 1] ++;\n                break;\n            case 'C' :\n                cumulativeAnswers [1] [iii + 1] ++;\n                break;\n            case 'G' :\n                cumulativeAnswers [2] [iii + 1] ++;\n                break;\n            case 'T' :\n                cumulativeAnswers [3] [iii + 1] ++;\n                break;\n        }\n    }\n    for (int iii = 0;\n    iii < P.length; iii ++) {\n        for (int zzz = 0;\n        zzz < 4; zzz ++) {\n            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {\n                answer [iii] = zzz + 1;\n                break;\n            }\n        }\n    }\n    return answer;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":839,"func":"def solution(S, P, Q): \n    N = len(S) \n    answer = [0] * len(P) \n    for i in range(len(P)): \n        min_value = 5 \n\n        A = 0 \n        if P[i] - 1 >= 0: \n            A = Q[P[i] - 1] \n\n        C = 0 \n        if P[i] - 1 >= 0: \n            C = Q[P[i] - 1] \n\n        G = 0 \n        if P[i] - 1 >= 0: \n            G = Q[P[i] - 1] \n\n        T = 0 \n        if P[i] - 1 >=0: \n            T = Q[P[i] - 1] \n\n        for j in range(P[i],Q[i] + 1): \n            if S[j] == 'A' and A == 0: \n                min_value = 1 \n                break \n\n            if S[j] == 'C' and C == 0: \n                min_value = 2 \n                break \n\n            if S[j] == 'G' and G == 0: \n                min_value = 3 \n                break \n\n            if S[j] == 'T' and T == 0: \n                min_value = 4 \n                break \n\n        answer[i] = min_value \n    return answer","lang":"py"}
{"idx":840,"func":" \n        public void run () {\n            createAndShowGUI ();\n        }}\n    );\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":841,"func":"def run():\n    createAndShowGUI()","lang":"py"}
{"idx":842,"func":" \npublic final void contextDestroyed (ServletContextEvent sce) {\n    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();\n    Enumeration < Driver > drivers = DriverManager.getDrivers ();\n    while (drivers.hasMoreElements ()) {\n        Driver driver = drivers.nextElement ();\n        if (driver.getClass ().getClassLoader () == cl) {\n            try {\n                log.info (\"Deregistering JDBC driver {}\", driver);\n                DriverManager.deregisterDriver (driver);\n            } catch (SQLException ex) {\n                log.error (\"Error deregistering JDBC driver {}\", driver, ex);\n            }\n        } else {\n            log.trace (\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader\", driver);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":843,"func":"def contextDestroyed(self, sce): \n    cl = threading.currentThread().getContextClassLoader()\n    drivers = driverManager.getDrivers()\n    while drivers.hasMoreElements():\n        driver = drivers.nextElement()\n        if (driver.getClass().getClassLoader() == cl):\n            try:\n                log.info(\"Deregistering JDBC driver {}\".format(driver))\n                driverManager.deregisterDriver(driver)\n            except SQLException as ex:\n                log.error(\"Error deregistering JDBC driver {}\".format(ex.driver), ex)\n        else:\n            log.trace(\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader\".format(driver))","lang":"py"}
{"idx":844,"func":" \nstatic void throwException (final String exClassName) throws CheckedException, UncheckedException {\n    Class < ? > clazz;\n    try {\n        clazz = Class.forName (exClassName);\n    } catch (ClassNotFoundException cnfe) {\n        throw new InternalError (exClassName, cnfe);\n    }\n    if (CheckedException.class.isAssignableFrom (clazz)) {\n        throw newException (clazz.asSubclass (CheckedException.class));\n    } else if (UncheckedException.class.isAssignableFrom (clazz)) {\n        throw newException (clazz.asSubclass (UncheckedException.class));\n    } else {\n        throw new InternalError (exClassName + \" is not a valid exception\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":845,"func":"def throwException(exClassName):\n    try:\n        clazz = classforName(exClassName)\n    except ClassNotFoundException as cnfe:\n        raise InternalError(exClassName, cnfe)\n\n    if isinstance(clazz, CheckedException):\n        raise newException(clazz.asSubclass(CheckedException))\n    elif isinstance(clazz, UncheckedException):\n        raise newException(clazz.asSubclass(UncheckedException))\n    else:\n        raise InternalError(exClassName + \" is not a valid exception\")","lang":"py"}
{"idx":846,"func":" \npublic static void main (String [] args) throws UnknownHostException, IOException {\n    InetAddress inet;\n    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});\n    System.out.println (\"Sending Ping Request to \" + inet);\n    System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});\n    System.out.println (\"Sending Ping Request to \" + inet);\n    System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n}\n\n\n\n\n\n\nimport socket\n\n","lang":"java"}
{"idx":847,"func":"def main(args):\n   localhost = socket.gethostbyname('127.0.0.1')\n   print(\"Sending Ping Request to\", localhost)\n   is_reachable = socket.getfqdn(localhost)\n   if is_reachable:\n       print('Host is reachable')\n   else:\n       print('Host is NOT reachable')\n   google = socket.gethostbyname('173.194.32.38')\n   print(\"Sending Ping Request to\", google)\n   is_reachable = socket.getfqdn(google)\n   if is_reachable:\n       print('Host is reachable')\n   else:\n       print('Host is NOT reachable')\n\nif __name__ == \"__main__\":\n   main(args)","lang":"py"}
{"idx":848,"func":" \npublic static void main (String [] args) {\n    int n = 0;\n    Scanner s = new Scanner (System.in);\n    System.out.print (\"Enter an integer number: \");\n    n = s.nextInt ();\n    if (n <= 0) System.out.print (\"Enter numbers greater than 0\");\n    else {\n        NumberToWord a = new NumberToWord ();\n        System.out.print (\"After conversion number in words is :\");\n        a.pw ((n \/ 1000000000), \" Hundred\");\n        a.pw ((n \/ 10000000) % 100, \" crore\");\n        a.pw (((n \/ 100000) % 100), \" lakh\");\n        a.pw (((n \/ 1000) % 100), \" thousand\");\n        a.pw (((n \/ 100) % 10), \" hundred\");\n        a.pw ((n % 100), \" \");\n    }\n}","lang":"java"}
{"idx":849,"func":"n = 0\ns = input(\"Enter an integer number: \")\nn = int(s)\nif n <= 0:\n    print(\"Enter numbers greater than 0\")\nelse:\n    num2Wrds = NumberToWord()\n    print(\"After conversion number in words is :\")\n    num2Wrds.pw((n \/ 1000000000), \" Hundred\")\n    num2Wrds.pw((n \/ 10000000) % 100, \" crore\")\n    num2Wrds.pw(((n \/ 100000) % 100), \" lakh\")\n    num2Wrds.pw(((n \/ 1000) % 100), \" thousand\")\n    num2Wrds.pw(((n \/ 100) % 10), \" hundred\")\n    num2Wrds.pw((n % 100), \" \")\n","lang":"py"}
{"idx":850,"func":" \npublic static void main (final String [] args) throws IOException {\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.println (\"Enter some text, or '\" + EXIT_COMMAND + \"' to quit\");\n    while (true) {\n        System.out.print (\"><![CDATA[ \");\n        String input = br.readLine ();\n        System.out.println (input);\n        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {\n            System.out.println (\"Exiting.\");\n            return;\n        }\n        System.out.println (\"...response goes here...\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":851,"func":"def main():\n    exit_command = \"exit\"\n    print(\"Enter some text, or '\" + exit_command + \"' to quit\")\n    while True:\n        input_val = input(\"><![CDATA[ \")\n        print(input_val)\n        if input_val.lower() == exit_command:\n            print(\"Exiting.\")\n            break\n        else:\n            print(\"...response goes here...\")\n\nmain()","lang":"py"}
{"idx":852,"func":" \npublic void run () {\n    try {\n        int retValue = pro.waitFor ();\n        println (\"Command exit with return value \" + retValue);\n        outStream.close ();\n        outStream = null;\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":853,"func":"def run():\n    try:\n        ret_value = pro.waitFor()\n        print(\"Command exit with return value \" + str(ret_value))\n        outStream.close()\n        outStream = None\n    except InterruptedException as e:\n        print(e)\n    except IOException as e:\n        print(e)","lang":"py"}
{"idx":854,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":855,"func":"def getName(value):\n    negative = False\n    if value.startswith('-'):\n        negative = True\n        value = value[1:]\n    decimals = value.index('.')\n    decimalValue = None\n    if (decimals >= 0):\n        decimalValue = value[decimals+1:]\n        value = value[0:decimals]\n    name = processor.getName(value)\n    if name == '':\n        name = ZERO_TOKEN\n    elif negative == True:\n        name = MINUS + SEPARATOR + name\n    if decimalValue is not None and decimalValue != '':\n        zeroDecimalValue = '0'*len(decimalValue)\n        if (decimalValue == zeroDecimalValue):\n            name += SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue))\n        else:\n            name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    return name","lang":"py"}
{"idx":856,"func":" \npublic static void main (String [] args) {\n    String name = \"AnuvratAnuvra\";\n    char [] arr = name.toCharArray ();\n    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();\n    for (char val : arr) {\n        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);\n    }\n    for (Entry < Character, Integer > entry : map.entrySet ()) {\n        if (entry.getValue () > 1) {\n            Character key = entry.getKey ();\n            Object value = entry.getValue ();\n            System.out.println (key + \":\" + value);\n        }\n    }\n}","lang":"java"}
{"idx":857,"func":"name = \"AnuvratAnuvra\"\narr = list(name)\nmap = {}\nfor i in range(len(arr)):\n    if arr[i] in map:\n        map[arr[i]] += 1\n    else:\n        map[arr[i]] = 1\nfor key in map.keys():\n    if map[key] > 1:\n        print(key + \":\" + str(map[key])) \n","lang":"py"}
{"idx":858,"func":" \nprivate static int pow (int x, int n) {\n    if (n == 0) return 1;\n    if (n == 1) return x;\n    if (n < 0) {\n        if (x == 1 || (x == 2 && n == - 1)) return 1;\n        else return 0;\n    }\n    if ((n & 1) == 0) {\n        long num = pow (x * x, n \/ 2);\n        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;\n        return (int) num;\n    } else {\n        long num = x * pow (x * x, n \/ 2);\n        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;\n        return (int) num;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":859,"func":"def pow(x, n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return x\n    elif n < 0:\n        if x == 1 or x == 2 and n == -1:\n            return 1\n        else:\n            return 0\n    elif n & 1 == 0: \n        num = pow(x * x, n \/\/ 2)\n        if num > sys.maxsize:\n            return sys.maxsize\n        else:\n            return num\n    else:\n        num = x * pow(x * x, n\/\/2)\n        if num > sys.maxsize:\n            return sys.maxsize\n        else:\n            return num","lang":"py"}
{"idx":860,"func":" \npublic void dispatchEvent (Event event) {\n    checkNotNull (event);\n    CancellableEvent cancellableEvent = null;\n    boolean cancellable;\n    if (cancellable = event instanceof CancellableEvent) {\n        cancellableEvent = (CancellableEvent) event;\n        checkArgument (cancellableEvent.isCancelled ());\n    }\n    for (EventPriority priority : EventPriority.values ()) {\n        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);\n        if (internalMapping != null) {\n            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {\n                invokeEntry (entry, event);\n            }\n        }\n    }\n    for (EventPriority priority : EventPriority.values ()) {\n        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);\n        if (internalMapping != null) {\n            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {\n                invokeEntry (entry, event);\n                if (cancellable && cancellableEvent.isCancelled ()) {\n                    return;\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":861,"func":"def dispatchEvent(event):\n    checkNotNull(event)\n    cancellableEvent = None\n    cancellable = False\n    if isinstance(event, CancellableEvent):\n        cancellableEvent = event\n        checkArgument(cancellableEvent.isCancelled())\n        cancellable = True\n    \n    for priority in EventPriority.values():\n        internalMapping = getRegistry().getMethodMap(event.getClass(), priority, True)\n        if internalMapping is not None:\n            for entry in internalMapping.entrySet():\n                invokeEntry(entry, event)\n    \n    for priority in EventPriority.values():\n        internalMapping = getRegistry().getMethodMap(event.getClass(), priority, False)\n        if internalMapping is not None:\n            for entry in internalMapping.entrySet():\n                invokeEntry(entry, event)\n                if cancellable and cancellableEvent.isCancelled():\n                    return","lang":"py"}
{"idx":862,"func":" \npublic static void main (String [] args) {\n    BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();\n    ls.insert (1);\n    ls.insert (2);\n    ls.insert (3);\n    ls.insert (4);\n    ls.insert (5);\n    ls.insert (6);\n    ls.insert (7);\n    ls.inOrderPrint ();\n}","lang":"java"}
{"idx":863,"func":"","lang":"py"}
{"idx":864,"func":" \n        protected void onPostExecute (String result) {\n            dialog.dismiss ();\n        }}\n    .execute ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":865,"func":"def onPostExecute(result): \n    dialog.dismiss()","lang":"py"}
{"idx":866,"func":" \npublic static void main (String [] args) {\n    File fileName = new File (\"hello.txt\");\n    try {\n        String startToken = \"Hello\";\n        String endToken = \"Bye\";\n        boolean output = false;\n        Scanner scan = new Scanner (fileName);\n        while (scan.hasNextLine ()) {\n            String line = scan.nextLine ();\n            if (! output && line.indexOf (startToken) > - 1) {\n                output = true;\n                line = line.substring (line.indexOf (startToken) + startToken.length ());\n            } else if (output && line.indexOf (endToken) > - 1) {\n                output = false;\n                System.out.println (line.substring (0, line.indexOf (endToken)));\n            }\n            if (output) {\n                System.out.println (line);\n            }\n        }\n    } catch (FileNotFoundException e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":867,"func":"def main(args):\n    fileName = open(\"hello.txt\")\n    try:\n        startToken=\"Hello\"\n        endToken=\"Bye\"\n        output=False\n        for line in fileName:\n            if not output and startToken in line:\n                output=True\n                line=line[line.index(startToken) + len(startToken):]\n            elif output and endToken in line:\n                output=False\n                print(line[:line.index(endToken)])\n            if output:\n                print(line)\n    except FileNotFoundError:\n        print(error)","lang":"py"}
{"idx":868,"func":" \n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n\n\n\n\n","lang":"java"}
{"idx":869,"func":"def run():\n    try:\n        time.sleep(100)\n    except InterruptedException as e:\n        e.printStackTrace()\n    gc.collect()\n\nThread(target=run).start()","lang":"py"}
{"idx":870,"func":" \npublic static void main (String [] args) throws IOException {\n    Path source = Paths.get (\"\/path\/to\/source\/dir\");\n    Path destination = Paths.get (\"\/path\/to\/dest\/dir\");\n    List < Path > sources = Files.walk (source).collect (toList ());\n    List < Path > destinations = sources.stream ().map (source :: relativize).map (destination :: resolve).collect (toList ());\n    for (int i = 0;\n    i < sources.size (); i ++) {\n        Files.copy (sources.get (i), destinations.get (i));\n    }\n}","lang":"java"}
{"idx":871,"func":"import os, shutil\nsource_dir = '\/path\/to\/source\/dir'\ndest_dir = '\/path\/to\/dest\/dir'\nsources = [os.path.join(source_dir,f) for f in os.listdir(source_dir)]\ndestinations = [os.path.join(dest_dir,f) for f in os.listdir(source_dir)]\nfor i in range(len(sources)):\n    shutil.copy(sources[i], destinations[i])\n","lang":"py"}
{"idx":872,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":873,"func":"def getName(value):\n    negative = False\n    if value.startswith('-'):\n        negative = True\n        value = value[1:]\n    decimals = value.find('.')\n    decimalValue = None\n    if decimals >= 0:\n        decimalValue = value[decimals+1:]\n        value = value[:decimals]\n    name = processor.getName(value)\n    if not name:\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n    if decimalValue and decimalValue !=\"\":\n        zeroDecimalValue = \"\"\n        for i in range(len(decimalValue)):\n            zeroDecimalValue += \"0\"\n        if decimalValue == zeroDecimalValue:\n            name += SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue))\n        else:\n            name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    return name","lang":"py"}
{"idx":874,"func":" \npublic void start (Stage stage) {\n    stage.setTitle (\"TRON Synopsis\");\n    Font.loadFont (CustomFontApp.class.getResource (\"TRON.TTF\").toExternalForm (), 10);\n    Label title = new Label (\"TRON\");\n    title.getStyleClass ().add (\"title\");\n    Label caption = new Label (\"A sci-fi flick set in an alternate reality.\");\n    caption.getStyleClass ().add (\"caption\");\n    caption.setMaxWidth (220);\n    caption.setWrapText (true);\n    caption.setTextAlignment (TextAlignment.CENTER);\n    VBox layout = new VBox (10);\n    layout.setStyle (\"-fx-padding: 20px; -fx-background-color: silver\");\n    layout.setAlignment (Pos.CENTER);\n    layout.getChildren ().setAll (title, new ImageView (new Image (\"http:\/\/ia.media-imdb.com\/images\/M\/MV5BMTY5NjM2MjAwOV5BMl5BanBnXkFtZTYwMTgyMzA5.V1.SY317.jpg\")), caption);\n    final Scene scene = new Scene (layout);\n    scene.getStylesheets ().add (getClass ().getResource (\"custom-font-styles.css\").toExternalForm ());\n    stage.setScene (scene);\n    stage.show ();\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":875,"func":"def start(stage):\n    stage.setTitle(\"TRON Synopsis\")\n    Font.loadFont(CustomFontApp.class.getResource(\"TRON.TTF\").toExternalForm(), 10)\n    title = Label(\"TRON\")\n    title.getStyleClass().add(\"title\")\n    caption = Label(\"A sci-fi flick set in an alternate reality.\")\n    caption.getStyleClass().add(\"caption\")\n    caption.setMaxWidth(220)\n    caption.setWrapText(True)\n    caption.setTextAlignment(TextAlignment.CENTER)\n    layout = VBox(10)\n    layout.setStyle(\"-fx-padding: 20px; -fx-background-color: silver\")\n    layout.setAlignment(Pos.CENTER)\n    layout.getChildren().setAll(title, new ImageView(new Image(\"http:\/\/ia.media-imdb.com\/images\/M\/MV5BMTY5NjM2MjAwOV5BMl5BanBnXkFtZTYwMTgyMzA5.V1.SY317.jpg\")), caption)\n    scene = Scene(layout)\n    scene.getStylesheets().add(getClass().getResource(\"custom-font-styles.css\").toExternalForm())\n    stage.setScene(scene)\n    stage.show()","lang":"py"}
{"idx":876,"func":" \npublic void sort (int [] input) {\n    for (int i = 0;\n    i < input.length; i ++) {\n        for (int j = i + 1;\n        j < input.length; j ++) {\n            if (input [i] > input [j]) {\n                int tmp = input [i];\n                input [i] = input [j];\n                input [j] = tmp;\n            }\n        }\n    }\n    System.out.println (\"Slow sorting is done and the result is :\");\n    for (int i : input) {\n        System.out.print (i + \",\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":877,"func":"def sort(input_list): \n\tfor i in range(len(input_list)): \n\t\tfor j in range(i + 1, len(input_list)): \n\t\t\tif input_list[i] > input_list[j]: \n\t\t\t\ttemp = input_list[i] \n\t\t\t\tinput_list[i] = input_list[j] \n\t\t\t\tinput_list[j] = temp \n\t\t\t\t\n\tprint(\"Sorted list is:\") \n\tfor i in range(len(input_list)): \n\t\tprint(input_list[i], end=\" \")","lang":"py"}
{"idx":878,"func":" \npublic static int singleNumber (int [] nums) {\n    Set < Integer > unique = new HashSet < > ();\n    for (int num : nums) {\n        if (! unique.add (num)) {\n            unique.remove (num);\n        }\n    }\n    return unique.iterator ().next ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":879,"func":"def singleNumber(nums): \n    unique = set() \n    for num in nums: \n        if num not in unique: \n            unique.add(num) \n        else: \n            unique.remove(num) \n    return unique.pop()","lang":"py"}
{"idx":880,"func":" \npublic void isAvailable () {\n    URL url = new URL (\"URL HERE\");\n    HttpURLConnection connection = (HttpURLConnection) url.openConnection ();\n    connection.setRequestProperty (\"Connection\", \"close\");\n    connection.setConnectTimeout (10000);\n    connection.connect ();\n    if (connection.getResponseCode () == 200) {\n        return true;\n    } else return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":881,"func":"def is_available():\n    url = urllib.request.urlopen(\"URL HERE\") \n    connection = url.get_connection()\n    connection.set_request_property(\"Connection\", \"close\") \n    connection.set_connect_timeout(10000)  \n    connection.connect() \n    if (connection.get_response_code() == 200):\n        return True\n    else: \n        return False","lang":"py"}
{"idx":882,"func":" \npublic void actionPerformed (ActionEvent e) {\n    switch (direction) {\n        case UP :\n            draw.incrementY (false);\n            break;\n        case DOWN :\n            draw.incrementY (true);\n            break;\n        case LEFT :\n            draw.incrementX (false);\n            break;\n        case RIGHT :\n            draw.incrementX (true);\n            break;\n        default :\n            break;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":883,"func":"def actionPerformed(e):\n    switcher = {\n        UP: draw.incrementY(False),\n        DOWN: draw.incrementY(True),\n        LEFT: draw.incrementX(False),\n        RIGHT: draw.incrementX(True)\n    }\n\n    # Get the function from switcher dictionary\n    func = switcher.get(direction, lambda: None)\n    # Execute the function\n    func()","lang":"py"}
{"idx":884,"func":" \n        public void run () {\n            Image selected = getImage (true);\n            Image unselected = getImage (false);\n            int row = 2;\n            int col = 5;\n            JPanel p = new JPanel (new GridLayout (row, col));\n            for (int ii = 0;\n            ii < row * col; ii ++) {\n                p.add (getButton (selected, unselected));\n            }\n            JOptionPane.showMessageDialog (null, p);\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":885,"func":"def run():\n    selected = getImage(True)\n    unselected = getImage(False)\n    row = 2\n    col = 5\n    p = JPanel(GridLayout(row, col))\n    for ii in range(row*col):\n        p.add(getButton(selected, unselected))\n    JOptionPane.showMessageDialog(None, p)","lang":"py"}
{"idx":886,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":887,"func":"def solution(X, A):\n  leaves = set()\n  for i in range(len(A)):\n    leaves.add(A[i])\n    if (X in leaves and len(leaves) == X):\n      return i\n  return -1","lang":"py"}
{"idx":888,"func":" \npublic static void main (String [] args) throws IOException {\n    File dir = new File (\".\");\n    String source = dir.getCanonicalPath () + File.separator + \"Code.txt\";\n    String dest = dir.getCanonicalPath () + File.separator + \"Dest.txt\";\n    File fin = new File (source);\n    FileInputStream fis = new FileInputStream (fin);\n    BufferedReader in = new BufferedReader (new InputStreamReader (fis));\n    FileWriter fstream = new FileWriter (dest, true);\n    BufferedWriter out = new BufferedWriter (fstream);\n    String aLine = null;\n    while ((aLine = in.readLine ()) != null) {\n        out.write (aLine);\n        out.newLine ();\n    }\n    in.close ();\n    out.close ();\n}","lang":"java"}
{"idx":889,"func":"import os\nsource = os.getcwd() + os.sep + 'Code.txt'\ndest = os.getcwd() + os.sep + 'Dest.txt'\nwith open(source) as infile, open(dest, 'w') as outfile:\n    for line in infile:\n        outfile.write(line)\n","lang":"py"}
{"idx":890,"func":" \npublic static void main (String [] args) throws FileNotFoundException, XMLStreamException {\n    System.setProperty (\"javax.xml.stream.XMLInputFactory\", \"com.ctc.wstx.stax.WstxInputFactory\");\n    System.setProperty (\"javax.xml.stream.XMLOutputFactory\", \"com.ctc.wstx.stax.WstxOutputFactory\");\n    System.setProperty (\"javax.xml.stream.XMLEventFactory\", \"com.ctc.wstx.stax.WstxEventFactory\");\n    FileInputStream fis = new FileInputStream (new File (\"family.xml\"));\n    XMLInputFactory xmlif = XMLInputFactory.newFactory ();\n    XMLStreamReader2 xmlsr = (XMLStreamReader2) xmlif.createXMLStreamReader (fis);\n    String currentElementName = null;\n    while (xmlsr.hasNext ()) {\n        int eventType = xmlsr.next ();\n        switch (eventType) {\n            case (XMLEvent2.START_ELEMENT) :\n                currentElementName = xmlsr.getName ().toString ();\n                if (\"dad\".equals (currentElementName) == true) {\n                    System.out.println (\"isStartElement: \" + xmlsr.isStartElement ());\n                    System.out.println (\"Element BEGIN: \" + currentElementName);\n                    xmlsr.skipElement ();\n                } else {\n                    System.out.println (currentElementName);\n                }\n        }\n    }\n}","lang":"java"}
{"idx":891,"func":"from xml.etree import cElementTree as ET \nimport os\n \ndoc = ET.parse(\"family.xml\")\nfor child in doc.getiterator():\n    if child.tag == \"dad\":\n        print(\"isStartElement: \" + str(child.tag).strip())\n        print(\"Element BEGIN: \" + str(child.tag).strip())\n    else:\n        print(str(child.tag).strip())\n","lang":"py"}
{"idx":892,"func":" \npublic synchronized void afterTextChanged (final Editable text) {\n    String cost = text.toString ().trim ();\n    if (! cost.endsWith (\".\") && cost.contains (\".\")) {\n        String numberBeforeDecimal = cost.split (\"\\\\.\") [0];\n        String numberAfterDecimal = cost.split (\"\\\\.\") [1];\n        if (numberAfterDecimal.length () > 2) {\n            numberAfterDecimal = numberAfterDecimal.substring (0, 2);\n        }\n        cost = numberBeforeDecimal + \".\" + numberAfterDecimal;\n    }\n    costEditText.removeTextChangedListener (this);\n    costEditText.setText (cost);\n    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());\n    costEditText.addTextChangedListener (this);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":893,"func":"def afterTextChanged(text):\n    cost = text.strip()\n    if not cost.endswith('.') and '.' in cost:\n        numberBeforeDecimal, numberAfterDecimal = cost.split('.')\n        if len(numberAfterDecimal) > 2:\n            numberAfterDecimal = numberAfterDecimal[:2]\n        cost = numberBeforeDecimal + '.' + numberAfterDecimal\n \n    costEditText.removeTextChangedListener(this)\n    costEditText.setText(cost)\n    costEditText.setSelection(len(costEditText.getText().strip()))\n    costEditText.addTextChangedListener(this)","lang":"py"}
{"idx":894,"func":" \npublic static int getHours () {\n    int hours = 0;\n    boolean hoursNotOk = true;\n    do {\n        try {\n            System.out.println (\"Here\");\n            hours = console.nextInt ();\n            hoursNotOk = false;\n        } catch (Exception e) {\n            e.printStackTrace ();\n            console.nextLine ();\n        } finally {\n            if (hoursNotOk) {\n                System.out.println (\", please re-enter the hours again:\");\n            } else {\n                System.out.println (\"**hours input accepted**\");\n            }\n        }\n    } while (hoursNotOk);\n    return hours;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":895,"func":"def getHours():\n    hours = 0\n    hours_not_OK = True\n    while hours_not_OK:\n        try:\n            print('Here')\n            hours = int(input())\n            hours_not_OK = False\n        except Exception as e:\n            print(e)\n            hours_not_OK = True\n            print(', please re-enter the hours again.')\n    print('**hours input accepted**')\n    return hours","lang":"py"}
{"idx":896,"func":" \npublic void move () {\n    y += ya;\n    x += xa;\n    if (x < 0) {\n        x = 0;\n    } else if (x + 30 > game.getWidth ()) {\n        x = game.getWidth () - 30;\n    }\n    if (y < 0) {\n        y = 0;\n    } else if (collision ()) {\n        onGround = true;\n        y = game.ground.getBounds ().y - d;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":897,"func":"def move ():\n    y += ya\n    x += xa\n    if (x < 0):\n        x = 0\n    elif (x + 30 > game.getWidth ()):\n        x = game.getWidth () - 30\n    if (y < 0):\n        y = 0\n    elif (collision ()):\n        onGround = True\n        y = game.ground.getBounds ().y - d","lang":"py"}
{"idx":898,"func":" \npublic static int solution (Integer number) {\n    String binary = Integer.toBinaryString (number);\n    String [] gaps = binary.split (\"1\");\n    String biggestGap = \"\";\n    for (int i = 0;\n    i < (binary.endsWith (\"1\") ? gaps.length : gaps.length - 1); i ++) {\n        if (gaps [i].contains (\"0\") && gaps [i].length () > biggestGap.length ()) biggestGap = gaps [i];\n    }\n    return biggestGap.length ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":899,"func":"def solution (number):\n  binary = bin(number)[2:]\n  gaps = binary.split('1')\n  biggestGap = ''\n  for i in range(0, len(gaps) - 1 if binary.endswith('1') else len(gaps)):\n    if '0' in gaps[i] and len(gaps[i]) > len(biggestGap):\n      biggestGap = gaps[i]\n  return len(biggestGap)","lang":"py"}
{"idx":900,"func":" \npublic static void main (String [] args) {\n    List < Animal > list1 = new LinkedList < > (Arrays.asList (Cat, Mouse, Dog));\n    List < Animal > list2 = new LinkedList < > (Arrays.asList (Dog, Mouse, Cat));\n    List < Animal > list3 = new LinkedList < > (Arrays.asList (Dog, Horse, Cat));\n    List < Animal > list4 = new LinkedList < > (Arrays.asList (Dog, Tiger, Lion));\n    List < List < Animal > > list = new LinkedList < > (Arrays.asList (list1, list2, list3, list4));\n    Set < List < Animal > > sorted = new LinkedHashSet < > ();\n    for (List < Animal > animals : list) {\n        List < Animal > arList = new ArrayList < > (animals);\n        Collections.sort (arList);\n        sorted.add (new LinkedList < > (arList));\n    }\n    for (List < Animal > animals : sorted) {\n        System.out.println (animals);\n    }\n}","lang":"java"}
{"idx":901,"func":"list1 = [Cat, Mouse, Dog]\nlist2 = [Dog, Mouse, Cat]\nlist3 = [Dog, Horse, Cat]\nlist4 = [Dog, Tiger, Lion]\nlists = [list1, list2, list3, list4]\nsorted_list = set()\nfor animals in lists:\n  arList = list(animals)\n  arList.sort()\n  sorted_list.add(arList)\n \nfor animals in sorted_list:\n  print(animals)\n  \n","lang":"py"}
{"idx":902,"func":" \npublic String getLongestSubstring (String s) {\n    if (s.length () == 0) return null;\n    char currentChar = s.charAt (0);\n    String longestString = \"\" + currentChar;\n    String runningString = \"\" + currentChar;\n    int currentLongestLength = 1;\n    for (int i = 1;\n    i < s.length (); i ++) {\n        if (s.charAt (i) == currentChar) {\n            runningString = runningString + currentChar;\n            if (runningString.length () > longestString.length ()) {\n                currentLongestLength ++;\n                longestString = runningString;\n            }\n        } else {\n            runningString = \"\" + s.charAt (i);\n        }\n    }\n    return longestString;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":903,"func":"def getLongestSubstring(s):\n  if len(s) == 0:\n    return None\n\n  currentChar = s[0]\n  longestString = \"\" + currentChar\n  runningString = \"\" + currentChar\n  currentLongestLength = 1\n\n  for i in range(1, len(s)):\n    if s[i] == currentChar:\n      runningString = runningString + currentChar\n      if len(runningString) > len(longestString):\n        currentLongestLength += 1\n        longestString = runningString\n    else:\n      runningString = \"\" + s[i]\n\n  return longestString","lang":"py"}
{"idx":904,"func":" \npublic static boolean isAnagram (String first, String second) {\n    String positive = first.toLowerCase ();\n    String negative = second.toLowerCase ();\n    if (positive.length () != negative.length ()) {\n        return false;\n    }\n    int [] counts = new int [26];\n    int diff = 0;\n    for (int i = 0;\n    i < positive.length (); i ++) {\n        int pos = (int) positive.charAt (i) - 97;\n        if (counts [pos] >= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [pos] ++;\n        int neg = (int) negative.charAt (i) - 97;\n        if (counts [neg] <= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [neg] --;\n    }\n    return diff == 0;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":905,"func":"def isAnagram(first, second):\n    positive = first.lower()\n    negative = second.lower()\n\n    if len(positive) != len(negative):\n        return False\n    \n    counter = [0] * 26\n\n    diff = 0\n    for i in range(len(positive)):\n        pos = ord(positive[i]) - 97\n        if counter[pos] >= 0:\n            diff += 1\n        else:\n            diff -= 1\n        counter[pos] += 1\n\n        neg = ord(negative[i]) - 97\n        if counter[neg] <= 0:\n            diff += 1\n        else:\n            diff -= 1\n        counter[neg] -= 1\n\n    if diff == 0:\n        return True\n    else:\n        return False","lang":"py"}
{"idx":906,"func":" \n        public void run () {\n            new LinePanel ().display ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":907,"func":"def run(): \n  line_panel = LinePanel() \n  line_panel.display()","lang":"py"}
{"idx":908,"func":" \npublic void displayImage (String strfilename, JLabel JLlabel) {\n    BufferedImage image = null;\n    if (! isImageExist (strfilename)) {\n        image = ImageIO.read (new File (\"NOIMAGE.jpg\"));\n    } else {\n        try {\n            image = ImageIO.read (new File (strfilename + \".jpg\"));\n        } catch (IOException ioe) {\n            ioe.printStackTrace ();\n        }\n    }\n    ImageIcon icon = new ImageIcon (image);\n    JLlabel.setIcon (icon);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":909,"func":"def displayImage(strfilename, JLlabel):\n    image = None\n    if not isImageExist(strfilename):\n        image = Image.open(\"NOIMAGE.jpg\")\n    else:\n        try:\n            image = Image.open(strfilename + \".jpg\")\n        except Exception as e:\n            print(e)\n           \n    icon = ImageTk.PhotoImage(image)\n    JLlabel.configure(image=icon)\n    JLlabel.image = icon","lang":"py"}
{"idx":910,"func":" \nprivate byte [] readData (File f, int startByte, int chunkSize) throws Exception {\n    RandomAccessFile raf = new RandomAccessFile (f, \"r\");\n    raf.seek (startByte);\n    byte [] data = new byte [chunkSize];\n    int read = raf.read (data);\n    raf.close ();\n    if (read == data.length) return data;\n    else return Arrays.copyOf (data, read);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":911,"func":"def read_data(f, start_byte, chunk_size):\n  try:\n    with open(f, 'rb' ) as raf:\n        raf.seek(start_byte)\n        data = bytearray(chunk_size)\n        read = raf.readinto(data)\n        if read == chunk_size:\n            return data\n        else:\n            return data[:read]\n  except Exception as e:\n        raise e","lang":"py"}
{"idx":912,"func":" \nNode reverse (Node n, Node p) {\n    if (n == null) return null;\n    if (n.next == null) {\n        n.next = p;\n        return n;\n    }\n    Node r = reverse (n.next, n);\n    n.next = p;\n    return r;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":913,"func":"def reverse(n, p):\n    if n is None:\n        return None\n    if n.next is None:\n        n.next = p\n        return n\n    r = reverse(n.next, n)\n    n.next = p\n    return r","lang":"py"}
{"idx":914,"func":" \npublic void actionPerformed (ActionEvent e) {\n    try {\n        InputStream is = new BufferedInputStream (new FileInputStream (file));\n        XMLDecoder xd = new XMLDecoder (is);\n        model = (DefaultTableModel) xd.readObject ();\n        table.setModel (model);\n    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":915,"func":"def actionPerformed(self, e):\n    try:\n        is = BufferedInputStream(FileInputStream(file))\n        xd = XMLDecoder(is)\n        self.model = xd.readObject()\n        self.table.setModel(self.model)\n    except IOException as ex:\n        ex.printStackTrace()","lang":"py"}
{"idx":916,"func":" \n        public int compare (String o1, String o2) {\n            System.out.println (\"Compare(\" + o1 + \",\" + o2 + \")\");\n            char [] a1 = o1.toCharArray ();\n            Arrays.sort (a1);\n            char [] a2 = o2.toCharArray ();\n            Arrays.sort (a2);\n            return new String (a1).compareTo (new String (a2));\n        }}\n    ;\n\n\n\n\n","lang":"java"}
{"idx":917,"func":"def compare(o1, o2):\n\tprint(\"Compare(\" + o1 + \",\" + o2 + \")\")\n\ta1 = list(o1)\n\ta1.sort()\n\ta2 = list(o2)\n\ta2.sort()\n\treturn \"\".join(a1).compare(\"\".join(a2))","lang":"py"}
{"idx":918,"func":" \npublic static void main (String [] args) {\n    double rate = 0;\n    CurrencyConverter w = new CurrencyConverter ();\n    w.print ();\n    System.out.print (\"Choose the input currency: \");\n    Scanner sc = new Scanner (System.in);\n    int choice = sc.nextInt ();\n    if (choice < 1 || choice > 12) {\n        System.out.println (\"404 not found XD\");\n        sc.close ();\n        return;\n    }\n    System.out.print (\"Choose the output currency: \");\n    int output = sc.nextInt ();\n    Currency first = Currency.values () [choice - 1];\n    Currency second = Currency.values () [output - 1];\n    System.out.printf (\"Now enter the input in \" + first.getFullName () + \": \");\n    double input = sc.nextDouble ();\n    if (choice == output) System.out.println (\"Troller ._. pabobo\");\n    rate = (input * first.getRate ()) \/ second.getRate ();\n    System.out.print (\"The conversion of \" + first.toString () + \" to \" + second.toString () + \" = \" + rate);\n    sc.close ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":919,"func":"def main(args):\n     rate = 0\n     w = CurrencyConverter()\n     w.print()\n     print(\"Choose the input currency: \")\n     choice = int(input())\n     if choice < 1 or choice > 12:\n         print(\"404 not found XD\")\n         return\n     print(\"Choose the output currency: \")\n     output = int(input())\n     first = Currency.values()[choice - 1]\n     second = Currency.values()[output - 1]\n     print(f\"Now enter the input in {first.getFullName()}: \") \n     input = float(input())\n     if choice == output:\n        print(\"Troller ._. pabobo\")\n     rate = (input * first.getRate()) \/ second.getRate() \n     print(f\"The conversion of {first.toString()} to {second.toString()} = {rate}\")","lang":"py"}
{"idx":920,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"toe\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":921,"func":"def run():\n    try:\n        for i in range(2):\n            print(\"toe\")\n    except Exception as e:\n        e.getStackTrace()","lang":"py"}
{"idx":922,"func":" \npublic static int solution (int X, int [] A) {\n    int [] counter = new int [X + 1];\n    int ans = - 1;\n    int x = 0;\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (counter [A [i]] == 0) {\n            counter [A [i]] = A [i];\n            x += 1;\n            if (x == X) {\n                return i;\n            }\n        }\n    }\n    return ans;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":923,"func":"def solution(X, A): \n    counter = [0] * (X + 1) \n    ans = -1\n    x = 0\n    for i in range(len(A)): \n        if counter[A[i]] == 0: \n            counter[A[i]] = A[i] \n            x += 1\n            if(x == X): \n                return i \n                \n    return ans","lang":"py"}
{"idx":924,"func":" \npublic static void shuffle (Object [] a) {\n    int n = a.length;\n    for (int i = 0;\n    i < n; i ++) {\n        int r = i + (int) (Math.random () * (n - i));\n        Object swap = a [r];\n        a [r] = a [i];\n        a [i] = swap;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":925,"func":"def shuffle(array):\n  n = len(array)\n  for i in range(n):\n    r = i + random.randint(0, n - i)\n    swap = array[r]\n    array[r] = array[i]\n    array[i] = swap","lang":"py"}
{"idx":926,"func":" \npublic static void main (String [] args) {\n    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;\n    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }\n    System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n}","lang":"java"}
{"idx":927,"func":"","lang":"py"}
{"idx":928,"func":" \nprivate void type (char character) {\n    handleSpecialCharacter (character);\n    if (Character.isLowerCase (character)) {\n        typeCharacter (Character.toUpperCase (character));\n    }\n    if (Character.isUpperCase (character)) {\n        typeShiftCharacter (character);\n    }\n    if (Character.isDigit (character)) {\n        typeCharacter (character);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":929,"func":"def type(character):\n    handleSpecialCharacter(character)\n    if character.islower():\n        typeCharacter(character.upper())\n    if character.isupper():\n        typeShiftCharacter(character)\n    if character.isdigit():\n        typeCharacter(character)","lang":"py"}
{"idx":930,"func":" \n        public void run () {\n            System.out.println (ARRAY_ELEMENTS [index]);\n            index ++;\n            if (index >= ARRAY_ELEMENTS.length) {\n                utilTimer.cancel ();\n            }\n        }}\n\n\n\n\n","lang":"java"}
{"idx":931,"func":"def run(ARRAY_ELEMENTS): \n  index = 0\n  while index < len(ARRAY_ELEMENTS):\n      print (ARRAY_ELEMENTS[index])\n      index+=1\n      if (index>=len(ARRAY_ELEMENTS)):\n          break","lang":"py"}
{"idx":932,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":933,"func":"def getName(value):\n    buffer = \"\"\n    high = \"\"\n    low = \"\"\n\n    if (len(value) < getPartDivider()):\n        high = \"\"\n        low = value\n    else:\n        index = len(value) - getPartDivider()\n        high = value[0:index]\n        low = value[index:]\n    \n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n\n    if (highName != \"\"):\n        buffer += highName\n        buffer += SEPARATOR\n        buffer += getToken()\n\n        if (lowName != \"\"):\n            buffer += SEPARATOR\n    \n    if (lowName != \"\"):\n        buffer += lowName\n\n    return buffer","lang":"py"}
{"idx":934,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    boolean tensFound = false;\n    int number;\n    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number >= 20) {\n        buffer.append (TOKENS [(number \/ 10) - 2]);\n        number %= 10;\n        tensFound = true;\n    } else {\n        number %= 20;\n    }\n    if (number != 0) {\n        if (tensFound) {\n            buffer.append (UNION_SEPARATOR);\n        }\n        buffer.append (unitProcessor.getName (number));\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":935,"func":"def getName(value):\n    buffer = ''\n    tensFound = False\n    number = 0\n    if len(value) > 3:\n       number = int(value[-3:],10)\n    else: \n        number = int(value, 10)\n    number %= 100\n\n    if number >= 20:\n        buffer += TOKENS[(number\/\/10)-2]\n        number %= 10\n        tensFound = True\n    else:\n        number%=20\n\n    if number != 0:\n        if tensFound:\n            buffer+= UNION_SEPARATOR\n        buffer += unitProcessor.getName(number)\n    return buffer","lang":"py"}
{"idx":936,"func":" \npublic static void main (String [] args) {\n    final Scanner input = new Scanner (System.in);\n    String inString;\n    while (true) {\n        System.out.println (\"Enter a binary number: \");\n        inString = input.nextLine ();\n        if (inString.equals (\"-1\")) break;\n        System.out.println (Integer.parseInt (inString, 2));\n    }\n    System.out.println (\"All set !\");\n}","lang":"java"}
{"idx":937,"func":"while True:\n  print(\"Enter a binary number:\")\n  inString = input()\n  if inString == \"-1\":\n    break\n  print(int(inString,2))\nprint(\"All set!\")\n","lang":"py"}
{"idx":938,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":939,"func":"def solution(X, A):\n    set_a = set()\n    sum1 = 0\n    sum2 = 0\n    for i in range (X + 1):\n        sum1 += i\n    for i in range (len(A)):\n        if A[i] in set_a:\n            continue\n        set_a.add(A[i])\n        sum2 += A[i]\n        if sum1 == sum2:\n            return i\n    return -1","lang":"py"}
{"idx":940,"func":" \nstatic void investigate (ParameterizedType p, Type...typeArgs) {\n    final Class < ? > c = (Class < ? >) p.getRawType ();\n    final StringBuilder b = new StringBuilder (c.getName ());\n    b.append ('<');\n    Type [] localArgs = p.getActualTypeArguments ();\n    if (typeArgs != null && typeArgs.length > 0) {\n        int i = 0, nextTypeArg = 0;\n        for (Type local : localArgs) {\n            if (local instanceof ParameterizedType) {\n                ParameterizedType localP = (ParameterizedType) local;\n                b.append (localP.getRawType ()).append ('<');\n                b.append (typeArgs [nextTypeArg ++]);\n                b.append ('>');\n            } else if (local instanceof TypeVariable) {\n                localArgs [nextTypeArg] = typeArgs [nextTypeArg];\n                b.append (localArgs [nextTypeArg]);\n                nextTypeArg ++;\n            } else {\n                b.append (local.toString ());\n            }\n            b.append (\", \");\n            i ++;\n        }\n        if (typeArgs.length > 0) {\n            b.delete (b.length () - 2, b.length ());\n        }\n        b.append ('>');\n    } else {\n        String args = Arrays.toString (localArgs);\n        b.append (args.substring (1, args.length () - 1)).append ('>');\n    }\n    System.out.println (b);\n    investigate (c, localArgs);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":941,"func":"def investigate(p, *type_args):\n    c = p.getRawType()\n    b = str(c.getName()) + '<'\n    local_args = p.getActualTypeArguments()\n    if type_args and len(type_args) > 0:\n        for i in range(0, len(local_args)):\n            if isinstance(local_args[i], ParameterizedType):\n                local_p = local_args[i]\n                b += str(local_p.getRawType()) + '<'\n                b += type_args[i]\n                b += '>'\n            elif isinstance(local_args[i], TypeVariable):\n                local_args[i] = type_args[i]\n                b += local_args[i]\n            else:\n                b += str(local_args[i])\n            b += ', '\n        if len(type_args) > 0:\n            b = b[:-2]\n        b += '>'\n    else:\n        args = str(local_args)\n        b += args[1:-1] + '>'\n    print(b)\n    investigate(c, local_args)","lang":"py"}
{"idx":942,"func":" \npublic void actionPerformed (ActionEvent e) {\n    int x = (int) (Math.random () * getWidth ());\n    int y = (int) (Math.random () * getHeight ());\n    int width = (int) (Math.random () * (getWidth () \/ 4));\n    int height = (int) (Math.random () * (getHeight () \/ 4));\n    if (x + width > getWidth ()) {\n        x = getWidth () - width;\n    }\n    if (y + height > getHeight ()) {\n        y = getHeight () - height;\n    }\n    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));\n    lstShapes.add (new MyRectangle (x, y, width, height, color));\n    repaint ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":943,"func":"def actionPerformed (self, e):\n    x = randint(0, self.getWidth())\n    y = randint(0, self.getHeight())\n    width = randint(0, int(self.getWidth() \/ 4))\n    height = randint(0, int(self.getHeight() \/ 4))\n\n    if (x + width > getWidth()):\n        x = self.getWidth() - width\n    if (y + height > getHeight()):\n        y = self.getHeight() - height\n\n    color = Color(randint(0, 255), randint(0, 255), randint(0, 255))\n    self.lstShapes.add(MyRectangle(x, y, width, height, color))\n    self.repaint()","lang":"py"}
{"idx":944,"func":" \npublic void run () {\n    synchronized (lock) {\n        if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n            return;\n        }\n        currentSize [0] = bar.getShell ().getSize ().y;\n        if (currentSize [0] != orgSize [0]) {\n            return;\n        } else {\n            bar.getShell ().layout (true);\n            bar.getShell ().pack (true);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":945,"func":"def run ():\n    with lock:\n        if bar.isDisposed () or bar.getShell ().isDisposed ():\n            return\n        currentSize [0] = bar.getShell ().getSize ().y\n        if currentSize [0] != orgSize [0]:\n            return\n        else:\n            bar.getShell ().layout (True)\n            bar.getShell ().pack (True)","lang":"py"}
{"idx":946,"func":" \npublic void put (Key key, Value val) {\n    if (map.containsKey (key)) {\n        put (key, val);\n        return;\n    }\n    while (currentSize >= maxSize) {\n        freeSpace ();\n    }\n    synchronized (this) {\n        queue.add (key);\n        map.put (key, val);\n        currentSize ++;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":947,"func":"def put(key, val):\n    if key in map:\n        map[key] = val\n        return\n    while currentSize >= maxSize:\n        freeSpace() \n    with lock: \n        queue.add(key)\n        map[key] = val\n        currentSize += 1","lang":"py"}
{"idx":948,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":949,"func":"def filter(source, start, end, dest, dstart, dend):\n    \n    dot_pos = -1\n    len_dest = len(dest)\n\n    for i in range(len_dest):\n        if dest[i] == '.' or dest[i] == ',':\n            dot_pos = i\n            break\n\n    if dot_pos >= 0:\n        if source == '.' or source == ',':\n            return \"\"\n        if dend <= dot_pos:\n            return None\n        if len_dest - dot_pos > decimal_digits:\n            return \"\"\n\n    return None","lang":"py"}
{"idx":950,"func":" \npublic String inputStreamToString (InputStream inputStream) throws IOException {\n    String newLine = System.getProperty (\"line.separator\");\n    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));\n    StringBuilder result = new StringBuilder (UTF_8);\n    String line;\n    boolean flag = false;\n    while ((line = reader.readLine ()) != null) {\n        result.append (flag ? newLine : \"\").append (line);\n        flag = true;\n    }\n    return result.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":951,"func":"def inputStreamToString (inputStream):\n  newLine = os.getProperty(\"line.separator\")\n  reader = BufferedReader(InputStreamReader(inputStream))\n  result = UTF_8\n  flag = False\n  while (line = reader.readLine()):\n    result.append(flag if newLine else \"\").append(line)\n    flag = True\n  return result.toString()","lang":"py"}
{"idx":952,"func":" \npublic void run () {\n    System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" starting\");\n    synchronized (BadRunnable.class) {\n        System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" acquired the monitor on BadRunnable.class\");\n        latch.countDown ();\n        while (true) {\n            try {\n                latch.await ();\n            } catch (InterruptedException ex) {\n                continue;\n            }\n            break;\n        }\n    }\n    System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" released the monitor on BadRunnable.class\");\n    System.out.println (\"Thread \" + Thread.currentThread ().getId () + \" ending\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":953,"func":"def run(self): \n    print(\"Thread\", threading.current_thread().getId(), \"starting\")\n    BadRunnable.lock.acquire()\n    print(\"Thread\", threading.current_thread().getId(), \"acquired the monitor on BadRunnable.class\")\n    self.latch.countDown()\n    while True: \n        self.latch.wait()\n        break\n    BadRunnable.lock.release()\n    print(\"Thread\", threading.current_thread().getId(), \"released the monitor on BadRunnable.class\")\n    print(\"Thread\", threading.current_thread().getId(), \"ending\")","lang":"py"}
{"idx":954,"func":" \npublic void actionPerformed (ActionEvent e) {\n    JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":955,"func":"def actionPerformed(e):\n  ch = getFileChooser()\n  result = ch.showSaveDialog(gui)\n  if result == JFileChooser.APPROVE_OPTION:\n    try:\n      f = ch.getSelectedFile()\n      ImageIO.write(BasicPaint.canvasImage, \"png\", f)\n      BasicPaint.originalImage = BasicPaint.canvasImage\n      dirty = False\n    except IOException as ioe:\n      showError(ioe)\n      ioe.printStackTrace()","lang":"py"}
{"idx":956,"func":" \n        public int compare (Map.Entry < String, Integer > a, Map.Entry < String, Integer > b) {\n            return a.getValue ().compareTo (b.getValue ());\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":957,"func":"def compare (a, b):\n  return a[1].compareTo(b[1])","lang":"py"}
{"idx":958,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    while (makeMore) {\n        new Leakee (0).check ();\n    }\n    while (true) {\n        Thread.sleep (1000);\n        System.out.println (\"memory=\" + Runtime.getRuntime ().freeMemory () + \" \/ \" + Runtime.getRuntime ().totalMemory ());\n    }\n}","lang":"java"}
{"idx":959,"func":"import time\nmakeMore = True\nwhile makeMore:\n    Leakee(0).check()\nwhile True:\n    time.sleep(1)\n    print(\"memory={} \/ {}\".format(Runtime.getRuntime().freeMemory(), Runtime.getRuntime().totalMemory()))\n","lang":"py"}
{"idx":960,"func":" \nprivate void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":961,"func":"def transform(workbookOld, workbookNew, hash, styleOld, styleNew):\n  styleNew.alignment = styleOld.alignment\n  styleNew.border_bottom = styleOld.border_bottom\n  styleNew.border_left = styleOld.border_left\n  styleNew.border_right = styleOld.border_right\n  styleNew.border_top = styleOld.border_top\n  styleNew.data_format = transform(workbookOld, workbookNew, styleOld.data_format)\n  styleNew.fill_background_color = styleOld.fill_background_color\n  styleNew.fill_foreground_color = styleOld.fill_foreground_color\n  styleNew.fill_pattern = styleOld.fill_pattern\n  styleNew.font = transform(workbookOld, workbookNew, styleOld.font)\n  styleNew.hidden = styleOld.hidden\n  styleNew.indention = styleOld.indention\n  styleNew.locked = styleOld.locked\n  styleNew.vertical_alignment = styleOld.vertical_alignment\n  styleNew.wrap_text = styleOld.wrap_text\n  styleMap[hash] = styleNew","lang":"py"}
{"idx":962,"func":" \npublic static void main (String args []) {\n    Map < String, Integer > tm = new TreeMap < String, Integer > ();\n    try {\n        FileInputStream fis = new FileInputStream (\"Test.txt\");\n        DataInputStream in = new DataInputStream (fis);\n        BufferedReader br = new BufferedReader (new InputStreamReader (in));\n        String line;\n        int countValue = 1;\n        while ((line = br.readLine ()) != null) {\n            line = line.replaceAll (\"[-+.^:;,()\\\"\\\\[\\\\]]\", \"\");\n            StringTokenizer st = new StringTokenizer (line, \" \");\n            while (st.hasMoreTokens ()) {\n                String nextElement = (String) st.nextElement ();\n                if (tm.size () > 0 && tm.containsKey (nextElement)) {\n                    int val = 0;\n                    if (tm.get (nextElement) != null) {\n                        val = (Integer) tm.get (nextElement);\n                        val = val + 1;\n                    }\n                    tm.put (nextElement, val);\n                } else {\n                    tm.put (nextElement, 1);\n                }\n            }\n        }\n        for (Map.Entry < String, Integer > entry : tm.entrySet ()) {\n            System.out.println (entry.getKey () + \" : \" + entry.getValue ());\n        }\n    } catch (FileNotFoundException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":963,"func":"tm = {}\ntry:\n    fis = open(\"Test.txt\",\"r\")\n    text = fis.read()\n    text_list = text.replace(\"-\",\"\").replace(\"+\",\"\").replace(\".\",\"\").replace(\"^\",\"\").replace(\":\",\"\").replace(\";\",\"\").replace(\"(\",\"\").replace(\")\",\"\").replace(\"\\\"\",\"\").replace(\"[\",\"\").replace(\"]\",\"\").split(\" \")\n  \n    for x in text_list:\n        if x in tm:\n            tm[x] += 1\n        else:\n            tm[x] = 1\n \n    for key,value in tm.items():\n        print(\"{} : {}\".format(key,value))\n    \nexcept FileNotFoundError:\n    print(\"File not found\")\nexcept IOError:\n    print(\"IO Error\")\n","lang":"py"}
{"idx":964,"func":" \npublic final void contextDestroyed (ServletContextEvent sce) {\n    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();\n    Enumeration < Driver > drivers = DriverManager.getDrivers ();\n    while (drivers.hasMoreElements ()) {\n        Driver driver = drivers.nextElement ();\n        if (driver.getClass ().getClassLoader () == cl) {\n            try {\n                log.info (\"Deregistering JDBC driver {}\", driver);\n                DriverManager.deregisterDriver (driver);\n            } catch (SQLException ex) {\n                log.error (\"Error deregistering JDBC driver {}\", driver, ex);\n            }\n        } else {\n            log.trace (\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader\", driver);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":965,"func":"def contextDestroyed(sce):\n    cl = Thread.currentThread().getcontextClassLoader()\n    for driver in DriverManager.getDrivers():\n        if driver.getClass().getClassLoader() == cl:\n            log.info(\"Deregistering JDBC driver {}\", driver)\n            try:\n                DriverManager.deregisterDriver(driver)\n            except SQLException as ex:\n                log.error(\"Error deregistering JDBC driver {}\", driver, ex)\n        else:\n            log.trace(\"Not deregistering JDBC driver {}as it does not belong to this webapp's ClassLoader\", driver)","lang":"py"}
{"idx":966,"func":" \n        public void run () {\n            new Main ();\n        }}\n    );\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":967,"func":"def run():\n    Main()","lang":"py"}
{"idx":968,"func":" \npublic static boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) {\n        return false;\n    }\n    for (int i = 0;\n    i < s2.length (); i ++) {\n        if (! s1.contains (\"\" + s2.charAt (i))) {\n            return false;\n        }\n        s1 = s1.replaceFirst (\"\" + s2.charAt (i), \"\");\n        s2 = s2.replaceFirst (\"\" + s2.charAt (i), \"\");\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":969,"func":"def isAnagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    for i in range(len(s2)):\n        if s2[i] not in s1:\n            return False\n        s1 = s1.replace(s2[i], \"\", 1)\n        s2 = s2.replace(s2[i], \"\", 1)\n    return True","lang":"py"}
{"idx":970,"func":" \npublic int solution (int X, int [] A) {\n    HashSet < Integer > hset = new HashSet < Integer > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":971,"func":"def solution(X, A): \n    hset = set() \n    for i in range(len(A)): \n        if A[i] <= X: \n            hset.add(A[i]) \n        if len(hset) == X: \n            return i\n    return -1","lang":"py"}
{"idx":972,"func":" \nprotected void sublayout (int maxWidth, int maxHeight) {\n    int currX = 0;\n    int currY = 0;\n    Field currField;\n    currField = this.getField (0);\n    switch (ScreenConfig.getInstance ().getScreen ()) {\n        case ScreenConfig.SCREEN_320_240 :\n            currX = 5;\n            currY = 3;\n            break;\n        case ScreenConfig.SCREEN_480_360 :\n        case ScreenConfig.SCREEN_480_320 :\n            currX = 5;\n            currY = 1;\n            break;\n    }\n    this.setPositionChild (currField, currX, currY);\n    this.layoutChild (currField, currField.getPreferredWidth (), currField.getPreferredHeight ());\n    setExtent (this.getPreferredWidth (), this.getPreferredHeight ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":973,"func":"def sublayout(self, maxWidth, maxHeight): \n    currX = 0\n    currY = 0\n    currField = self.getField(0)\n    \n    if ScreenConfig.getInstance().getScreen() == ScreenConfig.SCREEN_320_240: \n        currX = 5\n        currY = 3\n    elif ScreenConfig.getInstance().getScreen() == ScreenConfig.SCREEN_480_360 or ScreenConfig.getInstance().getScreen() == ScreenConfig.SCREEN_480_320: \n        currX = 5\n        currY = 1\n    \n    self.setPositionChild(currField, currX, currY)\n    self.layoutChild(currField, currField.getPreferredWidth(), currField.getPreferredHeight())\n    self.setExtent(self.getPreferredWidth(), self.getPreferredHeight())","lang":"py"}
{"idx":974,"func":" \npublic static boolean isNumber (String str) {\n    int i = 0, len = str.length ();\n    boolean a = false, b = false, c = false, d = false;\n    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        a = true;\n    }\n    if (i < len && (str.charAt (i) == '.')) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        b = true;\n    }\n    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {\n        i ++;\n        c = true;\n    }\n    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        d = true;\n    }\n    return i == len && (a || b) && (! c || (c && d));\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":975,"func":"def isNumber(str):\n  i = 0\n  len = len(str)\n  a = False\n  b = False\n  c = False\n  d = False\n  if i < len and (str[i] == '+' or str[i] == '-'):\n    i += 1\n  while i < len and str[i].isdigit():\n    i += 1\n    a = True\n  if i < len and str[i] == '.':\n    i += 1\n  while i < len and str[i].isdigit():\n    i += 1\n    b = True\n  if i < len and (str[i] == 'e' or str[i] == 'E') and (a or b):\n    i += 1\n    c = True\n  if i < len and (str[i] == '+' or str[i] == '-') and c:\n    i += 1\n  while i < len and str[i].isdigit():\n    i += 1\n    d = True\n  return i == len and (a or b) and (not c or (c and d))","lang":"py"}
{"idx":976,"func":" \npublic static void main (String [] args) throws NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {\n    Object obj = new Object ();\n    Class < Object > objClass = Object.class;\n    String s;\n    long start = System.nanoTime ();\n    s = obj.toString ();\n    long directInvokeEnd = System.nanoTime ();\n    System.out.println (s);\n    long methodLookupStart = System.nanoTime ();\n    java.lang.reflect.Method method = objClass.getMethod (\"toString\");\n    long methodLookupEnd = System.nanoTime ();\n    s = (String) (method.invoke (obj));\n    long reflectInvokeEnd = System.nanoTime ();\n    System.out.println (s);\n    System.out.println (directInvokeEnd - start);\n    System.out.println (methodLookupEnd - methodLookupStart);\n    System.out.println (reflectInvokeEnd - methodLookupEnd);\n}\n\n\n\n\n\nimport time\n\n","lang":"java"}
{"idx":977,"func":"def main(args):\n  obj = object()\n  obj_class = object.__class__\n  start = time.time_ns()\n  s = obj.__str__()\n  direct_invoke_end = time.time_ns()\n  print(s)\n  method_lookup_start = time.time_ns()\n  method = obj_class.__getattribute__(obj, '__str__')\n  method_lookup_end = time.time_ns()\n  s = method(obj)\n  reflect_invoke_end = time.time_ns()\n  print(s)\n  print(direct_invoke_end - start)\n  print(method_lookup_end - method_lookup_start)\n  print(reflect_invoke_end - method_lookup_end)","lang":"py"}
{"idx":978,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":979,"func":"def getName(value):\n    negative = False\n    if value.startswith(\"-\"):\n        negative = True\n        value = value[1:]\n\n    decimals = value.index(\".\")\n    decimalValue = None\n    if 0 <= decimals:\n        decimalValue = value[decimals + 1:]\n        value = value[0:decimals]\n\n    name = processor.getName(value)\n    if name == \"\":\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n\n    if decimalValue is not None and decimalValue != \"\":\n        zeroDecimalValue = \"0\" * len(decimalValue)\n        if decimalValue == zeroDecimalValue:\n            name = name + SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue))\n        else:\n            name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n\n    return name","lang":"py"}
{"idx":980,"func":" \npublic int solution (int X, int [] A) {\n    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":981,"func":"def solution (X, A):\n    size = len(A)\n    check = [0] * X\n    cmp = 0\n    time = -1\n    for x in range(0, size):\n        temp = A[x]\n        if (temp <= X):\n            if (check[temp - 1] > 0):\n                continue\n            check[temp - 1] += 1\n            cmp += 1\n        if (cmp == X):\n            time = x\n            break\n    return time","lang":"py"}
{"idx":982,"func":" \npublic static String startOz (String str) {\n    if (str.length () >= 2 && str.substring (0, 2).equals (\"oz\")) {\n        return \"oz\";\n    } else if (str.length () >= 2 && str.substring (1, 2).equals (\"z\")) {\n        return \"z\";\n    } else if (str.length () >= 2 && str.substring (0, 1).equals (\"o\")) {\n        return \"o\";\n    }\n    return \"\";\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":983,"func":"def startOz(str):\n    if len(str) >= 2 and str[0:2] == 'oz':\n        return 'oz'\n    elif len(str) >= 2 and str[1:2] == 'z':\n        return 'z'\n    elif len(str) >= 2 and str[0:1] == 'o':\n        return 'o'\n    else:\n        return ''","lang":"py"}
{"idx":984,"func":" \npublic static void main (String [] args) {\n    Scanner input = new Scanner (System.in);\n    final int valid = 6;\n    Scanner one = new Scanner (System.in);\n    System.out.println (\"Enter your username: \");\n    String s = one.nextLine ();\n    if (s.length () < valid) {\n        System.out.println (\"Enter a valid username\");\n        System.out.println (\"User name must contain \" + valid + \" characters\");\n        System.out.println (\"Enter again: \");\n        s = one.nextLine ();\n    }\n    System.out.println (\"Username accepted: \" + s);\n    Scanner two = new Scanner (System.in);\n    System.out.println (\"Enter your age: \");\n    int a = two.nextInt ();\n    System.out.println (\"Age accepted: \" + a);\n    Scanner three = new Scanner (System.in);\n    System.out.println (\"Enter your sex: \");\n    String sex = three.nextLine ();\n    System.out.println (\"Sex accepted: \" + sex);\n}","lang":"java"}
{"idx":985,"func":"valid = 6\ns = input(\"Enter your username: \")\nwhile len(s) < valid:\n    print (\"Enter a valid username\")\n    print (\"User name must contain \" + str(valid) + \" characters\")\n    print (\"Enter again: \")\n    s = input() \nprint(\"Username accepted: \" + s) \nage = int(input(\"Enter your age: \"))\nprint(\"Age accepted: \" + str(age)) \nsex = input(\"Enter your sex: \")\nprint(\"Sex accepted: \" + sex) \n","lang":"py"}
{"idx":986,"func":" \npublic int solution (final int X, final int [] A) {\n    Set < Integer > emptyPosition = new HashSet < Integer > ();\n    for (int i = 1;\n    i <= X; i ++) {\n        emptyPosition.add (i);\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        emptyPosition.remove (A [i]);\n        if (emptyPosition.size () == 0) {\n            return i;\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":987,"func":"def solution(X, A):\n  empty_position = set(range(1, X+1))\n  for i, element in enumerate(A):\n    if element in empty_position: \n      empty_position.remove(element)\n    if len(empty_position) == 0:\n      return i\n  return -1","lang":"py"}
{"idx":988,"func":" \npublic void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {\n    super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    if (grantResults.length == 0 || grantResults == null) {\n    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":989,"func":"def onRequestPermissionsResult(self,requestCode, permissions, grantResults):   \n    super().onRequestPermissionsResult(requestCode, permissions, grantResults)\n    if grantResults.length == 0 or grantResults is None:\n        pass\n    elif grantResults[0] == PackageManager.PERMISSION_GRANTED:\n        pass\n    elif grantResults[0] == PackageManager.PERMISSION_DENIED:\n        pass","lang":"py"}
{"idx":990,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int [] result = new int [P.length];\n    int [] factor1 = new int [S.length ()];\n    int [] factor2 = new int [S.length ()];\n    int [] factor3 = new int [S.length ()];\n    int [] factor4 = new int [S.length ()];\n    int factor1Sum = 0;\n    int factor2Sum = 0;\n    int factor3Sum = 0;\n    int factor4Sum = 0;\n    for (int i = 0;\n    i < S.length (); i ++) {\n        switch (S.charAt (i)) {\n            case 'A' :\n                factor1Sum ++;\n                break;\n            case 'C' :\n                factor2Sum ++;\n                break;\n            case 'G' :\n                factor3Sum ++;\n                break;\n            case 'T' :\n                factor4Sum ++;\n                break;\n            default :\n                break;\n        }\n        factor1 [i] = factor1Sum;\n        factor2 [i] = factor2Sum;\n        factor3 [i] = factor3Sum;\n        factor4 [i] = factor4Sum;\n    }\n    for (int i = 0;\n    i < P.length; i ++) {\n        int start = P [i];\n        int end = Q [i];\n        if (start == 0) {\n            if (factor1 [end] > 0) {\n                result [i] = 1;\n            } else if (factor2 [end] > 0) {\n                result [i] = 2;\n            } else if (factor3 [end] > 0) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        } else {\n            if (factor1 [end] > factor1 [start - 1]) {\n                result [i] = 1;\n            } else if (factor2 [end] > factor2 [start - 1]) {\n                result [i] = 2;\n            } else if (factor3 [end] > factor3 [start - 1]) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        }\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":991,"func":"def solution (S, P, Q): \n    result = [0 for i in range(len(P))] \n    factor1 = [0 for i in range(len(S))] \n    factor2 = [0 for i in range(len(S))] \n    factor3 = [0 for i in range(len(S))]\n    factor4 = [0 for i in range(len(S))]\n    factor1Sum = 0\n    factor2Sum = 0\n    factor3Sum = 0\n    factor4Sum = 0\n    for i in range(len(S)):\n        if S[i] == 'A':\n            factor1Sum += 1\n        if S[i] == 'C':\n            factor2Sum += 1\n        if S[i] == 'G':\n            factor3Sum += 1\n        if S[i] == 'T':\n            factor4Sum += 1\n        factor1[i] = factor1Sum\n        factor2[i] = factor2Sum\n        factor3[i] = factor3Sum\n        factor4[i] = factor4Sum\n    \n    for i in range(len(P)):\n        start = P[i]\n        end = Q[i]\n        if start == 0:\n            if factor1[end] > 0:\n                result[i] = 1\n            elif factor2[end] > 0:\n                result[i] = 2\n            elif factor3[end] > 0:\n                result[i] = 3\n            else: \n                result[i] = 4\n        else:\n            if factor1[end] > factor1[start-1]:\n                result[i] = 1\n            elif factor2[end] > factor2[start-1]:\n                result[i] = 2\n            elif factor3[end] > factor3[start-1]:\n                result[i] = 3\n            else:\n                result[i] = 4\n    return result","lang":"py"}
{"idx":992,"func":" \n        public void onClick (View v) {\n            x_list.clear ();\n            x_list.add (new_al);\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":993,"func":"def on_click(v):\n    x_list.clear()\n    x_list.append(new_al)","lang":"py"}
{"idx":994,"func":" \nprivate static String getProtocol (final File file) {\n    String result;\n    try {\n        result = file.toURI ().toURL ().getProtocol ();\n    } catch (Exception e) {\n        result = \"unknown\";\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":995,"func":"def get_protocol(file):\n    try:\n        result = file.toURI().toURL().getProtocol()\n    except:\n        result = 'unknown'\n    return result","lang":"py"}
{"idx":996,"func":" \npublic static String toHexString (byte [] bytes) {\n    StringBuilder hexString = new StringBuilder ();\n    for (int i = 0;\n    i < bytes.length; i ++) {\n        String hex = Integer.toHexString (0xFF & bytes [i]);\n        if (hex.length () == 1) {\n            hexString.append ('0');\n        }\n        hexString.append (hex);\n    }\n    return hexString.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":997,"func":"def toHexString(bytes):\n    hexString = \"\"\n    for i in range(0,len(bytes)):\n        hex = hex(i & 0xff)[2:]\n        if len(hex) == 1:\n            hexString += '0'\n        hexString += hex\n    return hexString","lang":"py"}
{"idx":998,"func":" \npublic static int [] front11 (int [] a, int [] b) {\n    int alen = (a != null) ? a.length : 0, blen = (b != null) ? b.length : 0;\n    if (alen > 0 && blen > 0) {\n        return new int [] {a [0], b [0]};\n    } else if (alen > 0) {\n        return new int [] {a [0]};\n    } else if (blen > 0) {\n        return new int [] {b [0]};\n    } else {\n        return new int [0];\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":999,"func":"def front11(a, b):\n    if a and b:\n        return [a[0], b[0]]\n    elif a:\n        return [a[0]]\n    elif b:\n        return [b[0]]\n    else:\n        return []","lang":"py"}
{"idx":1000,"func":" \npublic void run () {\n    {\n        System.out.println (\"New Communication Thread Started\");\n        try {\n            PrintWriter out = new PrintWriter (clientSocket.getOutputStream (), true);\n            BufferedReader in = new BufferedReader (new InputStreamReader (clientSocket.getInputStream ()));\n            String inputLine;\n            while ((inputLine = in.readLine ()) != null) {\n                System.out.println (\"Received: \" + inputLine);\n                try {\n                    long pauseCommand = Long.parseLong (inputLine);\n                    pause = pauseCommand;\n                    out.println (\"OK, pausing for \" + inputLine + \" ms\");\n                } catch (NumberFormatException e) {\n                }\n                if (inputLine.equals (\"BYE\")) {\n                    out.println (\"OK, bye!\");\n                    break;\n                }\n                if (inputLine.equals (\"STOP\")) {\n                    out.println (\"OK, stopping!\");\n                    System.exit (1);\n                }\n            }\n            out.close ();\n            in.close ();\n            clientSocket.close ();\n        } catch (IOException e) {\n            System.err.println (\"Problem with Communication Server\");\n            System.exit (1);\n        }\n    }}\n\n\n\n\n\n","lang":"java"}
{"idx":1001,"func":"def run ():\n    print (\"New Communication Thread Started\")\n    try: \n        out = PrintWriter (clientSocket.getOutputStream (), True)\n        in = BufferedReader (InputStreamReader (clientSocket.getInputStream ()))\n        inputLine = in.readLine ()\n        while (inputLine != None): \n            System.out.println (\"Received: \" + inputLine)\n            try: \n                pauseCommand = Long.parseLong (inputLine) \n                pause = pauseCommand \n                out.println (\"OK, pausing for \" + inputLine + \" ms\")\n            except NumberFormatException: \n                pass\n            if (inputLine.equals (\"BYE\")): \n                out.println (\"OK, bye!\")\n                break\n            if (inputLine.equals (\"STOP\")): \n                out.println (\"OK, stopping!\")\n                sys.exit (1) \n        out.close ()\n        in.close ()\n        clientSocket.close ()\n    except IOException: \n        System.err.println (\"Problem with Communication Server\")\n        System.exit (1)","lang":"py"}
{"idx":1002,"func":" \n        public String toString () {\n            return Integer.toString (++ count);\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":1003,"func":"def __str__(self):\n    self.count += 1\n    return str(self.count)","lang":"py"}
{"idx":1004,"func":" \npublic static final int gcd (int a, int b) {\n    if (a == Integer.MIN_VALUE) {\n        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException (\"gcd() is greater than Integer.MAX_VALUE\");\n        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));\n    }\n    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));\n    a = Math.abs (a);\n    b = Math.abs (b);\n    if (a == 0) return b;\n    if (b == 0) return a;\n    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);\n    a>>= factorsOfTwoInA;\n    b>>= factorsOfTwoInB;\n    while (a != b) {\n        if (a > b) {\n            a = (a - b);\n            a>>= Integer.numberOfTrailingZeros (a);\n        } else {\n            b = (b - a);\n            b>>= Integer.numberOfTrailingZeros (b);\n        }\n    }\n    return a << commonFactorsOfTwo;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1005,"func":"def gcd(a, b):\n    if a == int.min:\n        if b == int.min:\n            raise ValueError('gcd exceeded int.max')\n        return 1 << (abs(b)).bit_length()\n    if b == int.min:\n        return 1 << (abs(a)).bit_length()\n    a = abs(a)\n    b = abs(b)\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    factors_of_two_in_a = (a).bit_length() \n    factors_of_two_in_b = (b).bit_length() \n    common_factors_of_two = min(factors_of_two_in_a, factors_of_two_in_b) \n    a = a >> factors_of_two_in_a\n    b = b >> factors_of_two_in_b\n    while(a != b):\n        if a > b:\n            a = a - b \n            a = a >> (a).bit_length()\n        else:\n            b = b - a \n            b = b >> (b).bit_length()\n    return a << common_factors_of_two","lang":"py"}
{"idx":1006,"func":" \npublic static String replace (String oldStr, String newStr, String input) {\n    StringBuilder sb = new StringBuilder ();\n    int i;\n    int prev = 0;\n    while ((i = input.indexOf (oldStr, prev)) >= 0) {\n        sb.append (input.substring (prev, i)).append (newStr);\n        prev = i + oldStr.length ();\n    }\n    sb.append (input.substring (prev));\n    return sb.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1007,"func":"def replace (oldStr, newStr, input): \n    output = \"\" \n    i = 0 \n    while i < len(input): \n        if input[i:i+len(oldStr)] == oldStr: \n            output = output + newStr \n            i = i + len(oldStr) \n        else: \n            output = output + input[i] \n            i = i + 1 \n    return output","lang":"py"}
{"idx":1008,"func":" \npublic static Boolean isAnagram (String word, String anagram_word) {\n    if (word.length () != anagram_word.length ()) {\n        return false;\n    }\n    char [] words_char = word.toCharArray ();\n    char [] anagram_word_char = anagram_word.toCharArray ();\n    int words_char_num = 1;\n    int anagram_word_num = 1;\n    Map < Character, Integer > wordPrimeMap = wordPrimeMap ();\n    for (int i = 0;\n    i < words_char.length; i ++) {\n        words_char_num *= wordPrimeMap.get (words_char [i]);\n    }\n    for (int i = 0;\n    i < anagram_word_char.length; i ++) {\n        anagram_word_num *= wordPrimeMap.get (anagram_word_char [i]);\n    }\n    return anagram_word_num == words_char_num;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1009,"func":"def isAnagram(word, anagram_word):\n    if len(word) != len(anagram_word):\n        return False\n    \n    words_char = list(word)\n    anagram_word_char = list(anagram_word)\n    words_char_num = 1\n    anagram_word_num = 1\n    wordPrimeMap = getWordPrimeMap()\n    \n    for i in range(len(words_char)):\n        words_char_num *= wordPrimeMap.get(words_char[i])\n    for i in range(len(anagram_word_char)):\n        anagram_word_num *= wordPrimeMap.get(anagram_word_char[i])\n    \n    return anagram_word_num == words_char_num","lang":"py"}
{"idx":1010,"func":" \npublic static String shuffle (String text) {\n    char [] characters = text.toCharArray ();\n    for (int i = 0;\n    i < characters.length; i ++) {\n        int randomIndex = (int) (Math.random () * characters.length);\n        char temp = characters [i];\n        characters [i] = characters [randomIndex];\n        characters [randomIndex] = temp;\n    }\n    return new String (characters);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1011,"func":"def shuffle(text): \n  characters = list(text) \n  for i in range(len(characters)): \n    randomIndex = int(random.random() * len(characters)) \n    temp = characters[i] \n    characters[i] = characters[randomIndex] \n    characters[randomIndex] = temp \n  return ''.join(characters)","lang":"py"}
{"idx":1012,"func":" \npublic static void main (String args []) {\n    GSMConnect gsm = new GSMConnect (comPort);\n    if (gsm.init ()) {\n        try {\n            System.out.println (\"Initialization Success\");\n            gsm.connect ();\n            Thread.sleep (5000);\n            gsm.checkStatus ();\n            Thread.sleep (5000);\n            gsm.sendMessage (\"+91XXXXXXXX\", \"Trial Success\");\n            Thread.sleep (1000);\n            gsm.hangup ();\n            Thread.sleep (1000);\n            gsm.closePort ();\n            gsm.outCommand ();\n            System.exit (1);\n        } catch (Exception e) {\n            e.printStackTrace ();\n        }\n    } else {\n        System.out.println (\"Can't init this card\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1013,"func":"def main(args): \n    gsm = GSMConnect(comPort) \n    if gsm.init(): \n        try: \n            print(\"Initialization Success\") \n            gsm.connect() \n            time.sleep(5) \n            gsm.checkStatus() \n            time.sleep(5) \n            gsm.sendMessage(\"+91XXXXXXXX\", \"Trial Success\") \n            time.sleep(1) \n            gsm.hangup() \n            time.sleep(1) \n            gsm.closePort() \n            gsm.outCommand() \n            sys.exit(1) \n        except Exception as e: \n            e.print_stack_trace() \n    else: \n        print(\"Can't init this card\")","lang":"py"}
{"idx":1014,"func":" \npublic static void main (String args []) {\n    int i;\n    int largestSize = 4;\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};\n    int large [] = Arrays.copyOf (array, largestSize);\n    int smallest = large [0];\n    int smallestIndex = 0;\n    for (int j = 1;\n    j < large.length; ++ j) {\n        if (smallest > large [j]) {\n            smallest = large [j];\n            smallestIndex = j;\n        }\n    }\n    for (i = large.length; i < array.length; i ++) {\n        if (smallest < array [i]) {\n            large [smallestIndex] = array [i];\n            smallest = large [0];\n            smallestIndex = 0;\n            for (int j = 1;\n            j < large.length; ++ j) {\n                if (smallest > large [j]) {\n                    smallest = large [j];\n                    smallestIndex = j;\n                }\n            }\n        }\n    }\n    for (int j = 0;\n    j < large.length; j ++) {\n        System.out.println (\"Largest 5 : \" + large [j]);\n    }\n    System.out.println ();\n    System.out.println (\"Largest is: \" + getHighest (large));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1015,"func":"def main (args): \n    largestSize = 4\n    array = [33, 55, 13, 46, 87, 42, 10, 34]\n    large = array.copy()[:largestSize] \n    smallest = large[0] \n    smallestIndex = 0 \n    for j in range(1, len(large)): \n        if (smallest > large[j]): \n            smallest = large[j] \n            smallestIndex = j \n    for i in range(len(large), len(array)): \n        if (smallest < array[i]): \n            large[smallestIndex] = array[i] \n            smallest = large[0] \n            smallestIndex = 0 \n            for j in range(1, len(large)): \n                if (smallest > large[j]): \n                    smallest = large[j] \n                    smallestIndex = j \n    for j in range(0, len(large)): \n        print(\"Largest 5: \", large[j]) \n    print() \n    print(\"Largest is: \", getHighest(large))","lang":"py"}
{"idx":1016,"func":" \nprivate String capitalize (String s) {\n    if (s == null || s.length () == 0) {\n        return \"\";\n    }\n    char first = s.charAt (0);\n    if (Character.isUpperCase (first)) {\n        return s;\n    } else {\n        return Character.toUpperCase (first) + s.substring (1);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1017,"func":"def capitalize(s):\n    if (s is None or len(s) == 0):\n        return \"\"\n    first = s[0]\n    if (first.isupper()):\n        return s\n    else:\n        return first.upper() + s[1:]","lang":"py"}
{"idx":1018,"func":" \npublic void authenticate (String username, String host, String password) throws IOException, XMPPException {\n    authenticationId = username;\n    this.password = password;\n    hostname = host;\n    String mechanisms [] = {getName ()};\n    java.util.Map props = new HashMap ();\n    sc = Sasl.createSaslClient (mechanisms, null, \"xmpp\", host, props, this);\n    super.authenticate ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1019,"func":"def authenticate (username, host, password):\n    authenticationId = username\n    this.password = password\n    hostname = host\n    mechanisms = [getName ()]\n    props = {}\n    sc = Sasl.createSaslClient (mechanisms, None, \"xmpp\", host, props, this)\n    super().authenticate ()","lang":"py"}
{"idx":1020,"func":" \npublic static void main (String [] args) {\n    long a = 5;\n    long b = 4;\n    String theExpression = \"a * b\";\n    JexlEngine jexl = new JexlEngine ();\n    Expression e = jexl.createExpression (theExpression);\n    JexlContext context = new MapContext ();\n    context.set (\"a\", a);\n    context.set (\"b\", b);\n    Long result = (Long) e.evaluate (context);\n    System.out.println (\"The answer : \" + result);\n}","lang":"java"}
{"idx":1021,"func":"a = 5\nb = 4\n","lang":"py"}
{"idx":1022,"func":" \npublic static void main (String [] args) throws ParseException {\n    String month = \"08\";\n    String day = \"05\";\n    String year = \"2015\";\n    String inputDateStr = String.format (\"%s\/%s\/%s\", day, month, year);\n    Date inputDate = new SimpleDateFormat (\"dd\/MM\/yyyy\").parse (inputDateStr);\n    Calendar calendar = Calendar.getInstance ();\n    calendar.setTime (inputDate);\n    String dayOfWeek = calendar.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();\n    System.out.println (dayOfWeek);\n}","lang":"java"}
{"idx":1023,"func":"month = \"08\"\nday = \"05\"\nyear = \"2015\"\ninputDateStr = \"{}\/{}\/{}\".format(day, month, year)\ninputDate = datetime.strptime(inputDateStr, \"%d\/%m\/%Y\")\ndayOfWeek = inputDate.strftime(\"%A\").upper()\nprint(dayOfWeek)\n","lang":"py"}
{"idx":1024,"func":" \nstatic String shuffle (String text) {\n    if (text.length () <= 1) return text;\n    int split = text.length () \/ 2;\n    String temp1 = shuffle (text.substring (0, split));\n    String temp2 = shuffle (text.substring (split));\n    if (Math.random () > 0.5) return temp1 + temp2;\n    else return temp2 + temp1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1025,"func":"def shuffle(text):\n    if len(text) <= 1:\n        return text \n    split = len(text) \/\/ 2\n    \n    temp1 = shuffle(text[:split])\n    temp2 = shuffle(text[split:])\n    if random.random() > 0.5:\n        return temp1 + temp2\n    else:\n        return temp2 + temp1","lang":"py"}
{"idx":1026,"func":" \npublic void onRequestPermissionsResult (int requestCode,@NonNull\nString [] permissions,@NonNull\nint [] grantResults) {\n    int index = (requestCode>> 16) & 0xffff;\n    if (index != 0) {\n        index --;\n        String who = mPendingFragmentActivityResults.get (index);\n        mPendingFragmentActivityResults.remove (index);\n        if (who == null) {\n            Log.w (TAG, \"Activity result delivered for unknown Fragment.\");\n            return;\n        }\n        Fragment frag = mFragments.findFragmentByWho (who);\n        if (frag == null) {\n            Log.w (TAG, \"Activity result no fragment exists for who: \" + who);\n        } else {\n            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1027,"func":"def onRequestPermissionsResult (self, requestCode, permissions, grantResults):\n    index = (requestCode token 16) and 0xffff\n    if index != 0:\n        index - = 1\n        who = mPendingFragmentActivityResults.get (index)\n        mPendingFragmentActivityResults.remove (index)\n        if who == None:\n            print ('Activity result delivered for unknown Fragment.')\n            return\n        frag = mFragments.findFragmentByWho (who)\n        if frag == None:\n            print ('Activity result no fragment exists for who: ' + who)\n        else:\n            frag.onRequestPermissionsResult (requestCode and 0xffff, permissions, grantResults)","lang":"py"}
{"idx":1028,"func":" \npublic void start (Stage primaryStage) {\n    final HTMLEditor htmlEditor = new HTMLEditor ();\n    primaryStage.setScene (new Scene (htmlEditor));\n    primaryStage.show ();\n    for (Node toolBar = htmlEditor.lookup (\".tool-bar\");\n    toolBar != null; toolBar = htmlEditor.lookup (\".tool-bar\")) {\n        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1029,"func":"def start (primaryStage):\n    htmlEditor = HTMLEditor ()\n    primaryStage.setScene (Scene (htmlEditor))\n    primaryStage.show ()\n    while (htmlEditor.lookup (\".tool-bar\") != None):\n        toolBar = htmlEditor.lookup (\".tool-bar\")\n        toolBar.getParent ().getChildren ().remove (toolBar)","lang":"py"}
{"idx":1030,"func":" \n        public int read () throws IOException {\n            return byteArrayInputStream.read ();\n        }}\n    ;\n\n\n\n\n","lang":"java"}
{"idx":1031,"func":"def read():\n  try:\n    return byteArrayInputStream.read()\n  except IOException:\n    print('IOException occurred')","lang":"py"}
{"idx":1032,"func":" \npublic int hashCode () {\n    int hashCode = 1;\n    Iterator i = iterator ();\n    while (i.hasNext ()) {\n        Object obj = i.next ();\n        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());\n    }\n    return hashCode;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1033,"func":"def hashCode(self): \n    hashCode = 1\n    for obj in self:\n        if obj == None:\n            obj_hashCode = 0\n        else:\n            obj_hashCode = obj.hashCode()\n        hashCode = 31 * hashCode + obj_hashCode\n    return hashCode","lang":"py"}
{"idx":1034,"func":" \npublic int solution (int X, int [] A) {\n    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1035,"func":"def solution(X, A):\n    size = len(A)\n    check = [0] * X\n    cmp = 0\n    time = -1\n    for x in range(size):\n        temp = A[x]\n        if temp <= X:\n            if check[temp - 1] > 0:\n                continue\n            check[temp - 1] += 1\n            cmp += 1\n\n        if cmp == X:\n            time = x\n            break;\n    return time","lang":"py"}
{"idx":1036,"func":" \npublic static void main (String [] args) {\n    String word = \"a b c\";\n    int i = 0, spaceCount = 0;\n    while (i < word.length ()) {\n        if (word.charAt (i) == ' ') {\n            spaceCount ++;\n        }\n        i ++;\n    }\n    System.out.println (\"Spaces in string: \" + spaceCount);\n}","lang":"java"}
{"idx":1037,"func":"word = \"a b c\"\nspaceCount = 0\nfor character in word:\n  if character == ' ':\n    spaceCount += 1\nprint (\"Spaces in string: \", spaceCount)\n","lang":"py"}
{"idx":1038,"func":" \n            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));\n                if (dstFile.exists ()) return FileVisitResult.CONTINUE;\n                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();\n                Files.copy (file, dstFile.toPath ());\n                return FileVisitResult.CONTINUE;\n            }}\n        );\n    } catch (IOException e) {\n        return;\n    }\n    return;\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1039,"func":"def visitFile(file, attrs):\n    strAbsPathDest = ' '\n    strAbsPathSrc = ' '\n    dstFile = File(strAbsPathDest + file.toAbsolutePath().toString().substring(strAbsPathSrc.length()))\n    if (dstFile.exists()):\n        return FileVisitResult.CONTINUE\n    if not (dstFile.getParentFile().exists()):\n        dstFile.getParentFile().mkdirs()\n    Files.copy(file, dstFile.toPath())\n    return FileVisitResult.CONTINUE","lang":"py"}
{"idx":1040,"func":" \npublic static String validName (Scanner input, Scanner histogram) {\n    String user = \"\";\n    String name = input.next ();\n    if (histogram.findInLine (name) != null) {\n        System.out.println (\"This name exist\");\n    } else {\n        System.out.println (\"Name not found\");\n        user = validName (input, histogram);\n    }\n    return user;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1041,"func":"def validName(input, histogram): \n    user = \"\"\n    name = input.next() \n    if(histogram.findInLine(name) != None): \n        print(\"This name exists\") \n    else: \n        print(\"Name not found\") \n        user = validName(input, histogram) \n    return user","lang":"py"}
{"idx":1042,"func":" \n        public void run () {\n            WhiteSpace ws = new WhiteSpace ();\n            Container gui = ws.getGui ();\n            JFrame f = new JFrame (\"White (OK Red) Space\");\n            f.add (gui);\n            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);\n            f.setLocationByPlatform (true);\n            f.setResizable (false);\n            f.pack ();\n            f.setVisible (true);\n        }}\n    ;\n\n\n\n\n","lang":"java"}
{"idx":1043,"func":"def run():\n    ws = WhiteSpace()\n    gui = ws.getGui()\n    f = tk.Tk()\n    f.title(\"White (OK Red) Space\")\n    f.resizable(False, False)\n    f.geometry('400x200')\n    f.config(padx=100, pady=100)\n    f.pack_propagate(0)\n    f.config(menu=gui)\n    f.mainloop()","lang":"py"}
{"idx":1044,"func":" \npublic static void main (String args []) {\n    int i;\n    int largestSize = 4;\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};\n    int large [] = Arrays.copyOf (array, largestSize);\n    int smallest = large [0];\n    int smallestIndex = 0;\n    for (int j = 1;\n    j < large.length; ++ j) {\n        if (smallest > large [j]) {\n            smallest = large [j];\n            smallestIndex = j;\n        }\n    }\n    for (i = large.length; i < array.length; i ++) {\n        if (smallest < array [i]) {\n            large [smallestIndex] = array [i];\n            smallest = large [0];\n            smallestIndex = 0;\n            for (int j = 1;\n            j < large.length; ++ j) {\n                if (smallest > large [j]) {\n                    smallest = large [j];\n                    smallestIndex = j;\n                }\n            }\n        }\n    }\n    for (int j = 0;\n    j < large.length; j ++) {\n        System.out.println (\"Largest 5 : \" + large [j]);\n    }\n    System.out.println ();\n    System.out.println (\"Largest is: \" + getHighest (large));\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1045,"func":"def main (args): \n    largestSize = 4\n    array = [33, 55, 13, 46, 87, 42, 10, 34]\n    large = array[0:largestSize]\n    smallest = large[0]\n    smallestIndex = 0\n    for i in range(1, len(large)):\n        if (smallest > large[i]):\n            smallest = large[i]\n            smallestIndex = i\n\n    for i in range(len(large), len(array)):\n        if (smallest < array[i]):\n            large[smallestIndex] = array[i]\n            smallest = large[0]\n            smallestIndex = 0\n            for j in range(1, len(large)):\n                if (smallest > large[j]):\n                    smallest = large[j]\n                    smallestIndex = j\n\n\n    for j in range(0, len(large)):\n        print (\"Largest 5 : \" + str(large[j]))\n    print \"\"\n    print (\"Largest is: \" + str(getHighest(large)))","lang":"py"}
{"idx":1046,"func":" \npublic static void main (String [] args) {\n    String name = \"AnuvratAnuvra\";\n    char [] arr = name.toCharArray ();\n    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();\n    for (char val : arr) {\n        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);\n    }\n    for (Entry < Character, Integer > entry : map.entrySet ()) {\n        if (entry.getValue () > 1) {\n            Character key = entry.getKey ();\n            Object value = entry.getValue ();\n            System.out.println (key + \":\" + value);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1047,"func":"def main(): \n    name = \"AnuvratAnuvra\"\n    arr = list(name) \n    map = {} \n      \n    for ch in arr: \n        if ch in map: map[ch] = map[ch] + 1\n        else : map[ch] = 1\n    for key, value in map.items(): \n        if value > 1: \n            print(key,\":\", value) \n  \nif __name__ == \"__main__\": \n    main()","lang":"py"}
{"idx":1048,"func":" \n        public void actionPerformed (ActionEvent e) {\n            dialog.dispose ();\n        }}\n    );\n\n\n\n\n\n","lang":"java"}
{"idx":1049,"func":"def actionPerformed(e):\n    dialog.destroy()","lang":"py"}
{"idx":1050,"func":" \n            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));\n                if (dstFile.exists ()) return FileVisitResult.CONTINUE;\n                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();\n                Files.copy (file, dstFile.toPath ());\n                return FileVisitResult.CONTINUE;\n            }}\n        );\n    } catch (IOException e) {\n        return;\n    }\n    return;\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1051,"func":"def visit_file(file, attrs):\n    str_abs_path_dest = '...' # replace ... with destination\n    str_abs_path_src = '...' # replace ... with source\n    \n    dst_file = File(str_abs_path_dest + file.to_absolute_path().string_substring(str_abs_path_src.length()))\n    \n    if dst_file.exists():\n        return FileVisitResult.CONTINUE\n    else:\n        if not dst_file.get_parent_file().exists():\n            dst_file.get_parent_file().mkdirs()\n\n        Files.copy(file, dst_file.to_path())\n        return FileVisitResult.CONTINUE","lang":"py"}
{"idx":1052,"func":" \npublic void run () {\n    Object o = object;\n    for (;;) {\n        try {\n            sleep (Long.MAX_VALUE);\n        } catch (InterruptedException e) {\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1053,"func":"def run(self):\n    o = object\n    while True:\n        try:\n            time.sleep(sys.maxint)\n        except InterruptedException as e:\n            pass","lang":"py"}
{"idx":1054,"func":" \npublic static void printTable (String [] countries, int [] populations) {\n    int defaultLength = 10;\n    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);\n    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);\n    for (int i = 0;\n    i < countries.length; i ++) {\n        System.out.format (\"%-\" + maxCountryLength + \"s | %\" + maxPopulationLength + \"d\\n\", countries [i], populations [i]);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1055,"func":"def printTable(countries, populations):\n     defaultLength = 10\n     maxCountryLength = max([len(c) for c in countries], default = defaultLength)\n     maxPopulationLength = max([len(str(p)) for p in populations], default = defaultLength)\n     for i in range(len(countries)):\n       print(f\"{countries[i]:-<{maxCountryLength}} | {populations[i]: >{maxPopulationLength}}\")","lang":"py"}
{"idx":1056,"func":" \npublic static void main (String [] args) {\n    Random ran = new Random ();\n    int min, max;\n    Scanner sc = new Scanner (System.in);\n    System.out.println (\"Enter min range:\");\n    min = sc.nextInt ();\n    System.out.println (\"Enter max range:\");\n    max = sc.nextInt ();\n    int num = ran.nextInt (min);\n    int num1 = ran.nextInt (max);\n    System.out.println (\"Random Number between given range is \" + num1);\n}","lang":"java"}
{"idx":1057,"func":"import random\nmin_num = input(\"Enter min range:\")\nmax_num = input(\"Enter max range:\")\nnum = random.randint(int(min_num),int(max_num))\nprint (\"Random Number between given range is \" + str(num))\n","lang":"py"}
{"idx":1058,"func":" \n        public boolean accept (File pathname) {\n            if (pathname.isDirectory ()) {\n                pathname.listFiles (this);\n                pathname.delete ();\n            } else {\n                pathname.delete ();\n            }\n            return false;\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":1059,"func":"def accept(pathname):\n    if pathname.is_dir():\n        for file in pathname.iterdir():\n            accept(file)\n        pathname.rmdir()\n    else:\n        pathname.unlink()\n    return False","lang":"py"}
{"idx":1060,"func":" \npublic static String merge (String...strings) {\n    int maxLength = 0;\n    StringBuilder sb = new StringBuilder ();\n    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();\n    for (int i = 0;\n    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1061,"func":"def merge(*strings): \n    max_length = 0 \n    sb = \"\" \n    for s in strings: \n        if len(s) > max_length: \n            max_length = len(s) \n    for i in range(max_length): \n        for s in strings: \n            if len(s) > i: \n                sb += s[i]\n    return sb","lang":"py"}
{"idx":1062,"func":" \n        public void run () {\n            try {\n                printThreads (\"Daemon Thread printing\");\n                Thread.sleep (10000);\n            } catch (Exception e) {\n            } finally {\n                System.out.println (\"finally\");\n            }\n        }}\n    ;\n\n\n\n\n","lang":"java"}
{"idx":1063,"func":"def run(): \n  try:\n    print(\"Daemon Thread printing\")\n    time.sleep(10000)\n  except Exception as e:\n    pass\n  finally:\n    print(\"finally\")","lang":"py"}
{"idx":1064,"func":" \npublic static void main (String [] args) {\n    List < String > keywords = Arrays.asList (\"Apple\", \"Ananas\", \"Mango\", \"Banana\", \"Beer\");\n    Map < Character, List < String > > result = new HashMap < Character, List < String > > ();\n    for (String k : keywords) {\n        char firstChar = k.charAt (0);\n        if (! result.containsKey (firstChar)) {\n            result.put (firstChar, new ArrayList < String > ());\n        }\n        result.get (firstChar).add (k);\n    }\n    for (List < String > list : result.values ()) {\n        Collections.sort (list);\n    }\n    System.out.println (result);\n}","lang":"java"}
{"idx":1065,"func":"keywords = [\"Apple\", \"Ananas\", \"Mango\", \"Banana\", \"Beer\"]\nresult = {}\nfor k in keywords:\n  first_char = k[0]\n  if first_char not in result:\n    result[first_char] = []\n  result[first_char].append(k)\nfor k in result:\n  result[k].sort()\nprint(result)\n","lang":"py"}
{"idx":1066,"func":" \nprivate void transform (HSSFRow rowOld, XSSFRow rowNew) {\n    XSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    if (rowOld.getRowStyle () != null) {\n        Integer hash = rowOld.getRowStyle ().hashCode ();\n        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());\n        rowNew.setRowStyle (this.styleMap.get (hash));\n    }\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1067,"func":"def transform (rowOld, rowNew): \n    rowNew.set_height (rowOld.get_height ())\n    if rowOld.get_row_style () != None: \n        hash = rowOld.get_row_style ().hash_code () \n        if not style_map.contains_key (hash):\n            transform (hash, rowOld.get_row_style (), workbookNew.create_cell_style ())\n        rowNew.set_row_style (style_map.get (hash))\n    for cell in rowOld: \n        cellNew = rowNew.create_cell (cell.get_column_index (), cell.get_cell_type ())\n        if cellNew != None:\n            transform (cell, cellNew)\n    last_column = max (last_column, rowOld.get_last_cell_num ())","lang":"py"}
{"idx":1068,"func":" \nstatic int [] createArray (int size) {\n    int [] result = new int [size];\n    int limit = (size + 1) \/ 2;\n    int start = 0, value = 0, idx = 0;\n    do {\n        for (int i = start;\n        i < start + limit && idx < size; ++ i) result [idx ++] = value;\n        start += limit;\n        limit = (limit + 1) \/ 2;\n        ++ value;\n    } while (idx < size);\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1069,"func":"def create_array(size):\n    result = [0] * size\n    limit = (size + 1) \/\/ 2\n    start = 0\n    value = 0\n    idx = 0\n    while idx < size:\n        for i in range(start, start + limit):\n            if idx >= size:\n                break\n            result[idx] = value\n            idx += 1\n        start += limit\n        limit = (limit + 1) \/\/ 2\n        value += 1\n    return result","lang":"py"}
{"idx":1070,"func":" \nprivate void addPersonButtonActionPerformed (java.awt.event.ActionEvent evt) {\n    String firstName = firstNameTextField.getText ();\n    String lastName = lastNameTextField.getText ();\n    String emailAddress = emailTextField.getText ();\n    boolean valid = true;\n    if (firstName.equals (\"\")) {\n        System.out.println (\"First Name is missing\");\n        valid = false;\n    }\n    if (lastName.equals (\"\")) {\n        System.out.println (\"Last Name is missing\");\n        valid = false;\n    }\n    if (emailAddress.equals (\"\")) {\n        System.out.println (\"E-Mail address is missing\");\n        valid = false;\n    }\n    if (! Email.isValid (emailAddress)) {\n        System.out.println (\"E-Mail address is invalid\");\n        valid = false;\n    }\n    if (valid) {\n        personArrayList.add (new Person (firstName, lastName, emailAddress));\n        System.out.println (\"Person added!\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1071,"func":"def addPersonButtonActionPerformed(evt):\n    firstName = firstNameTextField.getText()\n    lastName = lastNameTextField.getText()\n    emailAddress = emailTextField.getText()\n    valid = True\n    if firstName == \"\":\n        print(\"First Name is missing\")\n        valid = False\n    if lastName == \"\":\n        print(\"Last Name is missing\")\n        valid = False\n    if emailAddress == \"\":\n        print(\"E-Mail address is missing\")\n        valid = False\n    if not Email.isValid(emailAddress):\n        print(\"E-Mail address is invalid\")\n        valid = False\n    if valid:\n        personArrayList.add(Person(firstName, lastName, emailAddress))\n        print(\"Person added!\")","lang":"py"}
{"idx":1072,"func":" \npublic void filter (String [] words, String text) {\n    for (int i = 0;\n    i < words.length; i ++) {\n        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {\n            System.out.println (text);\n            break;\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1073,"func":"def filter(words, text):\n    for i in range(len(words)):\n        if text.lower().find(words[i].lower()) != -1:\n            print(text)\n            break","lang":"py"}
{"idx":1074,"func":" \n        public String toString () {\n            return Integer.toString (++ count);\n        }}\n    );","lang":"java"}
{"idx":1075,"func":"","lang":"py"}
{"idx":1076,"func":" \npublic static void main (String [] args) {\n    Scanner sc = new Scanner (System.in);\n    String [] [] array = new String [7] [];\n    array [0] = new String [] {\"continents\", \"Asia\", \"Europe\", \"Africa\", \"Australia\", \"South America\", \"North America\"};\n    array [1] = new String [] {\"profession\", \"teacher\", \"doctor\", \"lawyer\"};\n    array [2] = new String [] {\"brand\", \"apple\", \"samsung\"};\n    array [3] = new String [] {\"name\", \"lisa\", \"peter\", \"sam\", \"jack\"};\n    array [4] = new String [] {\"profession\", \"engineer\", \"Professor\", \"Dentist\", \"Driver\"};\n    array [5] = new String [] {\"sex\", \"value\", \"male\", \"female\"};\n    array [6] = new String [] {\"exp\", \"value\", \"1\", \"2\", \"3\", \"4\"};\n    int index = sc.nextInt ();\n    String [] tempReference = array [index - 1];\n    for (int i = index - 1;\n    i < array.length - 1; i ++) {\n        array [i] = array [i + 1];\n    }\n    array [array.length - 1] = tempReference;\n    for (String [] tempArray : array) {\n        for (String s : tempArray) {\n            System.out.print (s + \" \");\n        }\n        System.out.println ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1077,"func":"def main(args): \n    sc = input() \n\n    array = [['continents', 'Asia', 'Europe', 'Africa', 'Australia', 'South America', 'North America'], \n             ['profession', 'teacher', 'doctor', 'lawyer'], \n             ['brand', 'apple', 'samsung'], \n             ['name', 'lisa', 'peter', 'sam', 'jack'], \n             ['profession', 'engineer', 'Professor', 'Dentist', 'Driver'], \n             ['sex', 'value', 'male', 'female'], \n             ['exp', 'value', '1', '2', '3', '4']]\n    \n    index = int(sc)\n    tempReference = array[index - 1]\n\n    for i in range(index - 1, len(array) - 1):\n        array[i] = array[i+1]\n\n    array[len(array) - 1] = tempReference\n\n    for tempArray in array:\n        for s in tempArray:\n            print(s + ' ', end='')\n        print()","lang":"py"}
{"idx":1078,"func":" \npublic static void main (String args []) {\n    JSch jsch = new JSch ();\n    Session session = null;\n    try {\n        session = jsch.getSession (\"username\", \"127.0.0.1\", 22);\n        session.setConfig (\"StrictHostKeyChecking\", \"no\");\n        session.setPassword (\"password\");\n        session.connect ();\n        Channel channel = session.openChannel (\"sftp\");\n        channel.connect ();\n        ChannelSftp sftpChannel = (ChannelSftp) channel;\n        sftpChannel.get (\"remotefile.txt\", \"localfile.txt\");\n        sftpChannel.exit ();\n        session.disconnect ();\n    } catch (JSchException e) {\n        e.printStackTrace ();\n    } catch (SftpException e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":1079,"func":"import pysftp\nwith pysftp.Connection('127.0.0.1', username='username', password='password') as sftp:\n    sftp.get('remotefile.txt', 'localfile.txt')\n","lang":"py"}
{"idx":1080,"func":" \nprivate void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {\n    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1081,"func":"def transform(workbookOld, workbookNew, cellOld, cellNew):\n    cellNew.setCellComment(cellOld.getCellComment())\n    cell_hash = cellOld.getCellStyle().__hash__()\n    \n    if not cell_style_map.__contains__(cell_hash):\n        transform(workbookOld, workbookNew, cell_hash, cellOld.getCellStyle(), workbookNew.createCellStyle())\n\n    cellNew.setCellStyle(cell_style_map.get(cell_hash))\n\n    cell_type = cellOld.getCellType()\n    if cell_type == cells.CELL_TYPE_BLANK:\n        pass\n    elif cell_type == cells.CELL_TYPE_BOOLEAN:\n        cellNew.setCellValue(cellOld.getBooleanCellValue())\n    elif cell_type == cells.CELL_TYPE_ERROR:\n        cellNew.setCellValue(cellOld.getErrorCellValue())\n    elif cell_type == cells.CELL_TYPE_FORMULA:\n        cellNew.setCellValue(cellOld.getCellFormula())\n    elif cell_type == cells.CELL_TYPE_NUMERIC:\n        cellNew.setCellValue(cellOld.getNumericCellValue())\n    elif cell_type == cells.CELL_TYPE_STRING:\n        cellNew.setCellValue(cellOld.getStringCellValue())\n    else:\n        print(\"transform: Unbekannter Zellentyp \"+ str(cellOld.getCellType()))","lang":"py"}
{"idx":1082,"func":" \npublic static final void main (String...aArgs) {\n    log (\"Generating 10 random integers in range 1..10.\");\n    int START = 1;\n    int END = 10;\n    Random randomGenerator = new Random ();\n    for (int idx = 1;\n    idx <= 10; ++ idx) {\n        showRandomInteger (START, END, randomGenerator);\n    }\n    log (\"Done\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1083,"func":"def main(aArgs=[]):\n    print(\"Generating 10 random integers in range 1..10.\")\n    START = 1\n    END = 10\n    randomGenerator = random.Random()\n    for idx in range(1, 11):\n        showRandomInteger(START, END, randomGenerator)\n    print(\"Done\")","lang":"py"}
{"idx":1084,"func":" \nprivate static String merge (String...strings) {\n    StringBuilder sb = new StringBuilder ();\n    int adv;\n    boolean edited;\n    adv = 0;\n    edited = true;\n    while (edited) {\n        edited = false;\n        for (String s : strings) {\n            if (adv < s.length ()) {\n                sb.append (s.charAt (adv));\n                edited = true;\n            }\n        }\n        adv ++;\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1085,"func":"def merge(*strings):\n    sb = \"\"\n    adv = 0\n    edited = True\n    while edited:\n        edited = False\n        for s in strings:\n            if adv < len(s):\n                sb += s[adv]\n                edited = True\n        adv += 1\n    return sb","lang":"py"}
{"idx":1086,"func":" \n        public void run () {\n            System.out.println (++ n);\n        }}\n    ;\n\n\n\n\n","lang":"java"}
{"idx":1087,"func":"def run(n):\n    print(n + 1)","lang":"py"}
{"idx":1088,"func":" \npublic void run () {\n    for (int i = 0;\n    i < sayThisManyTimes; i ++) {\n        while (! saidHello.get ()) {\n        }\n        System.out.println (\"World!\");\n        saidHello.set (false);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1089,"func":"def run(sayThisManyTimes): \n  for i in range(sayThisManyTimes): \n    while not saidHello.get(): \n      pass\n    print(\"World!\")\n    saidHello.set(False)","lang":"py"}
{"idx":1090,"func":" \npublic static int binarySearch (int intToSearch, int [] sortedArray) {\n    int lower = 0;\n    int upper = sortedArray.length - 1;\n    while (lower <= upper) {\n        int mid = lower + (upper - lower) \/ 2;\n        if (intToSearch < sortedArray [mid]) upper = mid - 1;\n        else if (intToSearch > sortedArray [mid]) lower = mid + 1;\n        else return mid;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1091,"func":"def binary_search(int_to_search, sorted_array):\n  lower = 0\n  upper = len(sorted_array) - 1\n  while lower <= upper:\n    mid = lower + (upper - lower) \/\/ 2\n    if int_to_search < sorted_array[mid]:\n      upper = mid - 1\n    elif int_to_search > sorted_array[mid]:\n      lower = mid + 1\n    else:\n      return mid\n  return -1","lang":"py"}
{"idx":1092,"func":" \nstatic boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) return false;\n    int n = s1.length ();\n    int [] charMap = new int [256];\n    for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1093,"func":"def isAnagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    chars = [0] * 256\n    for i in range(len(s1)): \n        c1 = ord(s1[i])\n        c2 = ord(s2[i])\n        chars[c1] += 1\n        chars[c2] -= 1\n    for char in chars: \n        if char != 0:\n            return False \n    return True","lang":"py"}
{"idx":1094,"func":" \npublic static void main (String [] args) {\n    Random r = new Random ();\n    int dims = 1 + r.nextInt (3);\n    int [] sizes = new int [dims];\n    for (int i = 0;\n    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);\n    System.out.println (\"Creating array with dimensions \/ sizes: \" + Arrays.toString (sizes).replaceAll (\", \", \"][\"));\n    Object multiDimArray = Array.newInstance (String.class, sizes);\n    fillWithSomeValues (multiDimArray, \"pos \", sizes);\n    System.out.println (Arrays.deepToString ((Object []) multiDimArray));\n}\n\n\n\n\n\nimport random\n\n","lang":"java"}
{"idx":1095,"func":"def main():\n    r = random.Random()\n    dims = 1 + r.randint(3)\n    sizes = [1 + r.randint(3) for _ in range(dims)]\n    print(\"Creating array with dimensions \/ sizes: \", [str(x) for x in sizes])\n    multi_dim_array = [['' for j in range(sizes[1])] for i in range(sizes[0])]\n    fill_with_some_values(multi_dim_array, 'pos ', sizes)\n    print(multi_dim_array)\ndef fill_with_some_values(multi_dim_array, prefix, sizes):\n    if len(sizes) == 1:\n        for i in range(sizes[0]):\n            multi_dim_array[i] = prefix + str(i)\n    else:\n        for i in range(sizes[0]):\n            fill_with_some_values(multi_dim_array[i], prefix +str(i), sizes[1:])\n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":1096,"func":" \npublic static void main (String [] args) throws FileNotFoundException {\n    String s = \"this is line one\\n\" + \"this is line two\\n\" + \"This is line three\";\n    Pattern p = Pattern.compile (\"this\");\n    Scanner scanner = new Scanner (s);\n    while (scanner.hasNextLine ()) {\n        String line = scanner.nextLine ();\n        Matcher m = p.matcher (line);\n        if (m.find ()) {\n            System.out.println (line);\n        }\n    }\n}","lang":"java"}
{"idx":1097,"func":"s = \"this is line one\\nthis is line two\\nThis is line three\"\np = re.compile(\"this\")\nfor line in s.splitlines():\n    if (re.search(p, line)):\n        print(line)\n","lang":"py"}
{"idx":1098,"func":" \n        public Void call () {\n            gameGUI.indicateDiceRoll (diceRoll);\n            int newIndex = getPlayerIndexAfterRoll (diceRoll);\n            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);\n            if (moveScheduledFuture != null) {\n                moveScheduledFuture.get ();\n            }\n            System.out.println (\"change turns\");\n            swapTurns ();\n            System.out.println (isComputerTurn ());\n            gameGUI.updateCurrentTurnLabel ();\n            if (newIndex == GameBoard.WIN_POINT) {\n                boolean restartGame = gameBoard.playAgainOrExit ();\n                if (restartGame) {\n                    Player winner = gameBoard.getCurrentPlayer ();\n                    gameGUI.updateScore (winner);\n                    gameGUI.playAgain ();\n                } else {\n                    System.exit (0);\n                }\n            }\n            return null;\n        }}\n\n\n\n\n","lang":"java"}
{"idx":1099,"func":"def call():\n    game_GUI.indicate_dice_roll(dice_roll)\n    new_index = get_player_index_after_roll(dice_roll)\n    move_scheduled_future = move(new_index)\n    \n    if (move_scheduled_future != None):\n        move_scheduled_future.get()\n\n    print(\"change turns\")\n    swap_turns()\n    print(is_computer_turn())\n    game_GUI.update_current_turn_label()\n\n    if (new_index == Game_Board.WIN_POINT):\n        restart_game = game_board.play_again_or_exit()\n        \n        if (restart_game):\n            winner = game_board.get_current_player()\n            game_GUI.update_score(winner)\n            game_GUI.play_again()\n        else:\n            sys.exit(0)","lang":"py"}
{"idx":1100,"func":" \n        void go () {\n            acquireUninterruptibly ();\n            System.err.println (max - availablePermits ());\n            go ();\n        }}\n    .go ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1101,"func":"def go():\n    acquireUninterruptibly()\n    print(max-availablePermits())\n    go()\ngo()","lang":"py"}
{"idx":1102,"func":" \npublic static void main (String...a) {\n    System.out.print (\"Enter the String\");\n    Scanner sc = new Scanner (System.in);\n    String st = sc.nextLine ();\n    int [] ar = new int [256];\n    for (int i = 0;\n    i < st.length (); i ++) {\n        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        char ch = (char) i;\n        if (ar [i] > 0) {\n            if (ar [i] == 1) {\n                System.out.print (ch);\n            } else {\n                System.out.print (ch + \"\" + ar [i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1103,"func":"def main():\n    print(\"Enter the String\")\n    st = input()\n    ar = [0] * 256\n    for i in range(len(st)):\n        ar[ord(st[i])] += 1\n    for i in range(256):\n        if ar[i] > 0:\n            if ar[i] == 1:\n                print(chr(i))\n            else:\n                print(chr(i) + str(ar[i]))","lang":"py"}
{"idx":1104,"func":" \npublic static void main (String [] args) {\n    State s = new State ();\n    Thread t1 = new Thread (new T1 (s));\n    Thread t2 = new Thread (new T2 (s));\n    Thread t3 = new Thread (new T3 (s));\n    t1.start ();\n    t2.start ();\n    t3.start ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1105,"func":"def main(): \n    s = State() \n    t1 = threading.Thread(target=T1, args=(s,)) \n    t2 = threading.Thread(target=T2, args=(s,)) \n    t3 = threading.Thread(target=T3, args=(s,)) \n    t1.start() \n    t2.start() \n    t3.start()","lang":"py"}
{"idx":1106,"func":" \npublic static String sequenceNums (int [] nums) {\n    StringBuilder sb = new StringBuilder ();\n    int rangeStart = nums [0];\n    int previous = nums [0];\n    int current;\n    int expected = previous + 1;\n    for (int i = 1;\n    i < nums.length; i ++) {\n        current = nums [i];\n        expected = previous + 1;\n        if (current != expected || i == (nums.length - 1)) {\n            if (current == rangeStart) {\n                sb.append (previous + \",\");\n            } else {\n                if (rangeStart != previous) {\n                    if (i == nums.length - 1) sb.append (rangeStart + \"-\" + current);\n                    else sb.append (rangeStart + \"-\" + previous + \",\");\n                } else {\n                    if (i == nums.length - 1) sb.append (rangeStart + \",\" + current);\n                    else sb.append (rangeStart + \",\");\n                }\n            }\n            rangeStart = current;\n        }\n        previous = current;\n    }\n    if (sb.charAt (sb.length () - 1) == ',') {\n        sb.deleteCharAt (sb.length () - 1);\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1107,"func":"def sequenceNums (nums):\n  sb = \"\"\n  rangeStart = nums [0]\n  previous = nums [0]\n  current = 0\n  expected = previous + 1\n  for i in range(1, len(nums)):\n    current = nums[i]\n    expected = previous + 1\n    if (i == len(nums) - 1) and (current != expected):\n      sb += f\"{rangeStart}-{current}\"\n    elif (current != expected):\n      if (rangeStart != previous):\n        sb += f\"{rangeStart}-{previous},\"\n      else:\n        sb += f\"{rangeStart},\"\n      rangeStart = current\n    else:\n      previous = current\n  if (sb[-1] == ','):\n    sb = sb[:-1]\n\n  return sb.toString ()","lang":"py"}
{"idx":1108,"func":" \npublic static final String deriveCurveName (PublicKey publicKey) throws GeneralSecurityException {\n    if (publicKey instanceof java.security.interfaces.ECPublicKey) {\n        final java.security.interfaces.ECPublicKey pk = (java.security.interfaces.ECPublicKey) publicKey;\n        final ECParameterSpec params = pk.getParams ();\n        return deriveCurveName (EC5Util.convertSpec (params, false));\n    } else if (publicKey instanceof org.bouncycastle.jce.interfaces.ECPublicKey) {\n        final org.bouncycastle.jce.interfaces.ECPublicKey pk = (org.bouncycastle.jce.interfaces.ECPublicKey) publicKey;\n        return deriveCurveName (pk.getParameters ());\n    } else throw new IllegalArgumentException (\"Can only be used with instances of ECPublicKey (either jce or bc implementation)\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1109,"func":"def deriveCurveName(publicKey):\n try: \n    if isinstance(publicKey, java.security.interfaces.ECPublicKey):\n      pk = java.security.interfaces.ECPublicKey(publicKey)\n      params = pk.getParams()\n      return deriveCurveName(EC5Util.convertSpec(params, False))\n    elif isinstance(publicKey, org.bouncycastle.jce.interfaces.ECPublicKey):\n      pk = org.bouncycastle.jce.interfaces.ECPublicKey(publicKey)\n      return deriveCurveName(pk.getParameters())\n  except GeneralSecurityException:\n   raise IllegalArgumentException(\"Can only be used with instances of ECPublicKey (either jce or bc implementation)\")","lang":"py"}
{"idx":1110,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Time (s)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    drawRotate (gg, getWidth (), (getHeight () + width) \/ 2, 270, string);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1111,"func":"def paintComponent (self, g):\n    super().paintComponent (g)\n    gg = Graphics2D (g)\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)\n    font = Font (\"Arial\", Font.PLAIN, 15)\n    string = \"Time (s)\"\n    metrics = g.getFontMetrics (font)\n    width = metrics.stringWidth (string)\n    height = metrics.getHeight ()\n    gg.setFont (font)\n    drawRotate (gg, self.getWidth (), (self.getHeight () + width) \/ 2, 270, string)","lang":"py"}
{"idx":1112,"func":" \npublic static void main (String [] args) {\n    String set = new java.util.BitSet () {\n        {\n            set (1, 100 + 1);\n        }\n    }\n    .toString ();\n    System.out.append (set, 1, set.length () - 1);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1113,"func":"def main(args):\n    set = [True] * 101\n    set[0] = False\n    set = str(set)[1:-1]\n    print(set)","lang":"py"}
{"idx":1114,"func":" \npublic static void main (String [] args) {\n    Random ran = new Random ();\n    int min, max;\n    Scanner sc = new Scanner (System.in);\n    System.out.println (\"Enter min range:\");\n    min = sc.nextInt ();\n    System.out.println (\"Enter max range:\");\n    max = sc.nextInt ();\n    int num = ran.nextInt (min);\n    int num1 = ran.nextInt (max);\n    System.out.println (\"Random Number between given range is \" + num1);\n}","lang":"java"}
{"idx":1115,"func":"import random \nmin_range = int(input('Enter min range: '))\nmax_range = int(input('Enter max range: '))\nnum1 = random.randint(min_range,max_range) \nprint(f'Random Number between given range is {num1}')\n","lang":"py"}
{"idx":1116,"func":" \npublic static boolean isBalanced (String str) {\n    boolean result = false;\n    if (str.length () < 2) return false;\n    Stack < Character > stack = new Stack < > ();\n    for (int i = 0;\n    i < str.length (); i ++) {\n        char ch = str.charAt (i);\n        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {\n            continue;\n        }\n        if (parenthesesMapLeft.containsKey (ch)) {\n            stack.push (ch);\n        } else {\n            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {\n                result = true;\n            } else {\n                return false;\n            }\n        }\n    }\n    if (! stack.isEmpty ()) return result = false;\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1117,"func":"def isBalanced(str): \n  if len(str) < 2: \n    return False \n\n  result = False  \n  stack = []  \n  \n  for i in range(len(str)): \n    char = str[i] \n    if char not in parenthesesMapRight and char not in parenthesesMapLeft: \n      continue\n    \n    if char in parenthesesMapLeft: \n      stack.append(char) \n    else: \n      if not len(stack) == 0 and stack.pop() == parenthesesMapRight[char]: \n        result = True \n      else: \n        return False \n    \n  if len(stack) != 0: \n    return result = False \n  return result","lang":"py"}
{"idx":1118,"func":" \npublic IntList get (int i) {\n    if (i < 0) {\n        throw new IndexOutOfBoundsException (\"Index is negative!\");\n    }\n    if (i == 0) {\n        return this;\n    } else if (next != null) {\n        return next.get (i - 1);\n    }\n    throw new IndexOutOfBoundsException (\"Index exceeds bounds\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1119,"func":"def get(self, i): \n  if i < 0: \n    raise IndexError(\"Index is negative!\") \n  elif i == 0: \n    return self\n  elif self.next is not None:\n     return self.next.get(i - 1) \n  else: \n    raise IndexError(\"Index exceeds bounds\")","lang":"py"}
{"idx":1120,"func":" \npublic IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n    JsonObject jsonObject = json.getAsJsonObject ();\n    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);\n    String className = prim.getAsString ();\n    Class < ? > klass = null;\n    try {\n        klass = Class.forName (className);\n    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n        throw new JsonParseException (e.getMessage ());\n    }\n    return context.deserialize (jsonObject.get (INSTANCE), klass);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1121,"func":"def deserialize (json, typeOfT, context):\n    jsonObject = json.get_asJsonObject ()\n    prim = (JsonPrimitive) jsonObject.get (CLASSNAME)\n    className = prim.get_asString ()\n    klass = None\n    try:\n        klass = Class.forName (className)\n    except ClassNotFoundException as e:\n        e.printStackTrace ()\n        raise JsonParseException (e.get_message ())\n    return context.deserialize (jsonObject.get (INSTANCE), klass)","lang":"py"}
{"idx":1122,"func":" \npublic static String numLetters (String s) {\n    int [] count = new int [26];\n    for (int i = 0;\n    i < s.length (); i ++) {\n        char c = s.charAt (i);\n        count [(int) (c - 'a')] ++;\n    }\n    String ans = \"\";\n    for (int i = 0;\n    i < 26; i ++) {\n        if (count [i] != 0) {\n            ans += String.valueOf (count [i]) + (char) (i + 'a');\n        }\n    }\n    return ans;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1123,"func":"def numLetters(s): \n    count = [0] * 26\n    for i in range(len(s)): \n        count[ord(s[i]) - ord('a')] += 1\n    ans = \"\"\n    for i in range(26): \n        if count[i] != 0: \n            ans += str(count[i]) + chr(i + ord('a'))\n    return ans","lang":"py"}
{"idx":1124,"func":" \npublic static void copyFolder (Path src, Path dest) {\n    try {\n        Files.walk (src).forEach (s -> {\n            try {\n                Path d = dest.resolve (src.relativize (s));\n                if (Files.isDirectory (s)) {\n                    if (! Files.exists (d)) Files.createDirectory (d);\n                    return;\n                }\n                Files.copy (s, d);\n            } catch (Exception e) {\n                e.printStackTrace ();\n            }\n        });\n    } catch (Exception ex) {\n        ex.printStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1125,"func":"def copyFolder(src, dest):\n  try:\n      for s in os.listdir(src):\n          d = os.path.join(dest, os.path.relpath(src, s))\n          if os.path.isdir(s): \n              if not os.path.exists(d): os.mkdir(d)\n          else:\n              shutil.copy2(s, d)\n  except Exception as ex:\n      print(ex)","lang":"py"}
{"idx":1126,"func":" \npublic static void main (String [] args) throws Exception {\n    AuthMethod auth = new TokenAuthMethod (API_KEY, API_SECRET);\n    NexmoClient client = new NexmoClient (auth);\n    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, \"Hello from Nexmo!\");\n    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);\n    for (SmsSubmissionResult response : responses) {\n        System.out.println (response);\n    }\n}","lang":"java"}
{"idx":1127,"func":"import nexmo\nauth = nexmo.Client(key='API_KEY', secret='API_SECRET')  \nmessage = nexmo.Sms(\n  from_='FROM_NUMBER',\n  to='TO_NUMBER',\n  text='Hello from Nexmo!'\n)\nresponse = auth.send_message(message)\nprint(response)\n","lang":"py"}
{"idx":1128,"func":" \npublic static void main (String [] args) {\n    String [] colors = new String [args.length];\n    int color_ix = 0;\n    int number_idx = 0;\n    Integer [] number = new Integer [args.length];\n    for (int i = 0;\n    i < args.length; i ++) {\n        if (args [i] == null) {\n            continue;\n        }\n        try {\n            number [number_idx] = Integer.parseInt (args [i]);\n            number_idx ++;\n        } catch (NumberFormatException e) {\n            colors [color_ix] = args [i];\n            color_ix ++;\n        }\n    }\n    System.out.println (\"-----Number-----\");\n    for (int i = 0;\n    i < number_idx; i ++) {\n        System.out.println (number [i]);\n    }\n    System.out.println (\"-----Colors-----\");\n    for (int i = 0;\n    i < color_ix; i ++) {\n        System.out.println (colors [i]);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1129,"func":"def main(args):\n    colors = [None] * len(args)\n    color_ix = 0\n    number_ix = 0\n    numbers = [None] * len(args)\n    for i, arg in enumerate(args):\n        if arg is None:\n            continue\n        try:\n            numbers[number_ix] = int(arg)\n            number_ix += 1\n        except ValueError:\n            colors[color_ix] = arg\n            color_ix += 1\n\n    print(\"-----Number-----\")\n    for i in range(number_ix):\n        print(numbers[i])\n\n    print(\"-----Colors-----\")\n    for i in range(color_ix):\n        print(colors[i])","lang":"py"}
{"idx":1130,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1131,"func":"def getName(value):\n    negative = False\n    if value.startswith(\"-\"):\n        negative = True\n        value = value[1:]\n    decimals = value.find(\".\")\n    decimalValue = None\n    if decimals >= 0:\n        decimalValue = value[decimals + 1:]\n        value = value[:decimals]\n\n    name = processor.getName(value)\n    if name == \"\":\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n\n    if decimalValue is not None and decimalValue != \"\":\n        zeroDecimalValue = \"0\" * len(decimalValue)\n        if decimalValue == zeroDecimalValue:\n            name += (SEPARATOR + UNION_AND + SEPARATOR + \n                    \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue)))\n        else:\n            name += (SEPARATOR + UNION_AND + SEPARATOR + \n                    processor.getName(decimalValue) + SEPARATOR + \n                    SCALE.getName(-len(decimalValue)))\n    return name","lang":"py"}
{"idx":1132,"func":" \npublic static void main (String [] args) {\n    List < Integer > initialNumbers = new ArrayList < Integer > ();\n    initialNumbers.add (1);\n    initialNumbers.add (2);\n    Observable < Integer > observableInitial = Observable.from (initialNumbers);\n    ReplaySubject < Integer > subject = ReplaySubject.create ();\n    Observable < Integer > source = Observable.merge (observableInitial, subject);\n    source.subscribe (System.out :: println);\n    for (int i = 0;\n    i < 100; ++ i) {\n        subject.onNext (i);\n    }\n}","lang":"java"}
{"idx":1133,"func":"initial_numbers = [1,2]\nobservable_initial = Observable.from(initial_numbers)\nsubject = ReplaySubject.create()\nsource = Observable.merge(observable_initial, subject)\nsource.subscribe(print)\nfor i in range (100):\n  subject.onNext(i)\n  \n","lang":"py"}
{"idx":1134,"func":" \npublic static void main (String [] args) {\n    int arr [];\n    Scanner scan = new Scanner (System.in);\n    for (int i = 0;\n    i < 5; i ++) {\n        System.out.print (\"Enter number \" + (i + 1) + \": \");\n        arr [i] = scan.nextInt ();\n    }\n    for (int i = 0;\n    i < 5; i ++) System.out.println (\"Number \" + (i + 1) + \": \" + arr [i]);\n}","lang":"java"}
{"idx":1135,"func":"arr = [0] * 5\nfor i in range(5):\n    print(\"Enter number\", (i+1), \":\")\n\tarr[i] = int(input())\nfor i in range(5):\n\tprint(\"Number\", (i+1), \": \", arr[i])\n","lang":"py"}
{"idx":1136,"func":" \npublic void run () {\n    String threadName = Thread.currentThread ().getName ();\n    try {\n        first.lock ();\n        latch.countDown ();\n        System.out.println (threadName + \": locked first lock\");\n        latch.await ();\n        System.out.println (threadName + \": attempting to lock second lock\");\n        second.lock ();\n        System.out.println (threadName + \": never reached\");\n    } catch (InterruptedException e) {\n        throw new RuntimeException (e);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1137,"func":"def run():\n    threadName = threading.current_thread().getName()\n    try:\n        first.acquire()\n        latch.count_down()\n        print(f'{threadName} : locked first lock')\n        latch.await()\n        print(f'{threadName} : attempting to lock second lock')\n        second.acquire()\n        print(f'{threadName} : never reached')\n    except InterruptedException as e:\n        raise RuntimeError(e)","lang":"py"}
{"idx":1138,"func":" \npublic static void throwException (String className) throws CheckedException, UncheckedException {\n    Class < ? > exceptionClass;\n    try {\n        exceptionClass = Class.forName (className);\n    } catch (ClassNotFoundException e) {\n        throw new IllegalArgumentException (e);\n    }\n    try {\n        if (CheckedException.class.isAssignableFrom (exceptionClass)) {\n            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();\n        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {\n            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();\n        } else {\n            throw new IllegalArgumentException (\"Not a valid exception type: \" + exceptionClass.getName ());\n        }\n    } catch (InstantiationException | IllegalAccessException e) {\n        throw new IllegalStateException (e);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1139,"func":"def throw_exception(class_name: str):\n    exception_class = None\n    try:\n        exception_class = getattr(sys.modules[__name__], class_name)\n    except AttributeError as e:\n        raise IllegalArgumentException(e)\n    try:\n        if issubclass(exception_class, CheckedException):\n            raise exception_class()\n        elif issubclass(exception_class, UncheckedException):\n            raise exception_class()\n        else:\n            raise IllegalArgumentException(f\"Not a valid exception type: {exception_class.__name__}\")\n    except InstantiationException as e1:\n        raise IllegalStateException(e1)\n    except IllegalAccessException as e2:\n        raise IllegalStateException(e2)","lang":"py"}
{"idx":1140,"func":" \npublic void draw (Graphics2D g) {\n    float arrowRatio = 0.5f;\n    float arrowLength = 80.0f;\n    BasicStroke stroke = (BasicStroke) g.getStroke ();\n    float endX = 350.0f;\n    float veeX = endX - stroke.getLineWidth () * 0.5f \/ arrowRatio;\n    Path2D.Float path = new Path2D.Float ();\n    float waisting = 0.5f;\n    float waistX = endX - arrowLength * 0.5f;\n    float waistY = arrowRatio * arrowLength * 0.5f * waisting;\n    float arrowWidth = arrowRatio * arrowLength;\n    path.moveTo (veeX - arrowLength, - arrowWidth);\n    path.quadTo (waistX, - waistY, endX, 0.0f);\n    path.quadTo (waistX, waistY, veeX - arrowLength, arrowWidth);\n    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);\n    path.lineTo (veeX - arrowLength, - arrowWidth);\n    g.setColor (Color.BLUE);\n    g.fill (path);\n    g.setColor (Color.RED);\n    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1141,"func":"def draw(g):\n    arrow_ratio = 0.5\n    arrow_length = 80.0\n    stroke = g.getStroke()\n    end_x = 350.0\n    vee_x = end_x - (stroke.getLineWidth() * 0.5 \/ arrow_ratio)\n    path = Path2D.Float()\n    waisting = 0.5\n    waist_x = end_x - (arrow_length \/ 2)\n    waist_y = (arrow_ratio * arrow_length) * (waisting \/ 2)\n    arrow_width = (arrow_ratio * arrow_length)\n    path.moveTo(vee_x - arrow_length, -arrow_width)\n    path.quadTo(waist_x , -waist_y, end_x, 0.0)\n    path.quadTo(waist_x, waist_y, vee_x - arrow_length, arrow_width)\n    path.lineTo(vee_x - (arrow_length * 0.75), 0.0)\n    path.lineTo(vee_x - arrow_length, -arrow_width)\n    g.setColor(Color.BLUE)\n    g.fill(path)\n    g.setColor(Color.RED)\n    g.draw(Line2D.Float(50.0, 0.0, (vee_x - (arrow_length * 0.5)), 0.0))","lang":"py"}
{"idx":1142,"func":" \npublic static void main (String Args []) {\n    JFrame testing = new JFrame ();\n    testing.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    testing.setSize (1000, 1000);\n    testing.setVisible (true);\n    JLabel countDownLabel = new JLabel ();\n    countDownLabel.setText (\"Now it's : \" + Globals.seconds);\n    testing.add (countDownLabel);\n    CountDown countdown = new CountDown (countDownLabel);\n    Timer timer = new Timer (5000, countDown);\n    timer.start ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1143,"func":"def main(Args):\n    testing = tk.Tk()\n    testing.title(\"Testing\")\n    testing.geometry(\"1000x1000\")\n    \n    countDownLabel = tk.Label(text=\"Now its : {}\".format(Globals.seconds))\n    countDownLabel.pack()\n    countDown = CountDown(countDownLabel)\n    \n    timer = testing.after(5000, countDown)\n    testing.mainloop()","lang":"py"}
{"idx":1144,"func":" \npublic int solution (int N) {\n    String binary = Integer.toString (N, 2);\n    int largestGap = 0;\n    for (int i = 1, gap = 0;\n    i < binary.length (); i ++) {\n        while (i < binary.length () && binary.charAt (i) == '0') {\n            i ++;\n            gap ++;\n        }\n        if (gap > largestGap && i < binary.length ()) {\n            largestGap = gap;\n        }\n        gap = 0;\n    }\n    return largestGap;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1145,"func":"def solution(N):\n    binary = bin(N)[2:]\n    largest_gap = 0\n    gap = 0\n    for i in range(1, len(binary)):\n        if binary[i] == '0':\n            gap += 1\n        else:\n            if gap > largest_gap:\n                largest_gap = gap\n            gap = 0\n    return largest_gap","lang":"py"}
{"idx":1146,"func":" \nprivate void transform (HSSFRow rowOld, XSSFRow rowNew) {\n    XSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    if (rowOld.getRowStyle () != null) {\n        Integer hash = rowOld.getRowStyle ().hashCode ();\n        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());\n        rowNew.setRowStyle (this.styleMap.get (hash));\n    }\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1147,"func":"def transform (rowOld, rowNew): \n    rowNew.setHeight (rowOld.getHeight ())\n    if rowOld.getRowStyle () is not None: \n        hash = rowOld.getRowStyle ().hashCode ()\n        if hash not in styleMap: \n            transform (hash, rowOld.getRowStyle (), workbookNew.createCellStyle ())\n        rowNew.setRowStyle (styleMap[hash])\n    for cell in rowOld: \n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ())\n        if cellNew is not None: \n            transform (cell, cellNew)\n    lastColumn = max (lastColumn, rowOld.getLastCellNum ())","lang":"py"}
{"idx":1148,"func":" \npublic ListNode reverse (ListNode toBeNextNode, ListNode currentNode) {\n    ListNode currentHead = currentNode;\n    if ((currentNode == null || currentNode.next == null) && toBeNextNode == null) return currentHead;\n    if (currentNode.next != null) currentHead = reverse (currentNode, currentNode.next);\n    currentNode.next = toBeNextNode;\n    return currentHead;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1149,"func":"def reverse(toBeNextNode, currentNode):\n    currentHead = currentNode\n\n    if currentNode == None or currentNode.next == None and toBeNextNode == None:\n        return currentHead\n    if currentNode.next != None:\n        currentHead = reverse(currentNode,currentNode.next)\n    currentNode.next = toBeNextNode\n    return currentHead","lang":"py"}
{"idx":1150,"func":" \npublic void type (String text) {\n    char c;\n    for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1151,"func":"def type(text):\n    for ii in range(len(text)):\n        c = text[ii]\n        if c <= 31 or c == 129:\n            pressControlKey(c)\n        else:\n            typeAsciiCode(c)","lang":"py"}
{"idx":1152,"func":" \npublic static void main (String...a) {\n    System.out.print (\"Enter the String\");\n    Scanner sc = new Scanner (System.in);\n    String st = sc.nextLine ();\n    int [] ar = new int [256];\n    for (int i = 0;\n    i < st.length (); i ++) {\n        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        char ch = (char) i;\n        if (ar [i] > 0) {\n            if (ar [i] == 1) {\n                System.out.print (ch);\n            } else {\n                System.out.print (ch + \"\" + ar [i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1153,"func":"def main(a):\n  print(\"Enter the String\")\n  st = input()\n  ar = [0]*256\n  for i in range(len(st)):\n    ar[ord(st[i])] += 1\n  for i in range(256):\n    if ar[i] > 0:\n      if ar[i] == 1:\n        print(chr(i))\n      else:\n        print(f\"{chr(i)}{ar[i]}\")","lang":"py"}
{"idx":1154,"func":" \npublic static void main (String [] args) {\n    Scanner keyboard = new Scanner (System.in);\n    String userInput = keyboard.next ();\n    String concatenated = userInput;\n    int i, cumSum = 0;\n    ArrayList < Integer > helperIndex = new ArrayList < > ();\n    for (i = 1; i < userInput.length (); i += 2) {\n        helperIndex.add (i);\n        cumSum += i;\n    }\n    for (i = userInput.length (); i > 0; i -= 2) {\n        helperIndex.add (i);\n        cumSum += i;\n    }\n    int numOfWordRepitition = cumSum \/ userInput.length ();\n    for (i = 0; i < numOfWordRepitition; i ++) {\n        concatenated += userInput;\n    }\n    String substr;\n    int prev = helperIndex.get (0);\n    int next = helperIndex.get (0);\n    substr = concatenated.substring (0, helperIndex.get (0));\n    System.out.println (Character.toUpperCase (substr.charAt (0)) + substr.substring (1));\n    for (i = 1; i < userInput.length (); i ++) {\n        next += helperIndex.get (i);\n        substr = concatenated.substring (prev, next);\n        substr = Character.toUpperCase (substr.charAt (0)) + substr.substring (1);\n        System.out.println (substr);\n        prev = next;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1155,"func":"def main(args):\n    keyboard = input()\n    concatenated = keyboard\n    cumSum = 0\n    helperIndex = []\n    for i in range(1, len(keyboard), 2):\n        helperIndex.append(i)\n        cumSum += i\n    for i in range(len(keyboard), 0, -2):\n        helperIndex.append(i)\n        cumSum += i\n    numOfWordRepitition = cumSum\/\/len(keyboard)\n    for i in range(numOfWordRepitition):\n        concatenated += keyboard\n    substr = ''\n    prev = helperIndex[0]\n    next = helperIndex[0]\n    substr = concatenated[0: helperIndex[0]]\n    print(substr[0].upper() + substr[1:])\n    for i in range(1, len(keyboard)):\n        next += helperIndex[i]\n        substr = concatenated[prev:next]\n        substr = substr[0].upper() + substr[1:]\n        print(substr)\n        prev = next","lang":"py"}
{"idx":1156,"func":" \npublic static void main (String [] args) {\n    int large [] = new int [10];\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};\n    int k = 0;\n    for (int i = 0;\n    i < array.length; i ++) {\n        large [k ++] = getMax (0, array);\n    }\n    System.out.println (\"Largest 5 is: \" + Arrays.toString (Arrays.copyOf (large, 5)));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1157,"func":"def main(args):\n    large = [0] * 10\n    array = [33, 55, 13, 46, 87, 42, 10, 34, 43, 56]\n    k = 0\n    for i in range(len(array)):\n        large[k] = getMax(i, array)\n        k += 1\n        \n    print(\"Largest 5 is: \" + str(large[:5]))","lang":"py"}
{"idx":1158,"func":" \npublic static void copyFolder (Path src, Path dest) {\n    try {\n        Files.walk (src).forEach (s -> {\n            try {\n                Path d = dest.resolve (src.relativize (s));\n                if (Files.isDirectory (s)) {\n                    if (! Files.exists (d)) Files.createDirectory (d);\n                    return;\n                }\n                Files.copy (s, d);\n            } catch (Exception e) {\n                e.printStackTrace ();\n            }\n        });\n    } catch (Exception ex) {\n        ex.printStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1159,"func":"def copyFolder(src, dest):\n    try:\n        for s in os.walk(src):\n            d = os.path.join(dest, s[0].replace(src, \"\")) \n            if os.path.isdir(s[0]):\n                if not os.path.exists(d):\n                    os.makedirs(d)\n            else:\n                shutil.copy2(s[0], d)\n    except Exception as ex:\n        print(ex)","lang":"py"}
{"idx":1160,"func":" \npublic static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException {\n    if (privateKey instanceof java.security.interfaces.ECPrivateKey) {\n        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;\n        final ECParameterSpec params = pk.getParams ();\n        return deriveCurveName (EC5Util.convertSpec (params, false));\n    } else if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {\n        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;\n        return deriveCurveName (pk.getParameters ());\n    } else throw new IllegalArgumentException (\"Can only be used with instances of ECPrivateKey (either jce or bc implementation)\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1161,"func":"def deriveCurveName(private_key):\n  if isinstance(private_key, java.security.interfaces.ECPrivateKey):\n    pk = private_key\n    params = pk.getParams()\n    return deriveCurveName(EC5Util.convertSpec(params, False))\n  elif isinstance(private_key, org.bouncycastle.jce.interfaces.ECPrivateKey):\n    pk = private_key\n    return deriveCurveName(pk.getParameters())\n  else:\n    raise IllegalArgumentException(\"Can only be used with instances of ECPrivateKey (either jce or bc implementation)\")","lang":"py"}
{"idx":1162,"func":" \npublic static void main (String [] args) throws IOException {\n    FileReader file = new FileReader (\"D:\\\\Test.txt\");\n    BufferedReader br = new BufferedReader (file);\n    String str;\n    int xSum = 0;\n    int ySum = 0;\n    while ((str = br.readLine ()) != null) {\n        if (str.contains (\"x=\")) {\n            xSum += Integer.parseInt (str.split (\"=\") [1].trim ());\n        }\n        if (str.contains (\"y=\")) {\n            ySum += Integer.parseInt (str.split (\"=\") [1].trim ());\n        }\n    }\n    System.out.println (\"Sum x is: \" + xSum + \" Sum y is: \" + ySum);\n}","lang":"java"}
{"idx":1163,"func":"import os\nfilePath = \"D:\\\\Test.txt\"\nif os.path.exists(filePath):\n    xSum = 0\n    ySum = 0\n    with open(filePath, 'r') as myfile:\n        data=myfile.readlines()\n    for line in data:\n        if \"x=\" in line:\n            xSum += int(line.split(\"=\")[1])\n        elif \"y=\" in line:\n            ySum += int(line.split(\"=\")[1])\n    \n    print(\"Sum x is:\", xSum, \"Sum y is:\", ySum)\nelse:\n    print(\"No such file present\")\n","lang":"py"}
{"idx":1164,"func":" \npublic static void main (String [] args) throws IOException {\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.print (\"Enter String\");\n    String s = br.readLine ();\n    System.out.print (\"Enter Integer:\");\n    try {\n        int i = Integer.parseInt (br.readLine ());\n    } catch (NumberFormatException nfe) {\n        System.err.println (\"Invalid Format!\");\n    }\n}","lang":"java"}
{"idx":1165,"func":"import sys\ntry:\n    s = input('Enter String: ')\n    i = int(input('Enter Integer: '))\nexcept ValueError:\n    print('Invalid Format!')\n","lang":"py"}
{"idx":1166,"func":" \npublic static void main (String [] args) {\n    Scanner scan = new Scanner (System.in);\n    int numOfItems = 20, maxItems = 0;\n    String arrayOfNames [] = new String [numOfItems];\n    String Temp = \"\";\n    for (int i = 0;\n    i < arrayOfNames.length; i ++) {\n        System.out.print (\"Enter Item \" + (i + 1) + \" : \");\n        Temp = scan.nextLine ();\n        if (Temp.equals (arrayOfNames [0])) {\n            maxItems = i;\n            break;\n        } else {\n            arrayOfNames [i] = Temp;\n        }\n    }\n    for (int i = 0;\n    i < maxItems; i ++) {\n        System.out.print (\"Item # \" + (i + 1) + \" : \");\n        System.out.print (arrayOfNames [i] + \"\\n\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1167,"func":"def main():\n    numOfItems = 20\n    maxItems = 0\n    arrayOfNames = [None] * numOfItems\n    Temp = \"\"\n\n    for i in range(len(arrayOfNames)):\n        print(\"Enter Item {}:\".format(i + 1))\n        Temp = input()\n\n        if Temp == arrayOfNames[0]:\n            maxItems = i\n            break\n        else:\n            arrayOfNames[i] = Temp\n        \n    for i in range(maxItems):\n        print(\"Item #{}: {}\".format(i + 1, arrayOfNames[i]))\n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":1168,"func":" \npublic static void main (String [] args) {\n    String pass = \"admin\";\n    int maxTry = 3;\n    boolean success = false;\n    Scanner input = new Scanner (System.in);\n    System.out.print (\"Insert the admin pass: \");\n    String test = input.nextLine ();\n    while (maxTry > 0) {\n        maxTry --;\n        if (! pass.equals (test)) {\n            System.out.print (\"You have \" + maxTry + \" try(es): \");\n            test = input.nextLine ();\n        } else {\n            success = true;\n            break;\n        }\n    }\n    if (success) {\n        System.out.println (\"Access granted\");\n    } else {\n        System.out.println (\"Access denied\");\n    }\n}","lang":"java"}
{"idx":1169,"func":"pass = \"admin\" \nmaxTry = 3\nsuccess = False\nwhile maxTry > 0:\n    maxTry -=1\n    test = input(\"Insert the admin pass: \")\n    \n    if pass != test:\n        print(\"You have \" + str(maxTry) + \" try(es): \")\n    else:\n        success = True\n        break\n        \nif success:\n    print(\"Access granted\")\nelse:\n    print(\"Access denied\")\n","lang":"py"}
{"idx":1170,"func":" \npublic static void main (String [] args) {\n    InputStream is = StringFromFileFast.class.getResourceAsStream (\"file.txt\");\n    InputStreamReader input = new InputStreamReader (is);\n    final int CHARS_PER_PAGE = 5000;\n    final char [] buffer = new char [CHARS_PER_PAGE];\n    StringBuilder output = new StringBuilder (CHARS_PER_PAGE);\n    try {\n        for (int read = input.read (buffer, 0, buffer.length);\n        read != - 1; read = input.read (buffer, 0, buffer.length)) {\n            output.append (buffer, 0, read);\n        }\n    } catch (IOException ignore) {\n    }\n    String text = output.toString ();\n    System.out.println (text);\n}","lang":"java"}
{"idx":1171,"func":"with open('file.txt','rt') as infile:\n    lines = infile.readlines()\n    text = \"\".join(lines)\n    print(text)\n","lang":"py"}
{"idx":1172,"func":" \n        public void actionPerformed (ActionEvent event) {\n            f = Integer.parseInt (f1.getText ());\n            g = Integer.parseInt (f2.getText ());\n            System.out.println (f + \"  \" + g);\n            graph.repaint ();\n        }}\n    );\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1173,"func":"def actionPerformed(event):\n    f = int(f1.getText())\n    g = int(f2.getText())\n    print('{}  {}'.format(f, g))\n    graph.repaint()","lang":"py"}
{"idx":1174,"func":" \npublic void addString (String...myString) {\n    String separator = \" AND \";\n    StringBuilder sb = new StringBuilder ();\n    sb.append ('(');\n    boolean needSeparator = false;\n    for (String string : myString) {\n        if (needSeparator) {\n            sb.append (separator);\n        } else {\n            needSeparator = true;\n        }\n        sb.append (string);\n    }\n    sb.append (')');\n    System.out.println (sb);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1175,"func":"def addString(*myString): \n    separator = \" AND \"\n    sb = \"(\"\n    needSeparator = False\n    for string in myString:\n        if needSeparator:\n            sb += separator\n        else:\n            needSeparator = True\n        sb += string\n    sb += \")\"\n    print(sb)","lang":"py"}
{"idx":1176,"func":" \nprivate void initData () {\n    testData = new ArrayList < EventStatus > ();\n    testData.add (new EventStatus (\"Mach-1\", 1477468500000L, 1, 0));\n    testData.add (new EventStatus (\"Mach-1\", 1477472100000L, 2, 0));\n    testData.add (new EventStatus (\"Mach-1\", 1477474200000L, 5, 0));\n    testData.add (new EventStatus (\"Mach-1\", 1477476000000L, 3, 0));\n    testData.add (new EventStatus (\"Mach-1\", 1477479600000L, 4, 0));\n    testData.add (new EventStatus (\"Mach-1\", 1477486800000L, 1, 0));\n    testData.add (new EventStatus (\"Mach-2\", 1477465200000L, 3, 1));\n    testData.add (new EventStatus (\"Mach-2\", 1477472400000L, 2, 1));\n    testData.add (new EventStatus (\"Mach-2\", 1477474200000L, 5, 1));\n    testData.add (new EventStatus (\"Mach-2\", 1477476000000L, 2, 1));\n    testData.add (new EventStatus (\"Mach-2\", 1477479600000L, 3, 1));\n    testData.add (new EventStatus (\"Mach-2\", 1477486800000L, 4, 1));\n    ArrayList < String > list = new ArrayList < > ();\n    for (EventStatus eventStatus : testData) {\n        if (list.contains (eventStatus.getName ())) continue;\n        else list.add (eventStatus.getName ());\n    }\n    catArray = new String [list.size ()];\n    catArray = list.toArray (catArray);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1177,"func":"def initData():\n   testData = [] \n   testData.append(EventStatus(\"Mach-1\", 1477468500000L, 1, 0)) \n   testData.append(EventStatus(\"Mach-1\", 1477472100000L, 2, 0)) \n   testData.append(EventStatus(\"Mach-1\", 1477474200000L, 5, 0)) \n   testData.append(EventStatus(\"Mach-1\", 1477476000000L, 3, 0))\n   testData.append(EventStatus(\"Mach-1\", 1477479600000L, 4, 0)) \n   testData.append(EventStatus(\"Mach-1\", 1477486800000L, 1, 0)) \n   testData.append(EventStatus(\"Mach-2\", 1477465200000L, 3, 1)) \n   testData.append(EventStatus(\"Mach-2\", 1477472400000L, 2, 1))\n   testData.append(EventStatus(\"Mach-2\", 1477474200000L, 5, 1)) \n   testData.append(EventStatus(\"Mach-2\", 1477476000000L, 2, 1))\n   testData.append(EventStatus(\"Mach-2\", 1477479600000L, 3, 1)) \n   testData.append(EventStatus(\"Mach-2\", 1477486800000L, 4, 1)) \n\n   list = [] \n   for eventStatus in testData: \n       if eventStatus.getName() in list: \n           continue \n       else: \n           list.append(eventStatus.getName()) \n\n   catArray = [len(list)] \n   catArray = list.toArray(catArray)","lang":"py"}
{"idx":1178,"func":" \n            public void run () {\n                try {\n                } finally {\n                    latch.countDown ();\n                }\n            }}\n        );\n\n\n\n\n\n","lang":"java"}
{"idx":1179,"func":"def run():\n    try:\n        pass\n    finally:\n        latch.countdown()","lang":"py"}
{"idx":1180,"func":" \npublic static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {\n    int [] ret = new int [numberOfRandoms];\n    Random rnd = new Random ();\n    int totalLeft = total;\n    for (int i = 0;\n    i < numberOfRandoms; i ++) {\n        final int rollsLeft = numberOfRandoms - i;\n        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;\n        int thisMin = Math.max (minimumValue, totalLeft \/ rollsLeft);\n        int range = thisMax - thisMin;\n        if (range < 0) throw new IllegalArgumentException (\"Cannot have \" + minimumValue + \" * \" + numberOfRandoms + \" < \" + total);\n        int rndValue = range;\n        for (int j = 0;\n        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);\n        totalLeft -= ret [i] = rndValue + thisMin;\n    }\n    Collections.shuffle (Arrays.asList (ret), rnd);\n    return ret;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1181,"func":"def gen_randoms(total, number_of_randoms, minimum_value):\n  ret = [0] * number_of_randoms\n  rand_gen = random.Random()\n  total_left = total\n  for i in range(number_of_randoms):\n    rolls_left = number_of_randoms - i\n    this_max = total_left - (rolls_left - 1) * minimum_value\n    this_min = max(minimum_value, total_left \/\/ rolls_left)\n    range_val = this_max - this_min\n    if range_val < 0:\n      raise ValueError(f\"Cannot have {minimum_value} * {number_of_randoms} \n                       < {total}\")\n    rnd_value = range_val\n    for j in range(j):\n      if j * j < rolls_left:\n        rnd_val = rand_gen.randrange(0, rnd_value + 1, 1)\n    total_left -= ret[i] = rnd_value + this_min\n  random.shuffle(ret)\n  return ret","lang":"py"}
{"idx":1182,"func":" \npublic int read () throws IOException {\n    if (currentPos < currentLineEnd) {\n        in.seek (currentPos ++);\n        int readByte = in.readByte ();\n        return readByte;\n    } else if (currentPos > lastPosInFile && currentLineStart < currentLineEnd) {\n        findPrevLine ();\n        if (lastChar != '\\n' && lastChar != '\\r') {\n            return '\\n';\n        } else {\n            return read ();\n        }\n    } else if (currentPos < 0) {\n        return - 1;\n    } else {\n        findPrevLine ();\n        return read ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1183,"func":"def read():\n    try:\n        if currentPos < currentLineEnd:\n            in.seek(currentPos++)\n            readByte = in.readByte() \n            return readByte \n        elif currentPos > lastPosInFile and currentLineStart < currentLineEnd:\n            findPrevLine()\n            if lastChar != '\\n' and lastChar != '\\r':\n                return '\\n'\n            else:\n                return read()\n        elif currentPos < 0:\n            return -1\n        else:\n            findPrevLine()\n            return read()\n    except IOException as e:\n        print(e)","lang":"py"}
{"idx":1184,"func":" \npublic static void duplication () {\n    int max = 100;\n    int min = 1;\n    Random rand = new Random ();\n    int index = 0;\n    int [] all = new int [20];\n    while (index < 20) {\n        boolean duplicate = false;\n        int randomNum = rand.nextInt ((max - min) + 1) + min;\n        for (int i = 0;\n        i < all.length; i ++) {\n            if (all [i] == randomNum) {\n                duplicate = true;\n                break;\n            }\n        }\n        if (! duplicate) {\n            all [index ++] = randomNum;\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1185,"func":"def duplication(): \n    max=100  \n    min=1 \n    index=0 \n    all=[0]*20 \n    while index<20: \n        randomNum = random.randint(min,max) \n        if randomNum in all: \n            continue \n        else: \n            all[index]=randomNum \n            index+=1","lang":"py"}
{"idx":1186,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1187,"func":"def getName(value):\n    buffer = []\n    high = \"\"\n    low = \"\"\n\n    if len(value) < getPartDivider():\n        high = \"\"\n        low = value\n    else: \n        index = len(value) - getPartDivider()\n        high = value[:index]\n        low = value[index:]\n    \n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n\n    if highName != \"\":\n        buffer.append(highName)\n        buffer.append(SEPARATOR)\n        buffer.append(getToken())\n\n        if lowName != \"\":\n            buffer.append(SEPARATOR)\n    \n    if lowName != \"\":\n        buffer.append(lowName)\n        \n    return ''.join(buffer)","lang":"py"}
{"idx":1188,"func":" \npublic void show (String columnName) {\n    Object o = hiddenColumns.remove (columnName);\n    if (o == null) {\n        return;\n    }\n    tcm.addColumn ((TableColumn) o);\n    o = hiddenColumns.remove (\":\" + columnName);\n    if (o == null) {\n        return;\n    }\n    int column = ((Integer) o).intValue ();\n    int lastColumn = tcm.getColumnCount () - 1;\n    if (column < lastColumn) {\n        tcm.moveColumn (lastColumn, column);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1189,"func":"def show (columnName):\n    o = hiddenColumns.pop(columnName, None)\n    if o is None:\n        return\n    tcm.addColumn(o)\n    o = hiddenColumns.pop(\":\" + columnName, None)\n    if o is None:\n        return\n    column = o\n    lastColumn = tcm.getColumnCount() - 1\n    if column < lastColumn:\n        tcm.moveColumn(lastColumn, column)","lang":"py"}
{"idx":1190,"func":" \npublic static Date addBusinessDays (Date date, int days) {\n    DateTime result = new DateTime (date);\n    result = isWeekEnd (result) ? getPreviousBusinessDate (result) : result;\n    for (int i = 0;\n    i < days; i ++) {\n        if (isWeekEnd (result)) {\n            i --;\n        }\n        result = result.plusDays (1);\n    }\n    return result.toDate ();\n}\n\n\n\n\n\n\nimport datetime\n","lang":"java"}
{"idx":1191,"func":"def addBusinessDays (date, days):\n    result = datetime.datetime(date.year, date.month, date.day)\n    result = isWeekEnd (result) ? getPreviousBusinessDate (result) : result\n    for i in range (days):\n        if isWeekEnd (result):\n            i -= 1\n        result = result + datetime.timedelta(days=1)\n    return result.date()","lang":"py"}
{"idx":1192,"func":" \npublic void run () {\n    for (int i = 0;\n    ; i ++) {\n        if (i % 1000 == 0) {\n            System.out.printf (\"get: %d\\n\", i);\n        }\n        Map < K, String > m2 = new HashMap < > (map);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1193,"func":"def run ():\n    for i in range (1000):\n        print (\"get: %d\" % i)\n        m2 = {}\n        m2.update (map)","lang":"py"}
{"idx":1194,"func":" \npublic int maxBlock (String str) {\n    int max = 0;\n    int count = 1;\n    char o = ' ';\n    for (int i = 0;\n    i < str.length (); i ++) {\n        char c = str.charAt (i);\n        if (c == o) {\n            count ++;\n            if (count > max) {\n                max = count;\n            }\n        } else {\n            count = 1;\n            if (count > max) {\n                max = count;\n            }\n        }\n        o = c;\n    }\n    return max;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1195,"func":"def maxBlock(str):\n    max = 0\n    count = 1\n    o = ' '\n    for i in range(len(str)):\n        c = str[i]\n        if c == o:\n            count += 1\n            if count > max:\n                max = count\n        else:\n            count = 1\n            if count > max:\n                max = count\n        o = c\n    return max","lang":"py"}
{"idx":1196,"func":" \npublic static String join (Object [] objects, String delimiter) {\n    if (objects.length == 0) {\n        return \"\";\n    }\n    int capacityGuess = (objects.length * objects [0].toString ().length ()) + ((objects.length - 1) * delimiter.length ());\n    StringBuilder ret = new StringBuilder (capacityGuess);\n    ret.append (objects [0]);\n    for (int i = 1;\n    i < objects.length; i ++) {\n        ret.append (delimiter);\n        ret.append (objects [i]);\n    }\n    return ret.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1197,"func":"def join(objects, delimiter):\n    if len(objects) == 0:\n        return \"\"\n    ret = objects[0]\n    for i in range(len(objects)-1):\n        ret += delimiter + objects[i+1]\n    return ret","lang":"py"}
{"idx":1198,"func":" \npublic static int [] [] getRows (int i, int j, int [] [] array) {\n    int [] [] another = new int [j - i + 1] [];\n    while (i <= j) {\n        for (int k = 0;\n        k < another.length; k ++) {\n            another [k] = array [i];\n            i ++;\n        }\n    }\n    return another;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1199,"func":"def getRows(i, j, array): \n  another = []\n  while i <= j: \n    for k in range(len(array)-1): \n      another.append(array[i + k])\n    i += 1\n  return another","lang":"py"}
{"idx":1200,"func":" \npublic void print () {\n    try {\n        waitForSemaphore.acquire ();\n        int start = nextStartIdx;\n        for (int i = 0;\n        i < 5; i ++) {\n            System.out.println (String.format (\"%d -- %s\", i + start, Thread.currentThread ().getName ()));\n        }\n        nextStartIdx += 5;\n        next.release ();\n    } catch (InterruptedException ie) {\n        Thread.currentThread ().interrupt ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1201,"func":"def print():\n  try:\n    waitForSemaphore.acquire()\n    start = nextStartIdx\n    for i in range(0, 5):\n      print(\"{0} -- {1}\".format(i + start, threading.current_thread().name))\n    nextStartIdx += 5\n    next.release()\n  except InterruptedException as ie:\n    threading.current_thread().interrupt()","lang":"py"}
{"idx":1202,"func":" \npublic void actionPerformed (ActionEvent e) {\n    int x = (int) (Math.random () * getWidth ());\n    int y = (int) (Math.random () * getHeight ());\n    int width = (int) (Math.random () * (getWidth () \/ 4));\n    int height = (int) (Math.random () * (getHeight () \/ 4));\n    if (x + width > getWidth ()) {\n        x = getWidth () - width;\n    }\n    if (y + height > getHeight ()) {\n        y = getHeight () - height;\n    }\n    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));\n    lstShapes.add (new MyRectangle (x, y, width, height, color));\n    repaint ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1203,"func":"def actionPerformed(e):\n  x = random.randint(0,getWidth())\n  y = random.randint(0,getHeight())\n  width = random.randint(0,int(getWidth()\/4))\n  height = random.randint(0,int(getHeight()\/4))\n  if x + width > getWidth():\n    x = getWidth() - width\n  if y + height > getHeight():\n    y = getHeight() - height\n  red_int = random.randint(0,255)\n  green_int = random.randint(0,255)\n  blue_int = random.randint(0,255) \n  color = (red_int, green_int, blue_int)\n  lstShapes.add(MyRectangle(x, y, width, height, color))\n  repaint()","lang":"py"}
{"idx":1204,"func":" \npublic void actionPerformed (ActionEvent e) {\n    JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1205,"func":"def actionPerformed(self, e):\n    ch = self.getFileChooser()\n    result = ch.showSaveDialog(self.gui) \n    if result == JFileChooser.APPROVE_OPTION: \n        try:\n            f = ch.getSelectedFile()\n            ImageIO.write(self.canvasImage, \"png\", f)\n            self.originalImage = self.canvasImage\n            self.dirty = False\n        except IOException as ioe:\n            self.showError(ioe)\n            ioe.printStackTrace()","lang":"py"}
{"idx":1206,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";\n    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);\n    Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);\n    if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1207,"func":"def filter(source, start, end, dest, dstart, dend):\n    lsStart = ''\n    lsInsert = ''\n    lsEnd = ''\n    lsText = ''\n    print(\"debug: \" + str(moPattern))\n    print(\"debug: source: \" + source + \", start: \" + str(start) + \", end:\" + str(end) + \", dest: \" + dest + \", dstart: \" + str(dstart) + \", dend: \" + str(dend))\n    lsText = dest\n    if len(lsText) > 0:\n        lsStart = lsText[0:dstart]\n        print(\"debug: lsStart : \" + lsStart)\n        if source != '':\n            lsInsert = source\n            print(\"debug: lsInsert: \" + lsInsert)\n        lsEnd = lsText[dend:]\n        print(\"debug: lsEnd   : \" + lsEnd)\n        lsText = lsStart + lsInsert + lsEnd\n        print(\"debug: lsText  : \" + lsText)\n    loMatcher = moPattern.match(lsText)\n    print(\"debug: loMatcher.matches(): \" + str(loMatcher.matches()) + \", lsText: \" + lsText)\n    if not loMatcher.matches():\n        return ''\n    else: \n        return None","lang":"py"}
{"idx":1208,"func":" \nprivate static boolean isPermutation (String a, String b) {\n    char [] aArray = a.toCharArray ();\n    char [] bArray = b.toCharArray ();\n    if (a.length () != b.length ()) {\n        return false;\n    }\n    int found = 0;\n    for (int i = 0;\n    i < aArray.length; i ++) {\n        char eachA = aArray [i];\n        for (int k = 0;\n        k < bArray.length; k ++) {\n            if (eachA == bArray [k]) {\n                found ++;\n                bArray [k] = '\\uFFFF';\n                break;\n            }\n        }\n    }\n    return found == a.length ();\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":1209,"func":"def isPermutation(a, b):\n  aArray = list(a)\n  bArray = list(b)\n  if len(a) != len(b):\n    return False\n  found = 0\n  for i in range(len(aArray)):\n    eachA = aArray[i]\n    for k in range(len(bArray)):\n      if eachA == bArray[k]:\n        found += 1\n        bArray[k] = ''\n        break\n  return found == len(aArray)","lang":"py"}
{"idx":1210,"func":" \npublic void printSquare (int min, int max) {\n    for (int i = min;\n    i <= max; i ++) {\n        for (int j = i;\n        j <= max; j ++) {\n            System.out.print (j);\n        }\n        for (int k = min;\n        k < i; k ++) {\n            System.out.print (k);\n        }\n        System.out.println ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1211,"func":"def printSquare(min, max):\n    for i in range(min, max+1):\n        for j in range(i, max+1):\n            print(j, end=\"\")\n        for k in range(min, i):\n            print(k, end=\"\")\n        print()","lang":"py"}
{"idx":1212,"func":" \npublic static void shuffle (int [] array) {\n    if (random == null) random = new Random ();\n    int count = array.length;\n    for (int i = count;\n    i > 1; i --) {\n        swap (array, i - 1, random.nextInt (i));\n    }\n}\n\n\n\n\n\nimport random\n\n","lang":"java"}
{"idx":1213,"func":"def shuffle(array):\n    random.shuffle(array)","lang":"py"}
{"idx":1214,"func":" \npublic static void main (String [] args) {\n    int [] constraints = {2, 1, 0, 1};\n    List < boolean [] > items = new ArrayList < boolean [] > ();\n    boolean [] i1 = {true, false, true, false};\n    boolean [] i2 = {true, false, false, false};\n    boolean [] i3 = {false, true, false, true};\n    boolean [] i4 = {false, false, false, true};\n    items.add (i1);\n    items.add (i2);\n    items.add (i3);\n    items.add (i4);\n    backtrack (constraints, items);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1215,"func":"def backtrack(constraints, items): \n\tresult = [] \n\tfor item in items: \n\t\tif is_valid(item, constraints): \n\t\t\tresult.append(item) \n\treturn result\ndef is_valid(item, constraints): \n\tfor i in range(len(constraints)): \n\t\tif item[i] and constraints[i] == 0: \n\t\t\treturn False \n\treturn True","lang":"py"}
{"idx":1216,"func":" \nstatic String shuffle (String text) {\n    if (text.length () <= 1) return text;\n    int split = text.length () \/ 2;\n    String temp1 = shuffle (text.substring (0, split));\n    String temp2 = shuffle (text.substring (split));\n    if (Math.random () > 0.5) return temp1 + temp2;\n    else return temp2 + temp1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1217,"func":"def shuffle(text): \n    if len(text) <= 1: \n        return text\n\n    split = len(text) \/\/ 2 \n    temp1 = shuffle(text[: split]) \n    temp2 = shuffle(text[split :]) \n    if random.random() > 0.5: \n        return temp1 + temp2\n    else: \n        return temp2 + temp1","lang":"py"}
{"idx":1218,"func":" \npublic static void main (String [] args) {\n    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;\n    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }\n    System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n}","lang":"java"}
{"idx":1219,"func":"","lang":"py"}
{"idx":1220,"func":" \npublic void actionPerformed (ActionEvent e) {\n    pressed = ! pressed;\n    if (pressed) {\n        for (JMenuItem item : items) {\n            item.setText (item.getText () + \" changed\");\n            item.setMaximumSize (new Dimension (70, 50));\n            item.setPreferredSize (new Dimension (70, 50));\n            item.setMinimumSize (new Dimension (70, 50));\n            itemPanel.invalidate ();\n        }\n    } else {\n        for (JMenuItem item : items) {\n            item.setText (item.getText ().substring (0, item.getText ().length () - 8));\n            item.setMaximumSize (new Dimension (130, 50));\n            item.setPreferredSize (new Dimension (130, 50));\n            item.setMinimumSize (new Dimension (130, 50));\n            itemPanel.invalidate ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1221,"func":"def actionPerformed(self, e):\n    self.pressed = not self.pressed\n    if self.pressed:\n        for item in self.items:\n            item.setText(item.getText() + \" changed\")\n            item.setMaximumSize(70, 50)\n            item.setPreferredSize(70, 50)\n            item.setMinimumSize(70, 50)\n            self.itemPanel.invalidate()\n    else:\n        for item in self.items:\n            item.setText(item.getText()[:len(item.getText()) - 8])\n            item.setMaximumSize(130, 50)\n            item.setPreferredSize(130, 50)\n            item.setMinimumSize(130, 50)\n            self.itemPanel.invalidate()","lang":"py"}
{"idx":1222,"func":" \npublic static void main (String [] args) {\n    int [] [] matrix = new int [] [] {{1, 2, 2}, {2, 2, 3}, {0, 1, 2}};\n    int result = 1;\n    for (int i = 0;\n    i < matrix.length; i ++) {\n        result = result * matrix [i] [i];\n    }\n    System.out.println (\"Result: \" + result);\n}","lang":"java"}
{"idx":1223,"func":"matrix = [[1,2,2], [2,2,3], [0,1,2]]\nresult = 1\nfor i in range(len(matrix)): \n  result = result * matrix[i][i]\nprint(\"Result: \" + str(result))\n","lang":"py"}
{"idx":1224,"func":" \nstatic String encrypt (String data) {\n    String returned = new String (\"\");\n    for (char h : data.toCharArray ()) {\n        if (h == 'a') returned += \" a', 'c\";\n        if (h == 'b') returned += \"d\";\n        if (h == 'c') returned += \"e\";\n        if (h == 'd') returned += \"f\";\n        if (h == 'e') returned += \"g\";\n        if (h == 'f') returned += \"h\";\n        if (h == 'g') returned += \"i\";\n        if (h == 'h') returned += \"j\";\n        if (h == 'i') returned += \"k\";\n        if (h == 'j') returned += \"l\";\n        if (h == 'k') returned += \"m\";\n        if (h == 'l') returned += \"n\";\n        if (h == 'm') returned += \"o\";\n        if (h == 'n') returned += \"p\";\n        if (h == 'o') returned += \"q\";\n        if (h == 'p') returned += \"r\";\n        if (h == 'q') returned += \"s\";\n        if (h == 'r') returned += \"t\";\n        if (h == 's') returned += \"u\";\n        if (h == 't') returned += \"v\";\n        if (h == 'u') returned += \"w\";\n        if (h == 'v') returned += \"x\";\n        if (h == 'w') returned += \"y\";\n        if (h == 'x') returned += \"z\";\n        if (h == 'y') returned += \"a\";\n        if (h == 'z') returned += \"b\";\n    }\n    return returned;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1225,"func":"def encrypt(data): \n    returned = '' \n    code_dict = {\n        'a': 'c', 'b': 'd', 'c': 'e', 'd': 'f', 'e': 'g', \n        'f': 'h', 'g': 'i', 'h': 'j', 'i': 'k', 'j': 'l', \n        'k': 'm', 'l': 'n', 'm': 'o', 'n': 'p', 'o': 'q', \n        'p': 'r', 'q': 's', 'r': 't', 's': 'u', 't': 'v', \n        'u': 'w', 'v': 'x', 'w': 'y', 'x': 'z', 'y': 'a', \n        'z': 'b' \n    }\n    for char in data:\n        returned += code_dict[char] \n    return returned","lang":"py"}
{"idx":1226,"func":" \npublic void actionPerformed (ActionEvent e) {\n    ImageIcon widthIcon = new ImageIcon (\"LR-arrows.png\");\n    String scaleWidth = (String) JOptionPane.showInputDialog (null, \"What should the new width be?\", \"\", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);\n    ImageIcon heightIcon = new ImageIcon (\"UD-arrows.png\");\n    String scaleHeight = (String) JOptionPane.showInputDialog (null, \"What should the new height be?\", \"\", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);\n    double x = Double.parseDouble (scaleWidth);\n    double y = Double.parseDouble (scaleHeight);\n    int newWidth = (int) x;\n    int newHeight = (int) y;\n    frame.setSize (newWidth, newHeight);\n    scale (newWidth, newHeight);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1227,"func":"def actionPerformed (e): \n    widthIcon = ImageIcon (\"LR-arrows.png\")\n    scaleWidth = input (\"What should the new width be?\")\n    heightIcon = ImageIcon (\"UD-arrows.png\")\n    scaleHeight = input (\"What should the new height be?\")\n    x = float(scaleWidth)\n    y = float(scaleHeight)\n    newWidth = int (x)\n    newHeight = int (y)\n    frame.setSize (newWidth, newHeight)\n    scale (newWidth, newHeight)","lang":"py"}
{"idx":1228,"func":" \npublic static int binarySearch (int intToSearch, int [] sortedArray) {\n    int lower = 0;\n    int upper = sortedArray.length - 1;\n    while (lower <= upper) {\n        int mid = lower + (upper - lower) \/ 2;\n        if (intToSearch < sortedArray [mid]) upper = mid - 1;\n        else if (intToSearch > sortedArray [mid]) lower = mid + 1;\n        else return mid;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1229,"func":"def binarySearch(intToSearch, sortedArray): \n    lower = 0\n    upper = len(sortedArray) -1\n    \n    while lower <= upper:\n        mid = lower + (upper - lower) \/\/ 2\n        \n        if intToSearch < sortedArray[mid]:\n            upper = mid - 1\n        elif intToSearch > sortedArray[mid]:\n            lower = mid + 1\n        else:\n            return mid\n    \n    return -1","lang":"py"}
{"idx":1230,"func":" \npublic int solution (int X, int [] A) {\n    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1231,"func":"def solution(X, A):\n  size = len(A)\n  check = [0]*X\n  cmp = 0\n  time = -1\n  for x in range(0, size):\n    temp = A[x]\n    if temp <= X:\n      if check[temp-1] > 0:\n        continue\n      check[temp-1] += 1\n      cmp += 1\n\n    if cmp == X:\n      time = x\n      break\n  return time","lang":"py"}
{"idx":1232,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tic\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1233,"func":"def run():\n    try:\n        for i in range(2):\n            print(\"tic\")\n    except Exception as e:\n        print(e.__traceback__)","lang":"py"}
{"idx":1234,"func":" \nprivate static void createAndShowGUI () {\n    final JFrame frame = new JFrame ();\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.setLayout (new FlowLayout ());\n    JPanel operationButtons_ = new JPanel ();\n    JButton readerStopButton_ = new JButton ();\n    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor (\"Button.light\"));\n    readerStopButton_.setFont (new java.awt.Font (\"Geneva\", 0, 12));\n    readerStopButton_.setText (\"<html><center>READER<br>STOP<\/center><\/html>\\n\");\n    readerStopButton_.setToolTipText (\"<html><b>Stop<\/b> button is currently inactive.  \");\n    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));\n    readerStopButton_.setPreferredSize (new Dimension (66, 40));\n    operationButtons_.add (readerStopButton_);\n    readerStopButton_ = new JButton ();\n    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor (\"Button.light\"));\n    readerStopButton_.setFont (new java.awt.Font (\"Geneva\", 0, 12));\n    readerStopButton_.setText (\"<html><center>READER<br>STOP<\/center><\/html>\\n\");\n    readerStopButton_.setToolTipText (\"<html><b>Stop<\/b> button is currently inactive.  \");\n    System.out.println (readerStopButton_.getPreferredSize ());\n    readerStopButton_.setPreferredSize (new Dimension (66, 40));\n    operationButtons_.add (readerStopButton_);\n    operationButtons_.add (new JButton (\"yCoder.com\"));\n    frame.add (operationButtons_);\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1235,"func":"def createAndShowGUI():\n    frame = tk.Tk()\n    frame.wm_title(\"Frame\")\n    frame.geometry(\"800x600\")\n    operationbuttons_ = tk.Frame(frame, bg='lightgreen', borderwidth=5, relief='groove')\n    readerstopbutton_ = tk.Button(operationbuttons_, text=\"Reader stop\", font=(\"Geneva\",12), border width=0, width=66, height=40, bg='lightblue', relief=\"flat\")\n    readerstopbutton_.grid(row=0, column=0)\n    tk.Button(operationbuttons_, text=\"yCoder.com\").grid(row=0, column=1)\n    operationbuttons_.pack()","lang":"py"}
{"idx":1236,"func":" \npublic static void main (String [] args) {\n    Scanner scanner = new Scanner (System.in);\n    String line = scanner.nextLine ();\n    int trys = Integer.parseInt (line.trim ());\n    for (int i = 0;\n    i < trys; i ++) {\n        double probability = processTry (scanner);\n        System.out.println (probability);\n    }\n    scanner.close ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1237,"func":"def main():\n    scanner = input()\n    line = scanner.split(\" \")\n    trys = int(line[0])\n    for i in range(trys):\n        probability = processTry(scanner)\n        print(probability)","lang":"py"}
{"idx":1238,"func":" \nprotected void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Font font = new Font (\"Arial\", Font.BOLD, 48);\n    String text = \"Along time ago, in a galaxy, far, far away\";\n    Shape outline = font.createGlyphVector (g.getFontMetrics ().getFontRenderContext (), text).getOutline ();\n    AffineTransform transform = AffineTransform.getTranslateInstance (- outline.getBounds ().getX () + getWidth () \/ 2 - outline.getBounds ().width \/ 2, - outline.getBounds ().getY () + getHeight () \/ 2 - outline.getBounds ().height \/ 2);\n    outline = transform.createTransformedShape (outline);\n    g2d.fill (outline);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1239,"func":"def paintComponent (self, g):\n    super().paintComponent (g)\n    font = Font(\"Arial\", Font.BOLD, 48)\n    text = \"Along time ago, in a galaxy, far, far away\"\n    outline = font.createGlyphVector (g.getFontMetrics ().getFontRenderContext (), text).getOutline ()\n    transform = AffineTransform.getTranslateInstance (- outline.getBounds ().getX () + self.getWidth () \/ 2 - outline.getBounds ().width \/ 2, - outline.getBounds ().getY () + self.getHeight () \/ 2 - outline.getBounds ().height \/ 2)\n    outline = transform.createTransformedShape (outline)\n    g2d.fill (outline)","lang":"py"}
{"idx":1240,"func":" \npublic static void main (String [] args) {\n    HashMap < A, String > map = new HashMap < A, String > (4);\n    map.put (new A (), \"abc\");\n    map.put (new A (), \"def\");\n    Class clazz = map.getClass ();\n    Field table = clazz.getDeclaredField (\"table\");\n    table.setAccessible (true);\n    Map.Entry < Integer, String > [] realTable = (Map.Entry < Integer, String > []) table.get (map);\n    for (int i = 0;\n    i < realTable.length; i ++) {\n        System.out.println (String.format (\"Bucket : %d, Entry: %s\", i, bucketToString (realTable [i])));\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1241,"func":"def main():\n    map = {}\n    map['A'] = \"abc\"\n    map['A'] = \"def\"\n\n    for i in range(len(map.items())):\n        print(\"Bucket:{}, Entry:{}\".format(i,str(map.items()[i])))","lang":"py"}
{"idx":1242,"func":" \npublic int solution (int X, int [] A) {\n    int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) \/ 2;\n    List < Integer > arrayList = new ArrayList < Integer > ();\n    for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1243,"func":"def solution (X, A):  \n  sums = X * (X + 1) \/\/ 2\n  valueSet = set ()\n  numSum = 0\n  for i in range (len (A)):\n    if A [i] <= X and A [i] not in valueSet:\n      numSum += A [i]\n      if numSum == sums:\n        return i\n      valueSet.add (A [i])\n  return -1","lang":"py"}
{"idx":1244,"func":" \npublic static void printTable (String [] countries, int [] populations) {\n    if (countries.length == 0 || populations.length == 0 || countries.length != populations.length) {\n        return;\n    }\n    int longestCountry = Arrays.stream (countries).map (String :: toString).mapToInt (String :: length).max ().getAsInt ();\n    int longestPop = Arrays.stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().getAsInt ();\n    for (int i = 0;\n    i < countries.length; i ++) {\n        System.out.printf (\"%-\" + longestCountry + \"s | %\" + longestPop + \"d%n\", countries [i], populations [i]);\n    }\n}\n\n\n#====================\n\n\n","lang":"java"}
{"idx":1245,"func":"def printTable(countries, populations):\n    if len(countries) == 0 or len(populations) == 0 or len(countries) != len(populations):\n        return\n\n    longestCountry = max(len(str(item)) for item in countries)\n    longestPop = max(len(str(item)) for item in populations)\n\n    for i in range(len(countries)):\n        formatString = \"{:<\" + str(longestCountry) + \"} | {:>\" + str(longestPop) + \"}\"\n        print(formatString.format(countries[i], populations[i]))","lang":"py"}
{"idx":1246,"func":" \npublic void actionPerformed (ActionEvent e) {\n    System.out.println ();\n    System.out.println (\"Display Dialogs\");\n    for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\t\" + dialog.getTitle () + \" \" + dialog.isDisplayable ());\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1247,"func":"def actionPerformed(e):\n    print()\n    print(\"Display Dialogs\")\n    for window in Window.getWindows():\n        if isinstance(window, JDialog):\n            dialog = window\n            print(\"\\t{0} {1}\".format(dialog.getTitle(), dialog.isDisplayable()))","lang":"py"}
{"idx":1248,"func":" \npublic void actionPerformed (ActionEvent e) {\n    ImageIcon widthIcon = new ImageIcon (\"LR-arrows.png\");\n    String scaleWidth = (String) JOptionPane.showInputDialog (null, \"What should the new width be?\", \"\", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);\n    ImageIcon heightIcon = new ImageIcon (\"UD-arrows.png\");\n    String scaleHeight = (String) JOptionPane.showInputDialog (null, \"What should the new height be?\", \"\", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);\n    double x = Double.parseDouble (scaleWidth);\n    double y = Double.parseDouble (scaleHeight);\n    int newWidth = (int) x;\n    int newHeight = (int) y;\n    frame.setSize (newWidth, newHeight);\n    scale (newWidth, newHeight);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1249,"func":"def actionPerformed(e):\n    width_icon = ImageIcon(\"LR-arrows.png\")\n    scale_width = JOptionPane.showInputDialog(None,\"What should the new width be?\", \"\", JOptionPane.QUESTION_MESSAGE, width_icon, None, None)\n    height_icon = ImageIcon(\"UD-arrows.png\")\n    scale_height = JOptionPane.showInputDialog(None,\"What should the new height be?\", \"\", JOptionPane.QUESTION_MESSAGE, height_icon, None, None)\n    x = float(scale_width)\n    y = float(scale_height)\n    new_width = int(x)\n    new_height = int(y)\n    frame.setSize(new_width, new_height)\n    scale(new_width, new_height)","lang":"py"}
{"idx":1250,"func":" \npublic void start (Stage stage) throws Exception {\n    StackPane notedPane = new StackPane ();\n    notedPane.setPrefSize (20, 20);\n    notedPane.setMaxSize (Region.USE_PREF_SIZE, Region.USE_PREF_SIZE);\n    notedPane.setStyle (\"-fx-background-color: purple;\");\n    StackPane rootPane = new StackPane (notedPane);\n    rootPane.setPrefSize (400, 400);\n    StackPane.setAlignment (notedPane, Pos.BOTTOM_CENTER);\n    stage.setScene (new Scene (rootPane));\n    stage.show ();\n    Stage stickyNotesStage = new Stage ();\n    stickyNotesStage.initOwner (stage);\n    stickyNotesStage.initStyle (StageStyle.UNDECORATED);\n    StackPane stickyNotesPane = new StackPane ();\n    stickyNotesPane.setPrefSize (200, 200);\n    stickyNotesPane.setStyle (\"-fx-background-color: yellow;\");\n    stickyNotesStage.setScene (new Scene (stickyNotesPane));\n    notedPane.hoverProperty ().addListener ((ChangeListener < Boolean >) (observable, oldValue, newValue) -> {\n        if (newValue) {\n            stickyNotesStage.show ();\n        } else {\n            stickyNotesStage.hide ();\n        }\n    });\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1251,"func":"def start(stage):\n    noted_pane = StackPane()\n    noted_pane.setPrefSize(20,20)\n    noted_pane.setMaxSize(Region.USE_PREF_SIZE, Region.USE_PREF_SIZE)\n    noted_pane.setStyle(\"-fx-background-color: purple;\")\n    root_pane = StackPane(noted_pane)\n    root_pane.setPrefSize(400,400)\n    StackPane.setAlignment(noted_pane,Pos.BOTTOM_CENTER)\n    stage.setScene(Scene(root_pane))\n    stage.show()\n    sticky_notes_stage = Stage()\n    sticky_notes_stage.initOwner(stage)\n    sticky_notes_stage.initStyle(StageStyle.UNDECORATED)\n    sticky_notes_pane = StackPane()\n    sticky_notes_pane.setPrefSize(200, 200)\n    sticky_notes_pane.setStyle(\"-fx-background-color: yellow;\")\n    sticky_notes_stage.setScene(Scene(sticky_notes_pane))\n    noted_pane.hoverProperty().addListener((ChangeListener<Boolean>)(observable, oldValue, newValue) -> {\n        if (newValue): \n            sticky_notes_stage.show()\n        else:\n            sticky_notes_stage.hide()","lang":"py"}
{"idx":1252,"func":" \npublic static int [] solution (String S, int [] P, int [] Q) {\n    int [] arr = new int [S.length ()];\n    for (int i = 0;\n    i < S.length (); i ++) {\n        switch (S.charAt (i)) {\n            case 'A' :\n                arr [i] = 1;\n                break;\n            case 'C' :\n                arr [i] = 2;\n                break;\n            case 'G' :\n                arr [i] = 3;\n                break;\n            case 'T' :\n                arr [i] = 4;\n                break;\n            default :\n                break;\n        }\n    }\n    segmentNode root = buildTree (arr, 0, S.length () - 1);\n    int [] result = new int [P.length];\n    for (int i = 0;\n    i < P.length; i ++) {\n        result [i] = getMin (root, P [i], Q [i]);\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1253,"func":"def solution(S, P, Q):\n    arr = [0] * len(S)\n    for i in range(len(S)):\n        if S[i] == 'A':\n            arr[i] = 1\n        elif S[i] == 'C':\n            arr[i] == 2\n        elif S[i] == 'G':\n            arr[i] == 3\n        elif S[i] == 'T':\n            arr[i] == 4\n    root = buildTree(arr, 0, len(S)-1)\n    result = [0] * len(P)\n    for i in range(len(P)):\n        result[i] = getMin(root, P[i], Q[i])\n    return result","lang":"py"}
{"idx":1254,"func":" \nprivate static String join (String delimiter, String...parts) {\n    StringBuilder builder = new StringBuilder ();\n    for (String part : parts) {\n        if (! isEmpty (part)) {\n            if (builder.length () > 0) {\n                builder.append (delimiter);\n            }\n            builder.append (part);\n        }\n    }\n    return builder.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1255,"func":"def join(delimiter, *parts):\n    builder = []\n    for part in parts:\n        if part:\n            if len(builder) > 0:\n                builder.append(delimiter)\n            builder.append(part)\n    return ''.join(builder)","lang":"py"}
{"idx":1256,"func":" \npublic static void main (String [] args) throws IOException {\n    JFrame myFrame = new JFrame (\"myJfTitle\");\n    myFrame.setLayout (new BorderLayout ());\n    JButton myButton = new JButton (\"Click me\");\n    myButton.setAlignmentX (Component.CENTER_ALIGNMENT);\n    JProgressBar myBar = new JProgressBar ();\n    LayoutManager overlay = new OverlayLayout (myBar);\n    myBar.setLayout (overlay);\n    myBar.setValue (50);\n    myBar.add (myButton);\n    myFrame.add (myBar, BorderLayout.CENTER);\n    myFrame.pack ();\n    myFrame.setSize (new Dimension (300, 100));\n    myFrame.setVisible (true);\n}\n\n\n\n\n\nfrom tkinter import *\n\n","lang":"java"}
{"idx":1257,"func":"def main():\n    root = Tk()\n    root.title('MyJfTitle')\n\n    frame = Frame(root)\n    frame.pack(fill=BOTH, expand=1)\n\n    btn = Button(frame, text=\"Click me\")\n    btn.pack()\n\n    progress_bar = ttk.Progressbar(frame, orient=\"horizontal\", length=300, mode=\"determinate\")\n    progress_bar.pack()\n    progress_bar.set(50)\n\n    root.geometry(\"300x100\")\n    mainloop() \n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":1258,"func":" \npublic String startOz (String str) {\n    int len = str.length ();\n    if (len < 1) return new String (\"\");\n    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String (\"oz\");\n    if (str.charAt (0) == 'o') return new String (\"o\");\n    if (str.charAt (1) == 'z') return new String (\"z\");\n    return new String (\"\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1259,"func":"def startOz(str):\n  len = len(str)\n  if len < 1:\n    return \"\"\n    \n  if len > 1 and str[0] == \"o\" and str[1] == \"z\":\n    return \"oz\"\n    \n  if str[0] == \"o\":\n    return \"o\"\n    \n  if str[1] == \"z\":\n    return \"z\"\n    \n  return \"\"","lang":"py"}
{"idx":1260,"func":" \npublic static int TestTryFinallyBlock () {\n    int i = 0;\n    try {\n        i = 10;\n        return i;\n    } finally {\n        i = 40;\n        System.out.println (\"local: \" + i);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1261,"func":"def main():\n    i = 0\n    try:\n        i = 10\n        return i\n    finally:\n        i = 40\n        print('local:{}'.format(i))\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":1262,"func":" \npublic static void main (String [] args) throws UnknownHostException, IOException {\n    InetAddress inet;\n    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});\n    System.out.println (\"Sending Ping Request to \" + inet);\n    System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});\n    System.out.println (\"Sending Ping Request to \" + inet);\n    System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n}\n\n\n\n\n\n\nimport socket \n\n","lang":"java"}
{"idx":1263,"func":"def main():\n    ip1 = \"127.0.0.1\"\n    inet1 = socket.gethostbyaddr(ip1)\n    print (\"Sending Ping Request to \" + inet1[0])\n    reply1 = socket.getpublicaddress(ip1)\n    if reply1 == 0:\n        print (\"Host is NOT reachable\")\n    else:\n        print (\"Host is reachable\")\n\n    ip2 = \"173.194.32.38\"\n    inet2 = socket.gethostbyaddr(ip2)\n    print (\"Sending Ping Request to \" + inet2[0])\n    reply2 = socket.getpublicaddress(ip2)\n    if reply2 == 0:\n        print (\"Host is NOT reachable\")\n    else:\n        print (\"Host is reachable\")\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":1264,"func":" \npublic void run () {\n    try {\n        int retValue = pro.waitFor ();\n        println (\"Command exit with return value \" + retValue);\n        outStream.close ();\n        outStream = null;\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1265,"func":"def run():\n  try:\n    retValue = pro.waitFor()\n    print(\"Command exit with return value \" + str(retValue))\n    outStream.close()\n    outStream = None\n  except InterruptedException,e:\n    print e\n  except IOException,e:\n    print e","lang":"py"}
{"idx":1266,"func":" \npublic static void countString (String str) {\n    if (str != null) {\n        int length = str.length ();\n        char ch [] = str.toCharArray ();\n        Arrays.sort (ch);\n        if (length > 0) {\n            char x = ch [0];\n            int count = 1;\n            for (int i = 1;\n            i < length; i ++) {\n                if (ch [i] == x) {\n                    count ++;\n                } else {\n                    System.out.println (\"Number of Occurrence of '\" + ch [i - 1] + \"' is: \" + count);\n                    x = ch [i];\n                    count = 1;\n                }\n            }\n            System.out.println (\"Number of Occurrence of '\" + ch [length - 1] + \"' is: \" + count);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1267,"func":"def countString(str): \n    if str != None: \n        length = len(str) \n        chars = sorted(str) \n        if length > 0: \n            x = chars[0] \n            count = 1 \n            for i in range(1, length): \n                if (chars[i] == x): \n                    count += 1\n                else: \n                    print(\"Number of Occurrence of '\" + chars[i - 1] + \"' is: \" + str(count)) \n                    x = chars[i] \n                    count = 1 \n                    \n            print(\"Number of Occurrence of '\" + chars[length - 1] + \"' is: \" + str(count))","lang":"py"}
{"idx":1268,"func":" \n        public void actionPerformed (ActionEvent e) {\n            StringBuilder s = new StringBuilder ();\n            s.append (text1.getText ()).append (\"\\n\").append (text2.getText ());\n            System.out.println (s.toString ());\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":1269,"func":"def actionPerformed(e): \n  s = str(text1.getText()) + \"\\n\" + str(text2.getText()) \n  print(s)","lang":"py"}
{"idx":1270,"func":" \nprivate static int pow (int x, int n) {\n    if (n == 0) return 1;\n    if (n == 1) return x;\n    if (n < 0) {\n        if (x == 1 || (x == 2 && n == - 1)) return 1;\n        else return 0;\n    }\n    if ((n & 1) == 0) {\n        long num = pow (x * x, n \/ 2);\n        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;\n        return (int) num;\n    } else {\n        long num = x * pow (x * x, n \/ 2);\n        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;\n        return (int) num;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1271,"func":"def pow(x, n): \n    if n == 0: \n        return 1\n    elif n == 1: \n        return x \n    elif n < 0: \n        if x == 1 or (x == 2 and n == -1):\n            return 1\n        else: \n            return 0 \n    elif n & 1 == 0: \n        num = pow(x * x, n \/\/ 2)\n        if num > (2 ** 32) - 1: \n            return (2 ** 32) - 1\n        return int(num)\n    else: \n        num = x * pow(x * x, n \/\/ 2)\n        if num > (2 ** 32) - 1: \n            return (2 ** 32) - 1\n        return int(num)","lang":"py"}
{"idx":1272,"func":" \npublic static String toJavaMethodName (final String nonJavaMethodName) {\n    final StringBuilder nameBuilder = new StringBuilder ();\n    boolean capitalizeNextChar = false;\n    boolean first = true;\n    for (int i = 0;\n    i < nonJavaMethodName.length (); i ++) {\n        final char c = nonJavaMethodName.charAt (i);\n        if (! Character.isLetterOrDigit (c)) {\n            if (! first) {\n                capitalizeNextChar = true;\n            }\n        } else {\n            nameBuilder.append (capitalizeNextChar ? Character.toUpperCase (c) : Character.toLowerCase (c));\n            capitalizeNextChar = false;\n            first = false;\n        }\n    }\n    return nameBuilder.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1273,"func":"def toJavaMethodName(nonJavaMethodName):\n\tnameBuilder = \"\"\n\tcapitalizeNextChar = False\n\tfirst = True\n\tfor i in range(len(nonJavaMethodName)):\n\t\tc = nonJavaMethodName[i]\n\t\tif not c.isalnum():\n\t\t\tif not first:\n\t\t\t\tcapitalizeNextChar = True\n\t\telse:\n\t\t\tnameBuilder += (c.upper() if capitalizeNextChar else c.lower())\n\t\t\tcapitalizeNextChar = False\n\t\t\tfirst = False\n\treturn nameBuilder","lang":"py"}
{"idx":1274,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":1275,"func":"def getName(value):\n    negative = False\n    if value.startswith('-'):\n        negative = True\n        value = value[1:]\n    decimals = value.find('.')\n    decimalValue = None\n    if decimals >= 0:\n        decimalValue = value[decimals+1:]\n        value = value[:decimals]\n    name = processor.getName(value)\n    if name == '':\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n    if decimalValue != None and decimalValue != \"\":\n        zeroDecimalValue = \"\"\n        for i in range(len(decimalValue)):\n            zeroDecimalValue += \"0\"\n        if decimalValue == zeroDecimalValue:\n            name += SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue))\n        else:\n            name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    return name","lang":"py"}
{"idx":1276,"func":" \npublic void processRow (ResultSet rs) throws SQLException {\n    Long id = rs.getLong (\"CUSTOMER_ID\");\n    Customer customer = map.get (id);\n    if (customer != null) {\n        List brandList = customer.getBrands ();\n        if (brandsList == null) {\n            brandsList = new ArrayList < Brand > ();\n            customer.setBrands (brandsList);\n        }\n        Brand brand = new Brand ();\n        brand.setId (rs.getLong (\"CUSTOMER_BRAND_ID\"));\n        brand.setName (rs.getString (\"CUSTOMER_BRAND_NAME\"));\n        brandsList.add (brand);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1277,"func":"def processRow(rs):\n    customer_id = rs.getLong(\"CUSTOMER_ID\")\n    customer = map.get(customer_id)\n    if customer:\n        brandsList = customer.getBrands()\n        if not brandsList:\n            brandsList = []\n            customer.setBrands(brandsList)\n        brand = Brand()\n        brand.setId(rs.getLong(\"CUSTOMER_BRAND_ID\"))\n        brand.setName(rs.getString(\"CUSTOMER_BRAND_NAME\"))\n        brandsList.append(brand)","lang":"py"}
{"idx":1278,"func":" \nprivate void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {\n    if (right != null) {\n        right.printTree (out, true, indent + (isRight ? \"        \" : \" |      \"));\n    }\n    out.write (indent);\n    if (isRight) {\n        out.write (\" \/\");\n    } else {\n        out.write (\" \\\\\");\n    }\n    out.write (\"----- \");\n    printNodeValue (out);\n    if (left != null) {\n        left.printTree (out, false, indent + (isRight ? \" |      \" : \"        \"));\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1279,"func":"def print_tree(out, is_right, indent):\n  try:\n    if right is not None:\n      right.print_tree(out, True, indent + ('        ' if is_right else ' |      '))\n    out.write(indent)\n    out.write(' \/' if is_right else ' \\\\\\\\')\n    out.write('----- ')\n    print_node_value(out)\n    if left is not None:\n      left.print_tree(out, False, indent + (True if is_right else '        '))\n  except IOException:\n    print('An error occured')","lang":"py"}
{"idx":1280,"func":" \npublic View getView (int position, View convertView, ViewGroup parent) {\n    convertView = mInflater.inflate (R.layout.listview_row, null);\n    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);\n    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);\n    Item item = data.get (position);\n    tvName.setText (item.getName ());\n    myTimer.setTimer (tvTimer, item.getTime ());\n    return convertView;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1281,"func":"def getView(self, position, convertView, parent):\n    convertView = self.mInflater.inflate(R.layout.listview_row, None)\n    tvTimer = convertView.findViewById(R.id.textview_timer)\n    tvName = convertView.findViewById(R.id.textview_name)\n    item = self.data[position]\n    tvName.setText(item.getName())\n    myTimer.setTimer(tvTimer, item.getTime())\n    return convertView","lang":"py"}
{"idx":1282,"func":" \nprivate String getContactName (Context context, String number) {\n    String name = null;\n    String [] projection = new String [] {ContactsContract.PhoneLookup.DISPLAY_NAME, ContactsContract.PhoneLookup._ID};\n    Uri contactUri = Uri.withAppendedPath (ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode (number));\n    Cursor cursor = context.getContentResolver ().query (contactUri, projection, null, null, null);\n    if (cursor != null) {\n        if (cursor.moveToFirst ()) {\n            name = cursor.getString (cursor.getColumnIndex (ContactsContract.PhoneLookup.DISPLAY_NAME));\n            Log.v (TAG, \"Started uploadcontactphoto: Contact Found @ \" + number);\n            Log.v (TAG, \"Started uploadcontactphoto: Contact name  = \" + name);\n        } else {\n            Log.v (TAG, \"Contact Not Found @ \" + number);\n        }\n        cursor.close ();\n    }\n    return name;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1283,"func":"def getContactName(context, number):\n    name = None\n    projection = [\"ContactsContract.PhoneLookup.DISPLAY_NAME\", \"ContactsContract.PhoneLookup._ID\"]\n    contactUri = Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode(number))\n\n    cursor = context.getContentResolver().query(contactUri, projection, None, None, None)\n    if cursor:\n        if cursor.moveToFirst():\n            name = cursor.getString(cursor.getColumnIndex(\"ContactsContract.PhoneLookup.DISPLAY_NAME\"))\n            Log.v(TAG, \"Started uploadcontactphoto: Contact Found @ \" + number)\n            Log.v(TAG, \"Started uploadcontactphoto: Contact name  = \" + name)\n        else:\n            Log.v(TAG, \"Contact Not Found @ \" + number)\n        cursor.close()\n    return name","lang":"py"}
{"idx":1284,"func":" \npublic static String myTrim (String input, String list) {\n    String r = \"\";\n    for (int i = 0;\n    i < input.length (); i ++) {\n        int k = 0;\n        for (; k < list.length (); k ++) {\n            if (input.charAt (i) == list.charAt (k)) {\n                break;\n            }\n        }\n        if (k == list.length ()) r += input.charAt (i);\n    }\n    return r;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1285,"func":"def myTrim(input, list): \n    r = \"\" \n    for i in range(len(input)): \n        k = 0\n        for j in range(len(list)): \n            if input[i] == list[j]: \n                break\n            k += 1\n        if k == len(list):\n            r += input[i] \n    return r","lang":"py"}
{"idx":1286,"func":" \n            public void run () {\n                try {\n                    runs = true;\n                    if (noColor < 2) {\n                        noColor ++;\n                        changeBtnForegroung (clr [noColor]);\n                    } else {\n                        noColor = 0;\n                        changeBtnForegroung (clr [noColor]);\n                    }\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n                    border = new EmptyBorder (0, 5, 10, 5);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n                    border = new EmptyBorder (0, 0, 10, 10);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n                    border = new EmptyBorder (5, 10, 5, 0);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n                    border = new EmptyBorder (10, 10, 0, 0);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));\n                    border = new EmptyBorder (5, 5, 5, 5);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    count ++;\n                } catch (Exception e) {\n                    System.out.println (e);\n                }\n            }}\n        ).start ();\n    }\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1287,"func":"def run(): \n  try: \n    runs = True\n    if noColor < 2: \n      noColor += 1\n      changeBtnForegroung(clr[noColor])\n    else: \n      noColor = 0\n      changeBtnForegroung(clr[noColor])\n\n    changeBtnMargin(Insets(initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10))\n    border = EmptyBorder(0, 5, 10, 5)\n    changePnlBorder(border)\n\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10))\n    border = EmptyBorder(0, 0, 10, 10)\n    changePnlBorder(border)\n\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10))\n    border = EmptyBorder(5, 10, 5, 0)\n    changePnlBorder(border)\n\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10))\n    border = EmptyBorder(10, 10, 0, 0)\n    changePnlBorder(border)\n\n    time.sleep(100)\n    changeBtnMargin(Insets(initMargin.top, initMargin.left, initMargin.bottom, initMargin.right))\n    border = EmptyBorder(5, 5, 5, 5)\n    changePnlBorder(border)\n\n    time.sleep(100)\n    count += 1\n\n  except Exception as e: \n    print(e)","lang":"py"}
{"idx":1288,"func":" \npublic static String join (String separator, String...values) {\n    if (values.length == 0) return \"\";\n    char [] sep = separator.toCharArray ();\n    int totalSize = (values.length - 1) * sep.length;\n    for (int i = 0;\n    i < values.length; i ++) {\n        if (values [i] == null) values [i] = \"\";\n        else totalSize += values [i].length ();\n    }\n    char [] joined = new char [totalSize];\n    int pos = 0;\n    for (int i = 0, end = values.length - 1;\n    i < end; i ++) {\n        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());\n        pos += values [i].length ();\n        System.arraycopy (sep, 0, joined, pos, sep.length);\n        pos += sep.length;\n    }\n    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());\n    return new String (joined);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1289,"func":"def join(separator, *values): \n  if (len(values) == 0): \n    return \"\"\n\n  sep = list(separator) \n  totalSize = (len(values) - 1) * len(sep) \n  for i in range(len(values)): \n    if (values[i] == None): \n      values[i] = \"\"\n    else:\n      totalSize += len(values[i])  \n\n  joined = [''] * totalSize \n  pos = 0 \n\n  for i in range(len(values) - 1): \n    joined[pos:pos + len(values[i])] = list(values[i]) \n    pos += len(values[i]) \n    joined[pos:pos + len(sep)] = sep \n    pos += len(sep) \n\n  joined[pos:pos + len(values[len(values) - 1])] = list(values[len(values) - 1]) \n  return ''.join(joined)","lang":"py"}
{"idx":1290,"func":" \npublic static void main (final String [] argv) throws NoSuchMethodException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n    final String methodName;\n    final Method method;\n    final Main main;\n    main = new Main ();\n    if (argv.length == 0) {\n        methodName = \"foo\";\n    } else {\n        methodName = \"bar\";\n    }\n    method = Main.class.getDeclaredMethod (methodName, int.class);\n    main.car (method, 42);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1291,"func":"def main(argv):\n    main = Main()\n    if len(argv) == 0:\n        methodName = \"foo\"\n    else:\n        methodName = \"bar\"\n    method = Main.getDeclaredMethod(methodName, int)\n    main.car(method, 42)","lang":"py"}
{"idx":1292,"func":"\n\n\n","lang":"java"}
{"idx":1293,"func":"def wf():\n    choice = input(\"What is your choice? (x\/o)\")\n    while choice != 'x' and choice != 'o': \n        print(\"You must enter x or o!\")\n        choice = input(\"What is your choice? (x\/o)\")\n    return choice","lang":"py"}
{"idx":1294,"func":" \npublic static String toHexString (byte [] bytes) {\n    StringBuilder hexString = new StringBuilder ();\n    for (int i = 0;\n    i < bytes.length; i ++) {\n        String hex = Integer.toHexString (0xFF & bytes [i]);\n        if (hex.length () == 1) {\n            hexString.append ('0');\n        }\n        hexString.append (hex);\n    }\n    return hexString.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1295,"func":"def toHexString(bytes):\n    hexString = ''\n    for i in bytes:\n        hex = format(i, '02x')\n        hexString += hex\n    return hexString","lang":"py"}
{"idx":1296,"func":" \npublic static double sqrt (int n) {\n    double low = 0;\n    double high = n;\n    double mid = (high - low) \/ 2;\n    while (Math.abs ((mid * mid) - n) > 0.000000000001) {\n        if ((mid * mid) > n) {\n            high = mid;\n            mid = (high - low) \/ 2;\n        } else {\n            low = mid;\n            mid = mid + ((high - low) \/ 2);\n        }\n    }\n    return mid;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1297,"func":"def sqrt(n):\n    low = 0\n    high = n\n    mid = (high - low) \/ 2\n    while abs((mid * mid) - n) > 0.000000000001:\n        if (mid*mid)>n:\n            high = mid\n            mid = (high - low) \/ 2\n        else:\n            low = mid\n            mid = mid + ((high - low) \/ 2)\n\n    return mid","lang":"py"}
{"idx":1298,"func":" \npublic boolean isAnagram (String s1, String s2) {\n    StringBuilder sb1 = new StringBuilder ();\n    StringBuilder sb2 = new StringBuilder ();\n    if (s1.length () != s2.length ()) return false;\n    char arr1 [] = s1.toCharArray ();\n    char arr2 [] = s2.toCharArray ();\n    Arrays.sort (arr1);\n    Arrays.sort (arr2);\n    for (char c : arr1) {\n        sb1.append (c);\n    }\n    for (char c : arr2) {\n        sb2.append (c);\n    }\n    System.out.println (sb1.toString ());\n    System.out.println (sb2.toString ());\n    if (sb1.toString ().equals (sb2.toString ())) return true;\n    else return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1299,"func":"def isAnagram(s1, s2): \n    if len(s1) != len(s2): \n        return False\n    arr1 = sorted(s1) \n    arr2 = sorted(s2) \n    if arr1 == arr2: \n        return True\n    else: \n        return False","lang":"py"}
{"idx":1300,"func":" \npublic synchronized void run () {\n    try {\n        while (true) {\n            System.out.println (info);\n            wait ();\n        }\n    } catch (Exception e) {\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1301,"func":"def run(self):\n   while True: \n       print(self.info)\n       self.wait()","lang":"py"}
{"idx":1302,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1303,"func":"def getName(value):\n    buffer = ''\n    high = ''\n    low = ''\n    if len(value) < getPartDivider(): \n        high = ''\n        low = value\n    else:\n        index = len(value) - getPartDivider()\n        high = value[0:index]\n        low = value[index:]\n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n    if highName != '': \n        buffer = buffer + highName\n        buffer = buffer + SEPARATOR\n        buffer = buffer + getToken()\n        if lowName != '':\n            buffer = buffer + SEPARATOR\n    if lowName != '':\n        buffer = buffer + lowName\n    return buffer","lang":"py"}
{"idx":1304,"func":" \n        public int compare (Entry < String, Integer > obj1, Entry < String, Integer > obj2) {\n            return obj1.getValue ().compareTo (obj2.getValue ());\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":1305,"func":"def compare(obj1, obj2):\n    return obj1[1].__cmp__(obj2[1])","lang":"py"}
{"idx":1306,"func":" \npublic static void main (String...args) {\n    processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0\", \"1.30\", \"0001.00\", \"3.141592\"};\n    for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1307,"func":"def main():\n    processor = DefaultProcessor()\n    values = [0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE]\n    strValues = [\"0\", \"1.30\", \"0001.00\", \"3.141592\"]\n    for val in values:\n        print(str(val) + \" = \" + processor.getName(val))\n    for strVal in strValues:\n        print(strVal + \" = \" + processor.getName(strVal))\n    bigNumber = ''\n    for d in range(66):\n        bigNumber += chr(random.randint(0,10) + ord('0'))\n    bigNumber += '.'\n    for d in range(26):\n        bigNumber += chr(random.randint(0,10) + ord('0'))\n    print(bigNumber + \" = \" + processor.getName(bigNumber))","lang":"py"}
{"idx":1308,"func":" \nprivate HSSFFont transform (HSSFWorkbook workbookNew, XSSFFont fontOld) {\n    HSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1309,"func":"def transform(workbookNew, fontOld):\n    fontNew = workbookNew.createFont()\n    fontNew.setBoldweight(fontOld.getBoldweight())\n    fontNew.setCharSet(fontOld.getCharSet())\n    fontNew.setColor(fontOld.getColor())\n    fontNew.setFontName(fontOld.getFontName())\n    fontNew.setFontHeight(fontOld.getFontHeight())\n    fontNew.setItalic(fontOld.getItalic())\n    fontNew.setStrikeout(fontOld.getStrikeout())\n    fontNew.setTypeOffset(fontOld.getTypeOffset())\n    fontNew.setUnderline(fontOld.getUnderline())\n    return fontNew","lang":"py"}
{"idx":1310,"func":" \nprotected void onCreate (Bundle savedInstanceState) {\n    super.onCreate (savedInstanceState);\n    setContentView (R.layout.activity_main);\n    Window window = this.getWindow ();\n    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);\n    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);\n    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);\n    txtMessage = (TextView) findViewById (R.id.txtMesssage);\n    Button buttonOne = (Button) findViewById (R.id.block1);\n    Button buttonTwo = (Button) findViewById (R.id.block2);\n    Button buttonThree = (Button) findViewById (R.id.block3);\n    Button buttonFour = (Button) findViewById (R.id.block4);\n    Button buttonFive = (Button) findViewById (R.id.block5);\n    Button buttonSix = (Button) findViewById (R.id.block6);\n    buttonOne.setOnClickListener (this);\n    buttonTwo.setOnClickListener (this);\n    buttonThree.setOnClickListener (this);\n    buttonFour.setOnClickListener (this);\n    buttonFive.setOnClickListener (this);\n    buttonSix.setOnClickListener (this);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1311,"func":"def on_create(self, saved_instance_state):\n    super().on_create(saved_instance_state)\n    self.setContentView(R.layout.activity_main)\n    window = self.getWindow()\n    window.addFlags(WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD)\n    window.addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED)\n    window.addFlags(WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON)\n    self.txt_message = self.findViewById(R.id.txtMessage)\n    button_one = self.findViewById(R.id.block1)\n    button_two = self.findViewById(R.id.block2)\n    button_three = self.findViewById(R.id.block3)\n    button_four = self.findViewById(R.id.block4)\n    button_five = self.findViewById(R.id.block5)\n    button_six = self.findViewById(R.id.block6)\n    button_one.setOnClickListener(self)\n    button_two.setOnClickListener(self)\n    button_three.setOnClickListener(self)\n    button_four.setOnClickListener(self)\n    button_five.setOnClickListener(self)\n    button_six.setOnClickListener(self)","lang":"py"}
{"idx":1312,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    gg.drawString (string, (getWidth () - width) \/ 2, 11);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1313,"func":"def paintComponent(self, g): \n    super().paintComponent(g)\n    gg = g.cast(Graphics2D)\n    gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON)\n    font = Font(\"Arial\", Font.PLAIN, 15)\n    string = \"Distance (m)\"\n    metrics = g.getFontMetrics(font)\n    width = metrics.stringWidth(string)\n    height = metrics.getHeight()\n    gg.setFont(font)\n    gg.drawString(string, (self.getWidth() - width) \/ 2, 11)","lang":"py"}
{"idx":1314,"func":" \npublic static boolean isBalanced (String str) {\n    boolean result = false;\n    if (str.length () < 2) return false;\n    Stack < Character > stack = new Stack < > ();\n    for (int i = 0;\n    i < str.length (); i ++) {\n        char ch = str.charAt (i);\n        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {\n            continue;\n        }\n        if (parenthesesMapLeft.containsKey (ch)) {\n            stack.push (ch);\n        } else {\n            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {\n                result = true;\n            } else {\n                return false;\n            }\n        }\n    }\n    if (! stack.isEmpty ()) return result = false;\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1315,"func":"def isBalanced(s): \n    stack = [] \n    parenthesisMap = {\"}\":\"{\",  \n                      \")\": \"(\", \n                      \"]\": \"[\"\n                     } \n    if len(s) < 2:\n        return False\n    for char in s:\n        if char in parenthesisMap.keys(): \n            topElement = stack.pop() if stack else '#'\n            if parenthesisMap[char] != topElement: \n                return False\n        else:\n            stack.append(char)\n\n    return not stack","lang":"py"}
{"idx":1316,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1317,"func":"def solution(X, A):\n    seen = set()\n    sum1 = 0\n    sum2 = 0\n    \n    for i in range(X+1):\n        sum1 += i\n    \n    for i in range(len(A)):\n        if A[i] in seen: continue\n        seen.add(A[i])\n        sum2 += A[i]\n        if sum1 == sum2: return i\n    return -1","lang":"py"}
{"idx":1318,"func":" \npublic static void main (String [] args) {\n    Scanner in = new Scanner (System.in);\n    int n = in.nextInt ();\n    int a [] [] = new int [n] [n];\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }\n    int l_sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        l_sum += a [i] [i];\n    }\n    int r_sum = 0;\n    for (int j = 0;\n    j < n; j ++) {\n        r_sum += a [j] [n - 1 - j];\n    }\n    int sum = l_sum + r_sum;\n    System.out.println (sum);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1319,"func":"def main(args): \n  n = int(input()) \n\n  a = [[int(input()) for _ in range(n)] \n              for _ in range(n)] \n  l_sum = 0\n  for i in range(n): \n    l_sum += a[i][i]  \n\n  r_sum = 0\n  for j in range(n): \n    r_sum += a[j][n - 1 - j]  \n  \n  sum = l_sum + r_sum\n  print(sum)","lang":"py"}
{"idx":1320,"func":" \nstatic String removeDuplicates (String s) {\n    StringBuilder noDupes = new StringBuilder ();\n    for (int i = 0;\n    i < s.length (); i ++) {\n        String si = s.substring (i, i + 1);\n        if (noDupes.indexOf (si) == - 1) {\n            noDupes.append (si);\n        }\n    }\n    return noDupes.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1321,"func":"def removeDuplicates(s):\n  no_dupes = \"\"\n  for i in s:\n    if i not in no_dupes:\n      no_dupes += i\n  return no_dupes","lang":"py"}
{"idx":1322,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    CountDownLatch theLatch = new CountDownLatch (100);\n    List < String > output = Collections.synchronizedList (new ArrayList < String > ());\n    SecureRandom random = new SecureRandom ();\n    ExecutorService service = Executors.newCachedThreadPool ();\n    for (int i = 0;\n    i < 4; i ++) {\n        service.execute (new CountDownTask (theLatch, output, random));\n    }\n    theLatch.await (1, TimeUnit.MINUTES);\n    service.shutdown ();\n    System.out.println (output.size ());\n}","lang":"java"}
{"idx":1323,"func":"import threading\nfrom random import Random\nfrom threading import Thread\nfrom typing import List, Optional\n","lang":"py"}
{"idx":1324,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1325,"func":"def solution(X,A):\n    l = len(A)\n    if X > l:\n        return -1 \n    isFilled = [0] * X \n    jumped = 0\n\n    for i in range(1,l):\n        x = A[i]\n        if x <= X:\n            if isFilled[x-1] == 0: \n                isFilled[x-1] = 1\n                jumped += 1\n                if jumped == X:\n                    return i\n    return -1","lang":"py"}
{"idx":1326,"func":" \npublic static String readFileAsString (String fileName, String charsetName) throws java.io.IOException {\n    java.io.InputStream is = new java.io.FileInputStream (fileName);\n    try {\n        final int bufsize = 4096;\n        int available = is.available ();\n        byte [] data = new byte [available < bufsize ? bufsize : available];\n        int used = 0;\n        while (true) {\n            if (data.length - used < bufsize) {\n                byte [] newData = new byte [data.length << 1];\n                System.arraycopy (data, 0, newData, 0, used);\n                data = newData;\n            }\n            int got = is.read (data, used, data.length - used);\n            if (got <= 0) break;\n            used += got;\n        }\n        return charsetName != null ? new String (data, 0, used, charsetName) : new String (data, 0, used);\n    } finally {\n        is.close ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1327,"func":"def read_file_as_string(file_name, charset_name=None):\n    with open(file_name, 'rb') as f:\n        file_data = f.read()\n\n    if charset_name is not None:\n        return file_data.decode(charset_name)\n    else:\n        return file_data.decode()","lang":"py"}
{"idx":1328,"func":" \n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n\n\n\n\nimport threading \nimport time\n\n","lang":"java"}
{"idx":1329,"func":"def ThreadAction(): \n    try: \n        time.sleep(100) \n    except InterruptedException: \n        print(\"Thread Interrupted!\")\n    finally: \n        import gc \n        gc.collect()\n\nstartThread = threading.Thread(target=ThreadAction)\nstartThread.start()","lang":"py"}
{"idx":1330,"func":" \npublic void shuffle (String input) {\n    List < Character > characters = new ArrayList < Character > ();\n    for (char c : input.toCharArray ()) {\n        characters.add (c);\n    }\n    StringBuilder output = new StringBuilder (input.length ());\n    while (characters.size () != 0) {\n        int randPicker = (int) (Math.random () * characters.size ());\n        output.append (characters.remove (randPicker));\n    }\n    System.out.println (output.toString ());\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1331,"func":"def shuffle (input):\n    characters = list(input)\n    output = \"\"\n    while len(characters) != 0:\n        rand_picker = int(random.random() * len(characters))\n        output += characters.pop(rand_picker)\n    print(output)","lang":"py"}
{"idx":1332,"func":" \nstatic public void main (String [] argv) {\n    System.out.println (\"start\");\n    new C0 ();\n    try {\n        System.out.println (\"retrieve item: \" + nested.innerItem);\n    } catch (Exception e) {\n        System.out.println (\"failed to retrieve item: \" + e.toString ());\n    }\n    System.out.println (\"finish\");\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1333,"func":"def main(argv):\n    print(\"start\")\n    C0()\n    try:\n        print(\"retrieve item: \" + nested.innerItem)\n    except Exception as e:\n        print(\"failed to retrieve item: \" + str(e))\n    print(\"finish\")","lang":"py"}
{"idx":1334,"func":" \npublic static void main (String [] args) {\n    String s = \"[\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test3\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.005, \\\"desc\\\": \\\"test4\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test5\\\"},\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test2\\\"}]\";\n    Gson gson = new Gson ();\n    Location [] al = gson.fromJson (s, Location [].class);\n    List < Location > tl = Arrays.asList (al);\n    Collections.sort (tl);\n    List < Location > fl = new ArrayList < Location > ();\n    Location current = null;\n    for (Iterator < Location > it = tl.iterator ();\n    it.hasNext ();) {\n        current = current == null ? it.next () : current;\n        Location ltmp = null;\n        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + \",\" + ltmp.desc;\n        fl.add (current);\n        current = ltmp;\n    }\n    System.out.println (gson.toJson (fl));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1335,"func":"def main(args): \n    s = \"[\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test3\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.005, \\\"desc\\\": \\\"test4\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test5\\\"},\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test2\\\"}]\"\n    \n    json_string = json.loads(s) \n    tl = sorted(json_string, key=lambda l: (l['lon'], l['lat'])) \n    current = None\n    fl = [] \n    for l in tl: \n        current = current or l\n        if l == current: \n            current['desc'] = current['desc'] + ',' + l['desc'] \n        else: \n            fl.append(current) \n            current = l \n    print(json.dumps(fl))","lang":"py"}
{"idx":1336,"func":" \npublic static void main (String [] args) {\n    ArrayList < String > keys = new ArrayList < > (Arrays.asList (\"1\", \"1\", \"1\", \"2\", \"2\", \"3\"));\n    ArrayList < String > values = new ArrayList < > (Arrays.asList (\"2016-06-22 07:18:45\", \"2016-06-22 08:18:45\", \"2016-06-22 09:18:45\", \"2016-06-22 03:18:45\", \"2016-06-22 04:18:45\", \"2016-06-22 01:18:45\"));\n    HashMap < String, String > map = new HashMap < String, String > ();\n    for (int i = 0;\n    keys.size () == values.size () && i < keys.size (); i ++) {\n        String key = keys.get (i);\n        String value = values.get (i);\n        if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {\n            map.put (key, value);\n        }\n    }\n    System.out.println (map);\n}","lang":"java"}
{"idx":1337,"func":"keys = [\"1\", \"1\", \"1\", \"2\", \"2\", \"3\"]\nvalues = [\"2016-06-22 07:18:45\", \"2016-06-22 08:18:45\", \"2016-06-22 09:18:45\", \"2016-06-22 03:18:45\", \"2016-06-22 04:18:45\", \"2016-06-22 01:18:45\"]\nmap = {}\nfor i in range(len(keys)):\n\tkey = keys[i]\n\tvalue = values[i]\n\tif key not in map or int(value.replace('-', '').replace(':', '')) > int(map[key].replace('-', '').replace(':', '')):\n\t\tmap[key] = value\nprint(map)\n","lang":"py"}
{"idx":1338,"func":" \npublic static void main (String [] args) {\n    List < Object > lc = Arrays.asList (new Object [] {'A', 'B', 'C', 'D'});\n    List < Object > lC = Arrays.asList (new Object [] {'a', 'b', 'c'});\n    List < Object > li = Arrays.asList (new Object [] {1, 2, 3, 4});\n    List < List < Object > > llo = new ArrayList < List < Object > > ();\n    llo.add (lc);\n    llo.add (lC);\n    llo.add (li);\n    CartesianIterable < Object > ci = new CartesianIterable < Object > (llo);\n    for (List < Object > lo : ci) show (lo);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1339,"func":"def main(args): \n    lc = ['A', 'B', 'C', 'D']\n    lC = ['a', 'b', 'c']\n    li = [1, 2, 3, 4]\n    llo = [lc, lC, li]\n    ci = CartesianIterable(llo)\n    for lo in ci: \n        print(lo)","lang":"py"}
{"idx":1340,"func":" \npublic int solution (final int X, final int [] A) {\n    Set < Integer > emptyPosition = new HashSet < Integer > ();\n    for (int i = 1;\n    i <= X; i ++) {\n        emptyPosition.add (i);\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        emptyPosition.remove (A [i]);\n        if (emptyPosition.size () == 0) {\n            return i;\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1341,"func":"def solution (X, A): \n    empty_positions = set()\n    for num in range(1, X+1):\n        empty_positions.add(num)\n        \n    for index, num in enumerate(A):\n        if num in empty_positions:\n            empty_positions.remove(num)\n        if len(empty_positions) == 0:\n            return index\n            \n    return -1","lang":"py"}
{"idx":1342,"func":" \npublic static void main (String [] args) {\n    JFrame frame = new JFrame (\"Application Name\");\n    JPanel iconPanel = new JPanel ();\n    JPanel grid = new JPanel (new FlowLayout ());\n    JButton firewallButton = new JButton (\"Firewall\");\n    JButton networkButton = new JButton (\"Network\");\n    JButton printerButton = new JButton (\"Printer\");\n    frame.add (iconPanel);\n    iconPanel.add (firewallButton);\n    iconPanel.add (networkButton);\n    iconPanel.add (printerButton);\n    grid.setBackground (Color.GREEN);\n    frame.setLayout (new GridLayout (1, 2, 3, 3));\n    frame.add (grid);\n    frame.add (iconPanel);\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);\n}","lang":"java"}
{"idx":1343,"func":"from tkinter import * \nroot = Tk() \niconPanel = Frame(root) \ngrid = Frame(root, bg=\"green\") \nfirewallButton = Button(iconPanel, text=\"Firewall\") \nnetworkButton = Button(iconPanel, text=\"Network\") \nprinterButton = Button(iconPanel, text=\"Printer\") \niconPanel.pack()\ngrid.pack()\nfirewallButton.pack()\nnetworkButton.pack()\nprinterButton.pack() \nroot.title(\"Application Name\") \nroot.geometry(\" centered to the screen\") \nroot.mainloop() \n","lang":"py"}
{"idx":1344,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1345,"func":"def solution(X, A):\n    seen, sum1, sum2 = set(), 0, 0\n    for i in range(X+1):\n        sum1 += i\n    for index, element in enumerate(A):\n        if element not in seen:\n            seen.add(element)\n            sum2 += element\n            if sum1 == sum2:\n                return index\n    return -1","lang":"py"}
{"idx":1346,"func":" \npublic static void main (String [] args) {\n    Node root = null;\n    DataInputStream reader = new DataInputStream (System.in);\n    int op = 0;\n    while (op != 6) {\n        try {\n            System.out.println (\"Enter Option:\\n1:Insert Front 2:Delete Front 3:Insert Rear 4:Delete Rear 5:Display List 6:Exit\");\n            op = Integer.parseInt (reader.readLine ());\n            switch (op) {\n                case 1 :\n                    System.out.println (\"Enter Value: \");\n                    int val = Integer.parseInt (reader.readLine ());\n                    root = insertNodeFront (val, root);\n                    display (root);\n                    break;\n                case 2 :\n                    root = removeNodeFront (root);\n                    display (root);\n                    break;\n                case 3 :\n                    System.out.println (\"Enter Value: \");\n                    val = Integer.parseInt (reader.readLine ());\n                    root = insertNodeRear (val, root);\n                    display (root);\n                    break;\n                case 4 :\n                    root = removeNodeRear (root);\n                    display (root);\n                    break;\n                case 5 :\n                    display (root);\n                    break;\n                default :\n                    System.out.println (\"Invalid Option\");\n                    break;\n            }\n        } catch (Exception e) {\n            e.printStackTrace ();\n        }\n    }\n    System.out.println (\"Exited!!!\");\n    try {\n        reader.close ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1347,"func":"def main (args):\n    root = None\n    op = 0\n\n    while op != 6:\n        print(\"Enter Option:\\n1:Insert Front 2:Delete Front 3:Insert Rear 4:Delete Rear 5:Display List 6:Exit\")\n        op = int(input())\n\n        if op == 1:\n            val = int(input(\"Enter Value: \"))\n            root = insertNodeFront(val, root)\n            display(root)\n        elif op == 2:\n            root = removeNodeFront(root)\n            display(root)\n        elif op == 3:\n            val = int(input(\"Enter Value: \"))\n            root = insertNodeRear(val, root)\n            display(root)\n        elif op == 4:\n            root = removeNodeRear(root)\n            display(root)\n        elif op == 5:\n            display(root)\n        else:\n            print(\"Invalid Option\")\n    \n    print(\"Exited!!!\")","lang":"py"}
{"idx":1348,"func":" \npublic static void main (String [] s) throws VTDException {\n    VTDGen vg = new VTDGen ();\n    AutoPilot ap = new AutoPilot ();\n    ap.selectXPath (\"\/\/part\/*[text()]\");\n    if (! vg.parseFile (\"d:\\\\xml\\\\soap.xml\", false)) {\n        System.out.println (\"invalid xml\");\n        System.exit (0);\n    }\n    VTDNav vn = vg.getNav ();\n    ap.bind (vn);\n    int i = 0;\n    while ((i = ap.evalXPath ()) != - 1) {\n        System.out.println (\" \" + vn.toRawString (i) + \" = \" + vn.toNormalizedString (vn.getText ()));\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1349,"func":"def main(s):\n    vg = VTDGen()\n    ap = AutoPilot()\n    ap.selectXPath(\"\/\/part\/*[text()]\")\n    if not vg.parseFile(\"d:\/\/xml\/soap.xml\", False):\n        print(\"invalid xml\")\n        exit(0)\n\n    vn = vg.getNav()\n    ap.bind(vn)\n    i = 0\n    while i != -1:\n        i = ap.evalXPath()\n        if i != -1:\n            print(\" %s = %s\" % (vn.toRawString(i), vn.toNormalizedString(vn.getText())))","lang":"py"}
{"idx":1350,"func":" \n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n\n\n\n\n","lang":"java"}
{"idx":1351,"func":"def run(): \n    try: \n        __import__('time').sleep(100) \n    except InterruptedException as e: \n        print(e) \n    __import__('gc').collect() \n\nthread = __import__('threading').Thread(target=run) \nthread.start()","lang":"py"}
{"idx":1352,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1353,"func":"def getName(value):\n    buffer = \"\"\n    high = \"\"\n    low = \"\"\n    if len(value) < getPartDivider():\n        high = \"\"\n        low = value\n    else:\n        index = len(value) - getPartDivider()\n        high = value[0:index]\n        low = value[index:]\n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n    if highName != \"\":\n        buffer += highName\n        buffer += SEPARATOR\n        buffer += getToken()\n        if lowName != \"\":\n            buffer += SEPARATOR\n    if lowName != \"\":\n        buffer += lowName\n    return buffer","lang":"py"}
{"idx":1354,"func":" \npublic static void main (String [] args) throws Exception {\n    Tweet [] tweets;\n    ObjectMapper mapper = new ObjectMapper ();\n    try {\n        File json = new File (\"test.json\");\n        tweets = mapper.readValue (json, Tweet [].class);\n        System.out.println (\"Java object created from JSON String :\");\n        Arrays.asList (tweets).forEach (System.out :: println);\n    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":1355,"func":"import json \nwith open(\"test.json\", \"r\") as f:\n    tweets = json.load(f)\nprint(\"Java object created from JSON String :\") \nfor tweet in tweets: \n    print(tweet) \n","lang":"py"}
{"idx":1356,"func":" \npublic Node reverse (Node previous, Node current) {\n    if (previous == null) return null;\n    if (previous.equals (head)) previous.setNext (null);\n    if (current == null) {\n        head = previous;\n        return head;\n    } else {\n        Node temp = current.getNext ();\n        current.setNext (previous);\n        reverse (current, temp);\n    }\n    return null;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1357,"func":"def reverse(previous, current):\n    if previous is None:\n        return None\n\n    if previous is head:\n        previous.next = None\n\n    if current is None:\n        head = previous\n        return head\n    else:\n        temp = current.next\n        current.next = previous\n        reverse(current, temp)\n\n    return None","lang":"py"}
{"idx":1358,"func":" \npublic boolean equals (Object obj) {\n    if (obj == null) {\n        return false;\n    }\n    if (! Person.class.isAssignableFrom (obj.getClass ())) {\n        return false;\n    }\n    final Person other = (Person) obj;\n    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {\n        return false;\n    }\n    if (this.age != other.age) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1359,"func":"def equals(self, obj):\n    if obj is None:\n        return False\n    if not isinstance(obj, Person):\n        return False\n    other = obj\n    if (self.name is None and other.name is not None) or (self.name is not None and self.name != other.name):\n        return False\n    if self.age != other.age:\n        return False\n    return True","lang":"py"}
{"idx":1360,"func":" \n        public void actionPerformed (ActionEvent e) {\n            dialog.dispose ();\n        }}\n    );\n\n\n\n\n\n","lang":"java"}
{"idx":1361,"func":"def actionPerformed(e):\n    dialog.destroy()","lang":"py"}
{"idx":1362,"func":" \npublic static void main (String args []) {\n    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;\n    System.out.println (\"Enter the number of elements: \");\n    Scanner sc = new Scanner (System.in);\n    int [] arr = new int [sc.nextInt ()];\n    System.out.println (\"Enter the elements: \");\n    for (int i = 0;\n    i < arr.length; i ++) {\n        int next = sc.nextInt ();\n        arr [i] = next;\n    }\n    for (int j = 0;\n    j < arr.length; j ++) {\n        if (arr [j] > max) max = arr [j];\n        else if (arr [j] < min) min = arr [j];\n    }\n    System.out.println (\"Highest Value in array: \" + max);\n    System.out.println (\"Smallest Value in array: \" + min);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1363,"func":"def main():\n  n, max, min = 0, float(\"-inf\"), float(\"inf\")\n  print(\"Enter the number of elements: \")\n  num_elements = int(input())\n  arr = []\n  print(\"Enter the elements: \")\n  for i in range(num_elements):\n    next_el = int(input())\n    arr.append(next_el)\n  \n  for j in range(num_elements):\n    if arr[j] > max:\n      max = arr[j]\n    elif arr[j] < min:\n      min = arr[j]\n\n  print(\"Highest Value in array: \" + str(max))\n  print(\"Smallest Value in array: \" + str(min))\n\nif __name__ == \"__main__\":\n  main()","lang":"py"}
{"idx":1364,"func":" \npublic static void printTable (String [] countries, int [] populations) {\n    if (countries.length != 0) {\n        int longestNameInput = countries [0].length ();\n        int longestPopInput = String.valueOf (populations [0]).length ();\n        for (int i = 0;\n        i < countries.length; i ++) {\n            int countLength = countries [i].length ();\n            int popLength = String.valueOf (populations [i]).length ();\n            if (countLength > longestNameInput) longestNameInput = countLength;\n            if (popLength > longestPopInput) longestPopInput = popLength;\n        }\n        for (int i = 0;\n        i < countries.length; i ++) {\n            System.out.print (countries [i]);\n            for (int j = 0;\n            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (\" \");\n            System.out.print (\" | \");\n            for (int k = 0;\n            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (\" \");\n            System.out.println (populations [i]);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1365,"func":"def printTable(countries, populations): \n    if len(countries) != 0: \n        longestNameInput = len(countries[0]) \n        longestPopInput = len(str(populations[0])) \n        for i in range(len(countries)): \n            countLength = len(countries[i]) \n            popLength = len(str(populations[i])) \n            if countLength > longestNameInput: \n                longestNameInput = countLength \n            if popLength > longestPopInput: \n                longestPopInput = popLength \n        for i in range(len(countries)): \n            print(countries[i], end = \"\") \n            for j in range(longestNameInput - len(countries[i])): \n                print(\" \", end = \"\") \n            print(\" | \", end = \"\") \n            for k in range(longestPopInput - len(str(populations[i]))): \n                print(\" \", end = \"\") \n            print(str(populations[i]))","lang":"py"}
{"idx":1366,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1367,"func":"def getName(value):\n  negative = False\n  if value.startswith(\"-\"):\n    negative = True\n    value = value[1:]\n\n  decimals = value.index(\".\")\n  decimalValue = None\n  if 0 <= decimals:\n    decimalValue = value[decimals+1:]\n    value = value[:decimals]\n\n  name = processor.getName(value)\n  if name == \"\":\n    name = ZERO_TOKEN\n  elif negative:\n    name = 'minus ' + SEPARATOR + name\n\n  if decimalValue != None and decimalValue != \"\":\n    zeroDecimalValue = \"\"\n    for i in range(len(decimalValue)):\n      zeroDecimalValue += \"0\"\n\n    if decimalValue == zeroDecimalValue:\n      name = name + SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue))\n    else:\n      name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    \n  return name","lang":"py"}
{"idx":1368,"func":" \nprivate BSTNode mirroeView (BSTNode node) {\n    if (node == null || (node.left == null && node.rigth == null)) return node;\n    BSTNode temp = node.left;\n    node.left = node.rigth;\n    node.rigth = temp;\n    mirroeView (node.left);\n    mirroeView (node.rigth);\n    return node;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1369,"func":"def mirrorView (node):\n    if not node or (not node.left and not node.right):\n        return node\n    temp = node.left\n    node.left = node.right\n    node.right = temp\n    mirrorView (node.left)\n    mirrorView (node.right)\n    return node","lang":"py"}
{"idx":1370,"func":" \npublic void type (String text) {\n    char c;\n    for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1371,"func":"def type(text):\n    for char in text:\n        ascii_code = ord(char)\n        if ascii_code <= 31 or ascii_code == 129:\n            pressControlKey(char)\n        else:\n            typeAsciiCode(char)","lang":"py"}
{"idx":1372,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1373,"func":"def solution(X, A): \n  leaves = set() \n  for i in range(len(A)): \n    leaves.add(A[i]) \n    if X in leaves and len(leaves) == X: \n      return i\n  return -1","lang":"py"}
{"idx":1374,"func":" \nprivate void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, Integer hash, XSSFCellStyle styleOld, HSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (workbookNew, (XSSFFont) styleOld.getFont ()));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1375,"func":"def transform(workbookOld, workbookNew, hash, styleOld, styleNew):\n    styleNew.alignment = styleOld.alignment\n    styleNew.border_bottom = styleOld.border_bottom\n    styleNew.border_left = styleOld.border_left\n    styleNew.border_right = styleOld.border_right\n    styleNew.border_top = styleOld.border_top\n    styleNew.data_format = transform(workbookOld, workbookNew, styleOld.data_format)\n    styleNew.fill_background_color = styleOld.fill_background_color\n    styleNew.fill_foreground_color = styleOld.fill_foreground_color\n    styleNew.fill_pattern = styleOld.fill_pattern\n    styleNew.font = transform(workbookNew, styleOld.font)\n    styleNew.hidden = styleOld.hidden\n    styleNew.indention = styleOld.indention\n    styleNew.locked = styleOld.locked\n    styleNew.vertical_alignment = styleOld.vertical_alignment\n    styleNew.wrap_text = styleOld.wrap_text\n    styleMap[hash] = styleNew","lang":"py"}
{"idx":1376,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1377,"func":"def solution (X, A):\n    leaves = set ()\n    for i in range (len (A)):\n        leaves.add (A[i])\n        if X in leaves and len (leaves) == X: \n            return i\n    return -1","lang":"py"}
{"idx":1378,"func":" \npublic static String decrypt (final String msg) {\n    final Pattern regex = Pattern.compile (\"((\\\\d\\\\d)(#)|(\\\\d))\");\n    final Matcher regexMatcher = regex.matcher (msg);\n    final StringBuffer result = new StringBuffer ();\n    String c;\n    while (regexMatcher.find ()) {\n        if (regexMatcher.group (2) == null) {\n            c = regexMatcher.group (1);\n        } else {\n            c = regexMatcher.group (2);\n        }\n        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));\n    }\n    return result.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1379,"func":"def decrypt(msg): \n    regex = re.compile(r\"((\\d\\d)(#)|(\\d))\") \n    regexMatcher = regex.search(msg) \n    result = [] \n    while regexMatcher: \n        if regexMatcher.group(2) == None: \n            c = regexMatcher.group(1) \n        else: \n            c = regexMatcher.group(2) \n        result.append(chr((int(c) + ord('a')) - 1)) \n        regexMatcher = regex.search(msg, regexMatcher.end()) \n    return \"\".join(result)","lang":"py"}
{"idx":1380,"func":" \n        public FilterResult head (Node node, int depth) {\n            if (node instanceof Comment) {\n                return FilterResult.REMOVE;\n            }\n            return FilterResult.CONTINUE;\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1381,"func":"def head(node, depth):\n    if isinstance(node, Comment):\n        return FilterResult.REMOVE\n    return FilterResult.CONTINUE","lang":"py"}
{"idx":1382,"func":" \npublic static int solution (int X, int [] A) {\n    int [] count = new int [X];\n    for (int i = 0;\n    i < A.length; i ++) {\n        try {\n            count [A [i] - 1] ++;\n        } catch (ArrayIndexOutOfBoundsException e) {\n        }\n        if (i >= X - 1) {\n            for (int j = 0;\n            j < count.length; j ++) {\n                if (count [j] == 0) {\n                    break;\n                }\n                if (j == count.length - 1) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1383,"func":"def solution(X, A):\n    count = [0]*X\n    for i in range(len(A)):\n        try:\n            count[A[i] - 1] += 1\n        except IndexError:\n            pass\n        if i >= X - 1:\n            for j in range(X):\n                if count[j] == 0:\n                    break\n                if j == X-1:\n                    return i\n    return -1","lang":"py"}
{"idx":1384,"func":" \npublic int [] zeroFront (int [] nums) {\n    if (nums == null) {\n        return null;\n    }\n    int [] result = new int [nums.length];\n    int zeroesPos = 0;\n    int othersPos = result.length - 1;\n    for (int i = 0;\n    i < nums.length; ++ i) {\n        if (nums [i] == 0) {\n            result [zeroesPos] = 0;\n            ++ zeroesPos;\n        } else {\n            result [othersPos] = nums [i];\n            -- othersPos;\n        }\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1385,"func":"def zeroFront(nums):\n    if nums == None:\n        return None\n    result = [0]*len(nums)\n    zeroesPos = 0\n    othersPos = len(nums)-1\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            result[zeroesPos] = 0\n            zeroesPos += 1\n        else:\n            result[othersPos] = nums[i]\n            othersPos -= 1\n    return result","lang":"py"}
{"idx":1386,"func":" \npublic void type (String text) {\n    char c;\n    for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1387,"func":"def type(text):  \n  c = \"\" \n  for ii in range(len(text)): \n    c = text[ii] \n    if c <= 31 or c == 129: \n      pressControlKey(c) \n    else: \n      typeAsciiCode(c)","lang":"py"}
{"idx":1388,"func":" \npublic static void main (String [] args) {\n    for (int i = 0;\n    i < 9; i ++) {\n        for (int j = 0;\n        j < 9; j ++) {\n            for (int k = 0;\n            k < 9; k ++) {\n                if (condition1) {\n                    System.out.println (\"Breaking from Loop K and J\");\n                    k = 9;\n                    j = 9;\n                }\n                if (condition2) {\n                    System.out.println (\"Breaking from Loop K, J and I\");\n                    k = 9;\n                    j = 9;\n                    i = 9;\n                }\n            }\n        }\n    }\n    System.out.println (\"End of I , J , K\");\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1389,"func":"def main(): \n    for i in range(9): \n        for j in range(9): \n            for k in range(9): \n                if condition1: \n                    print(\"Breaking from Loop K and J\") \n                    k = 9\n                    j = 9\n                if condition2: \n                    print(\"Breaking from Loop K, J and I\") \n                    k = 9\n                    j = 9\n                    i = 9\n    print(\"End of I , J , K\")","lang":"py"}
{"idx":1390,"func":" \n        public int compare (Kickstarter item1, Kickstarter item2) {\n            return item1.getTitle ().compareToIgnoreCase (item2.getTitle ());\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1391,"func":"def compare(item1, item2): \n   return item1.title.casefold() <=> item2.title.casefold()","lang":"py"}
{"idx":1392,"func":" \npublic void run () {\n    String threadName = Thread.currentThread ().getName ();\n    try {\n        first.lock ();\n        latch.countDown ();\n        System.out.println (threadName + \": locked first lock\");\n        latch.await ();\n        System.out.println (threadName + \": attempting to lock second lock\");\n        second.lock ();\n        System.out.println (threadName + \": never reached\");\n    } catch (InterruptedException e) {\n        throw new RuntimeException (e);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1393,"func":"def run(): \n    threadName = threading.current_thread().getName() \n    try: \n        first.acquire() \n        latch.countDown()\n        print(threadName + \": locked first lock\")\n        latch.wait() \n        print(threadName + \": attempting to lock second lock\")\n        second.acquire()\n        print(threadName + \": never reached\")\n    except InterruptedError:\n        print(\"Error occurred\")","lang":"py"}
{"idx":1394,"func":" \npublic void run () {\n    int i = 1;\n    while (i < 50) {\n        while (s.getState () != 3) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 3) System.out.println (\"t1 \" + i);\n            s.setState (1);\n            i = i + 3;\n            s.notifyAll ();\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1395,"func":"def run(): \n    i = 1 \n    while (i < 50): \n        while s.getState() != 3: \n            with s: \n                s.wait() \n                \n        with s: \n            if s.getState() == 3: \n                print(\"t1 \" + str(i)) \n            s.state = 1 \n            i = i + 3 \n            s.notifyAll()","lang":"py"}
{"idx":1396,"func":" \n        public void run () {\n            new SelectAll ().displayGUI ();\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1397,"func":"def run():\n    SelectAll().displayGUI()","lang":"py"}
{"idx":1398,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tac\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1399,"func":"def run ():\n    try:\n        for i in range (2):\n            print (\"tac\")\n    except Exception as e:\n        print (e .__stacktrace__)","lang":"py"}
{"idx":1400,"func":" \n        public void actionPerformed (ActionEvent e) {\n            if (w.hasNext ()) {\n                _textField.setText (w.next ().getName ());\n            } else {\n                timer.stop ();\n            }\n        }}\n    ;\n\n\n\n\n\n","lang":"java"}
{"idx":1401,"func":"def actionPerformed (e):\n    if (w.hasNext ()):\n        _textField.setText (w.next ().getName ())\n    else:\n        timer.stop ()","lang":"py"}
{"idx":1402,"func":" \n        public void run () {\n            TableFileChooser td = new TableFileChooser ();\n            td.prepareAndShowGUI ();\n        }}\n    );\n}","lang":"java"}
{"idx":1403,"func":"}\n","lang":"py"}
{"idx":1404,"func":" \npublic static void main (String [] args) {\n    int sayThisManyTimes = 5;\n    AtomicBoolean saidHello = new AtomicBoolean (false);\n    MyThread mt = new MyThread (sayThisManyTimes, saidHello);\n    mt.start ();\n    for (int i = 0;\n    i < sayThisManyTimes; i ++) {\n        while (saidHello.get ()) {\n        }\n        System.out.println (\"Hello \");\n        saidHello.set (true);\n    }\n}\n\n\n\n\n\nimport threading \n \n","lang":"java"}
{"idx":1405,"func":"def main(): \n    say_this_many_times = 5\n    said_hello = threading.Event()\n    mt = MyThread(say_this_many_times, said_hello)\n    mt.start() \n    for i in range(say_this_many_times): \n        said_hello.wait() \n        print(\"Hello\") \n        said_hello.clear()","lang":"py"}
{"idx":1406,"func":" \n        public void run () {\n            WhiteSpace ws = new WhiteSpace ();\n            Container gui = ws.getGui ();\n            JFrame f = new JFrame (\"White (OK Red) Space\");\n            f.add (gui);\n            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);\n            f.setLocationByPlatform (true);\n            f.setResizable (false);\n            f.pack ();\n            f.setVisible (true);\n        }}\n    ;","lang":"java"}
{"idx":1407,"func":"","lang":"py"}
{"idx":1408,"func":" \nprivate XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {\n    XSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1409,"func":"def transform(workbookNew, fontOld):\n  fontNew = workbookNew.createFont()\n  fontNew.setBoldweight(fontOld.getBoldweight())\n  fontNew.setCharSet(fontOld.getCharSet())\n  fontNew.setColor(fontOld.getColor())\n  fontNew.setFontName(fontOld.getFontName())\n  fontNew.setFontHeight(fontOld.getFontHeight())\n  fontNew.setItalic(fontOld.getItalic())\n  fontNew.setStrikeout(fontOld.getStrikeout())\n  fontNew.setTypeOffset(fontOld.getTypeOffset())\n  fontNew.setUnderline(fontOld.getUnderline())\n  return fontNew","lang":"py"}
{"idx":1410,"func":" \npublic void actionPerformed (ActionEvent e) {\n    try {\n        UIManager.setLookAndFeel (laf [index].getClassName ());\n        SwingUtilities.updateComponentTreeUI (frame);\n    } catch (Exception exc) {\n        exc.printStackTrace ();\n    }\n    index = (index + 1) % laf.length;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1411,"func":"def actionPerformed(e):\n  try:\n    UIManager.setLookAndFeel(laf[index].getClassName())\n    SwingUtilities.updateComponentTreeUI(frame)\n  except Exception as exc:\n    exc.printStackTrace()\n  index = (index + 1) % len(laf)","lang":"py"}
{"idx":1412,"func":" \npublic byte [] read (File file) throws IOException, FileTooBigException {\n    if (file.length () > MAX_FILE_SIZE) {\n        throw new FileTooBigException (file);\n    }\n    ByteArrayOutputStream ous = null;\n    InputStream ios = null;\n    try {\n        byte [] buffer = new byte [4096];\n        ous = new ByteArrayOutputStream ();\n        ios = new FileInputStream (file);\n        int read = 0;\n        while ((read = ios.read (buffer)) != - 1) {\n            ous.write (buffer, 0, read);\n        }\n    } finally {\n        try {\n            if (ous != null) ous.close ();\n        } catch (IOException e) {\n        }\n        try {\n            if (ios != null) ios.close ();\n        } catch (IOException e) {\n        }\n    }\n    return ous.toByteArray ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1413,"func":"def read(file):\n  if (os.path.getsize(file) > MAX_FILE_SIZE):\n    raise FileTooBigException (file)\n  ous = None\n  ios = None\n  try:\n    buffer = bytearray(4096)\n    ous = bytearray()\n    ios = open(file, 'rb')\n    read = 0\n    while (read = ios.readinto(buffer)) > 0:\n      ous.extend(buffer[:read])\n  finally:\n    if ous: \n      ous.close()\n    if ios:\n      ios.close()\n  return bytes(ous)","lang":"py"}
{"idx":1414,"func":" \n        public void run () {\n            JMenuBar menuBar = new JMenuBar ();\n            JMenu menu = new JMenu (\"A regular menu\");\n            menu.add (new JMenuItem (\"Menu item\"));\n            JMenu gridMenu = new JMenu (\"Menu with grid\");\n            gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));\n            gridMenu.add (\"Top left\");\n            gridMenu.add (\"Top right\");\n            gridMenu.add (\"Bottom left\");\n            gridMenu.add (\"Bottom right\");\n            menu.add (gridMenu);\n            menuBar.add (menu);\n            JFrame frame = new JFrame (\"Menus\");\n            frame.setJMenuBar (menuBar);\n            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n            frame.pack ();\n            frame.setVisible (true);\n        }}\n    );\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1415,"func":"def run(): \n    menu_bar = JMenuBar() \n    menu = JMenu(\"A regular menu\") \n    menu.add(JMenuItem(\"Menu item\")) \n    grid_menu = JMenu(\"Menu with grid\") \n    grid_menu.getPopupMenu().setLayout(GridLayout(2,2)) \n    grid_menu.add(\"Top left\") \n    grid_menu.add(\"Top right\") \n    grid_menu.add(\"Bottom left\") \n    grid_menu.add(\"Bottom right\") \n    menu.add(grid_menu) \n    menu_bar.add(menu) \n    frame = JFrame(\"Menus\") \n    frame.setJMenuBar(menu_bar) \n    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE) \n    frame.pack() \n    frame.setVisible(True)","lang":"py"}
{"idx":1416,"func":" \npublic static void main (String [] args) throws Exception {\n    int [] values = new int [10];\n    values [0] = 2;\n    System.out.print (values [0]);\n    for (int i = 1;\n    i < values.length; i ++) {\n        values [i] = values [i - 1] + 2;\n        System.out.print (\" \" + values [i]);\n    }\n}","lang":"java"}
{"idx":1417,"func":"values = [0] * 10\nvalues[0] = 2\nprint(values[0], end=\" \")\nfor i in range(1, len(values)):\n    values[i] = values[i-1] + 2\n    print(values[i], end=\" \")\n","lang":"py"}
{"idx":1418,"func":" \npublic static void main (String [] args) {\n    String s = \"this is a this is this a this yes this is a this what it may be i do not care about this\";\n    String a [] = s.split (\" \");\n    Map < String, Integer > words = new HashMap < > ();\n    for (String str : a) {\n        if (words.containsKey (str)) {\n            words.put (str, 1 + words.get (str));\n        } else {\n            words.put (str, 1);\n        }\n    }\n    System.out.println (words);\n}","lang":"java"}
{"idx":1419,"func":"s = 'this is a this is this a this yes this is a this what it may be i do not care about this'\nwords = {}\na = s.split()\nfor str in a:\n    if str in words:\n        words[str] += 1\n    else:\n        words[str] = 1\nprint(words)\n","lang":"py"}
{"idx":1420,"func":" \npublic static int count8 (int num) {\n    int count = 0;\n    boolean doubl = false;\n    while (true) {\n        int n = num % 10;\n        num = num \/ 10;\n        if (n == 8) {\n            if (doubl) {\n                count = count + 2;\n            } else {\n                count ++;\n            }\n            doubl = true;\n        } else {\n            doubl = false;\n        }\n        if (num == 0) break;\n    }\n    return count;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1421,"func":"def count8(num):\n    count = 0\n    double = False\n   \n    while True:\n        n = num % 10\n        num = num \/\/ 10\n        if n == 8:\n            if double == True:\n                count += 2\n            else:\n                count += 1\n            double = True\n        else:\n            double = False\n        if num == 0:\n            break\n    return count","lang":"py"}
{"idx":1422,"func":" \npublic String toString (Object obj) {\n    if (obj == null) return \"null\";\n    if (visited.contains (obj)) return \"...\";\n    visited.add (obj);\n    Class cl = obj.getClass ();\n    if (cl == String.class) return (String) obj;\n    if (cl.isArray ()) {\n        String r = cl.getComponentType () + \"[]{\";\n        for (int i = 0;\n        i < Array.getLength (obj); i ++) {\n            if (i > 0) r += \",\";\n            Object val = Array.get (obj, i);\n            if (cl.getComponentType ().isPrimitive ()) r += val;\n            else r += toString (val);\n        }\n        return r + \"}\";\n    }\n    String r = cl.getName ();\n    do {\n        r += \"[\";\n        Field [] fields = cl.getDeclaredFields ();\n        AccessibleObject.setAccessible (fields, true);\n        for (Field f : fields) {\n            if (! Modifier.isStatic (f.getModifiers ())) {\n                if (! r.endsWith (\"[\")) r += \",\";\n                r += f.getName () + \"=\";\n                try {\n                    Class t = f.getType ();\n                    Object val = f.get (obj);\n                    if (t.isPrimitive ()) r += val;\n                    else r += toString (val);\n                } catch (Exception e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        r += \"]\";\n        cl = cl.getSuperclass ();\n    } while (cl != null);\n    return r;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1423,"func":"def toString(obj):\n    if obj == None:\n        return \"null\"\n    if obj in visited:\n        return \"...\"\n    visited.append(obj)\n    cl = type(obj)\n    if cl == str:\n        return obj\n    if cl.__name__ == 'list' or cl.__name__ == 'tuple':\n        r = ''\n        for i in range(len(obj)):\n            if r != '':\n                r += ','\n            if type(obj[i]).__name__ in ['int', 'float', 'str']:\n                r += str(obj[i])\n            else:\n                r += toString(obj[i])\n        return cl.__name__ + \"[]{\" + r + \"}\"\n    r = cl.__name__\n    while cl:\n        r += \"[\"\n        fields = list(cl.__dict__.keys())\n        for f in fields:\n            if f[:2] != '__':\n                if r[-1] != '[':\n                    r += ','\n                r += f + \"=\"\n                t = type(cl.__dict__[f])\n                val = cl.__dict__[f]\n                if t.__name__ in ['int', 'float', 'str']:\n                    r += str(val)\n                else:\n                    r += toString(val)\n        r += \"]\"\n        cl = cl.__base__\n    return r","lang":"py"}
{"idx":1424,"func":" \npublic static String merge (String...strings) {\n    int maxLength = 0;\n    StringBuilder sb = new StringBuilder ();\n    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();\n    for (int i = 0;\n    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1425,"func":"def merge(*strings):\n     max_length = 0\n\n     for s in strings:\n          if len(s) > max_length:\n               max_length = len(s)\n\n     result = \"\"\n\n     for i in range(max_length):\n          for s in strings:\n               if len(s) > i:\n                    result = result + s[i]\n\n     return result","lang":"py"}
{"idx":1426,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int number;\n    if (\"\".equals (value)) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number \/ 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! \"\".equals (tensName) && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1427,"func":"def get_name(value): \n    buffer = \"\"\n    number = 0\n    if value == \"\":\n        number = 0\n    elif len(value) > 4:\n        number = int(value[-4:], 10)\n    else:\n        number = int(value, 10)\n    number %= 1000\n    if number >= 100:\n        buffer += unit_processor.get_name(number\/100) + \"SEPARATOR\"\n        buffer += SCALE.get_name(EXPONENT)\n    tens_name = tens_processor.get_name(number % 100)\n    if not tens_name == \"\" and number >= 100:\n        buffer += \"SEPARATOR\"\n    buffer += tens_name\n    return buffer","lang":"py"}
{"idx":1428,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    CharSequence out = super.filter (source, start, end, dest, dstart, dend);\n    if (out != null) {\n        source = out;\n        start = 0;\n        end = out.length ();\n    }\n    int len = end - start;\n    if (len == 0) {\n        return source;\n    }\n    int dlen = dest.length ();\n    for (int i = 0;\n    i < dstart; i ++) {\n        if (dest.charAt (i) == '.') {\n            return (dlen - (i + 1) + len > digits) ? \"\" : new SpannableStringBuilder (source, start, end);\n        }\n    }\n    for (int i = start;\n    i < end; ++ i) {\n        if (source.charAt (i) == '.') {\n            if ((dlen - dend) + (end - (i + 1)) > digits) return \"\";\n            else break;\n        }\n    }\n    return new SpannableStringBuilder (source, start, end);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1429,"func":"def filter(source, start, end, dest, dstart, dend):\n    out = super().filter(source, start, end, dest, dstart, dend)\n    if out is not None:\n        source = out\n        start = 0\n        end = len(out)\n        \n    length = end - start\n    if length == 0:\n        return source\n    \n    dest_length = len(dest)\n    for i in range(0, dstart):\n        if dest and dest[i] == '.':\n            return \"\" if (dest_length - (i + 1) + length > digits) else source[start:end]\n    \n    for i in range(start, end):\n        if source[i] == '.':\n            return \"\" if (dest_length - dend + (end - (i + 1)) > digits) else source[start:end]\n    \n    return source[start:end]","lang":"py"}
{"idx":1430,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int offset = NO_VALUE;\n    int number;\n    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number < 10) {\n        offset = (number % 10) - 1;\n    } else if (number < 20) {\n        offset = (number % 20) - 1;\n    }\n    if (offset != NO_VALUE && offset < TOKENS.length) {\n        buffer.append (TOKENS [offset]);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1431,"func":"def getName(value):\n    buffer = \"\"\n    offset = -1\n    number = 0\n    if len(value) > 3:\n        number = int(value[-3:], 10)\n    else:\n        number = int(value, 10)\n    number %= 100\n    if number < 10:\n        offset = (number % 10) - 1\n    elif number < 20:\n        offset = (number % 20) - 1\n    if offset != -1 and offset < len(TOKENS):\n        buffer += TOKENS[offset]\n    return buffer","lang":"py"}
{"idx":1432,"func":" \npublic static void main (String args []) {\n    inp = new Scanner (System.in);\n    String str = inp.nextLine ();\n    List < Character > arrlist = new ArrayList < Character > ();\n    for (int i = 0;\n    i < str.length (); i ++) {\n        arrlist.add (str.charAt (i));\n    }\n    for (int i = 0;\n    i < str.length (); i ++) {\n        int freq = Collections.frequency (arrlist, str.charAt (i));\n        System.out.println (\"Frequency of \" + str.charAt (i) + \"  is:   \" + freq);\n    }\n}","lang":"java"}
{"idx":1433,"func":"inp = input('enter the string: ')\nlst = []\nfor i in inp:\n    lst.append(i)\nfor i in lst:\n    freq = lst.count(i)\n    print('Frequency of ', i, 'is: ', freq)\n","lang":"py"}
{"idx":1434,"func":" \n        public void run () {\n            createAndShowGUI ();\n        }}\n    );\n}\n\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1435,"func":"def run():\n    createAndShowGUI()","lang":"py"}
{"idx":1436,"func":" \npublic static void main (String args []) throws java.io.IOException {\n    List < String > list = new ArrayList < String > ();\n    list.add (\"A\");\n    list.add (\"B\");\n    list.add (\"A\");\n    list.add (\"B\");\n    list.add (\"C\");\n    list.add (\"D\");\n    Collections.sort (list);\n    List < ArrayList < String > > arrays = new ArrayList < ArrayList < String > > ();\n    int k = 0;\n    for (int i = 0;\n    i < list.size ();) {\n        int count = Collections.frequency (list, list.get (i));\n        arrays.add (new ArrayList < String > ());\n        for (int j = 0;\n        j < count; j ++) {\n            arrays.get (k).add (list.get (i));\n        }\n        i += count;\n        k ++;\n    }\n    for (ArrayList < String > arr : arrays) {\n        for (String s : arr) {\n            System.out.print (s + \" \");\n        }\n        System.out.println ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1437,"func":"def main():  \n    list = [\"A\", \"B\", \"A\", \"B\", \"C\", \"D\"]  \n    list.sort() \n      \n    arraylist = [] \n    k = 0\n  \n    for i in range(len(list)): \n        count = list.count(list[i]) \n        \n        arraylist.append([]) \n        for j in range(count): \n            arraylist[k].append(list[i]) \n          \n        i += count - 1\n        k += 1\n  \n    for arr in arraylist: \n        for s in arr: \n            print(s,end=\" \") \n        print(\"\") \n  \nif __name__==\"__main__\": \n    main()","lang":"py"}
{"idx":1438,"func":" \npublic static String replacer (StringBuffer outBuffer) {\n    String data = outBuffer.toString ();\n    try {\n        data = data.replaceAll (\"%(?![0-9a-fA-F]{2})\", \"%25\");\n        data = data.replaceAll (\"\\\\+\", \"%2B\");\n        data = URLDecoder.decode (data, \"utf-8\");\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }\n    return data;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1439,"func":"def replacer(outBuffer):\n  data = outBuffer.toString()\n  try:\n    data = data.replace('%(?![0-9a-fA-F]{2})', '%25')\n    data = data.replace('\\\\+', '%2B')\n    data = urllib.parse.unquote(data, 'utf-8')\n  except Exception as e:\n    print(e)\n  return data","lang":"py"}
{"idx":1440,"func":" \nprivate void findPrevLine () throws IOException {\n    if (lastChar == - 1) {\n        in.seek (lastPosInFile);\n        lastChar = in.readByte ();\n    }\n    currentLineEnd = currentLineStart;\n    if (currentLineEnd == 0) {\n        currentLineEnd = - 1;\n        currentLineStart = - 1;\n        currentPos = - 1;\n        return;\n    }\n    long filePointer = currentLineStart - 1;\n    while (true) {\n        filePointer --;\n        if (filePointer < 0) {\n            break;\n        }\n        in.seek (filePointer);\n        int readByte = in.readByte ();\n        if (readByte == 0xA && filePointer != lastPosInFile) {\n            break;\n        }\n    }\n    currentLineStart = filePointer + 1;\n    currentPos = currentLineStart;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1441,"func":"def find_prev_line():\n\tif last_char == -1:\n\t\tin.seek(last_pos_in_file)\n\t\tlast_char = in.read_byte()\n\t\t\n\tcurrent_line_end = current_line_start\n\t\n\tif current_line_end == 0:\n\t\tcurrent_line_end = -1\n\t\tcurrent_line_start = -1\n\t\tcurrent_pos = -1\n\t\treturn \n\t\n\tfile_pointer = current_line_start -1 \n\t\n\twhile(True):\n\t\tfile_pointer -= 1 \n\t\tif file_pointer < 0:\n\t\t\tbreak\n\t\tin.seek(file_pointer)\n\t\tread_byte = in.read_byte()\n\t\tif read_byte == 0xA and file_pointer != last_pos_in_file:\n\t\t\tbreak\n\t\t\t\n\tcurrent_line_start = file_pointer + 1\n\tcurrent_pos = current_line_start","lang":"py"}
{"idx":1442,"func":" \npublic void propertyChange (PropertyChangeEvent pce) {\n    if (MVC_Model.PROGRESS.equals (pce.getPropertyName ())) {\n        view.setProgress ((Integer) pce.getNewValue ());\n    }\n    if (MVC_Model.PROGRESS1.equals (pce.getPropertyName ())) {\n        view.setProgressLabel ((String) pce.getNewValue ());\n    }\n    if (MVC_Model.PROGRESS2.equals (pce.getPropertyName ())) {\n        view.setIconLabel ((Icon) pce.getNewValue ());\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1443,"func":"def propertyChange(pce):\n    if(MVC_Model.PROGRESS == pce.getPropertyName()):\n        view.setProgress(pce.getNewValue())\n    elif(MVC_Model.PROGRESS1 == pce.getPropertyName()):\n        view.setProgressLabel(pce.getNewValue())\n    elif (MVC_Model.PROGRESS2 == pce.getPropertyName()):\n        view.setIconLabel(pce.getNewValue())","lang":"py"}
{"idx":1444,"func":" \npublic static String center (String s, int size, char pad) {\n    if (s == null || size <= s.length ()) return s;\n    StringBuilder sb = new StringBuilder (size);\n    for (int i = 0;\n    i < (size - s.length ()) \/ 2; i ++) {\n        sb.append (pad);\n    }\n    sb.append (s);\n    while (sb.length () < size) {\n        sb.append (pad);\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1445,"func":"def center(s, size, pad):\n  if s is None or size <= len(s): \n    return s\n\n  result = []\n  for i in range((size - len(s)) \/\/ 2): \n    result.append(pad)\n  result.append(s)\n\n  while(len(result) < size):\n    result.append(pad)\n\n  return \"\".join(result)","lang":"py"}
{"idx":1446,"func":" \npublic static String getDurationBreakdown (long millis) {\n    if (millis < 0) {\n        throw new IllegalArgumentException (\"Duration must be greater than zero!\");\n    }\n    long days = TimeUnit.MILLISECONDS.toDays (millis);\n    millis -= TimeUnit.DAYS.toMillis (days);\n    long hours = TimeUnit.MILLISECONDS.toHours (millis);\n    millis -= TimeUnit.HOURS.toMillis (hours);\n    long minutes = TimeUnit.MILLISECONDS.toMinutes (millis);\n    millis -= TimeUnit.MINUTES.toMillis (minutes);\n    long seconds = TimeUnit.MILLISECONDS.toSeconds (millis);\n    StringBuilder sb = new StringBuilder (64);\n    sb.append (days);\n    sb.append (\" Days \");\n    sb.append (hours);\n    sb.append (\" Hours \");\n    sb.append (minutes);\n    sb.append (\" Minutes \");\n    sb.append (seconds);\n    sb.append (\" Seconds\");\n    return (sb.toString ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1447,"func":"def getDurationBreakdown(millis): \n    if millis < 0: \n        raise Exception('Duration must be greater than zero!') \n    days = int(millis \/ (1000 * 24 * 60 * 60))\n    millis -= days * (1000 * 24 * 60 * 60)\n    hours = int(millis \/ (1000 * 60 * 60))\n    millis -= hours * (1000 * 60 * 60)\n    minutes = int(millis \/ (1000 * 60))\n    millis -= minutes * (1000 * 60)\n    seconds = int(millis \/ (1000))\n    output = '{} Days {} Hours {} Minutes {} Seconds'.format(days, hours, minutes, seconds)\n    return output","lang":"py"}
{"idx":1448,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    final char [] characterInput = S.toCharArray ();\n    final int [] integerInput = new int [characterInput.length];\n    for (int counter = 0;\n    counter < characterInput.length; counter ++) {\n        integerInput [counter] = characterMapping.get (characterInput [counter]);\n    }\n    int [] result = new int [P.length];\n    for (int index = 0;\n    index < P.length; index ++) {\n        if (P [index] == Q [index]) {\n            result [index] = integerInput [P [index]];\n            break;\n        }\n        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);\n        final int minimumValue = minimum (subArray);\n        result [index] = minimumValue;\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1449,"func":"def solution(S, P, Q):\n    characterInput = list(S)\n    integerInput = [0]*len(characterInput)\n    for i in range(len(characterInput)):\n        integerInput[i] = characterInput[i]\n    result = [0]*len(P)\n    for i in range(len(P)):\n        if P[i] == Q[i]:\n            result[i] = integerInput[P[i]]\n            break\n        subArray = integerInput[ P[i] : Q[i] + 1 ]\n        minimumValue = min(subArray)\n        result[i] = minimumValue\n    return result","lang":"py"}
{"idx":1450,"func":" \npublic void run () {\n    JLabel l = new JLabel (new ImageIcon (bi));\n    Border twoPartBorder = new CompoundBorder (new EmptyBorder (15, 15, 15, 15), new EtchedBorder ());\n    Border threePartBorder = new CompoundBorder (twoPartBorder, new EmptyBorder (15, 15, 15, 15));\n    l.setBorder (threePartBorder);\n    JFrame f = new JFrame (\"Three Part Border\");\n    f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);\n    f.setContentPane (l);\n    f.pack ();\n    f.setLocationByPlatform (true);\n    f.setVisible (true);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1451,"func":"def run():\n    l = label.Label(image.ImageIcon(bi))\n    two_part_border = borders.CompoundBorder(borders.EmptyBorder(15, 15, 15, 15), borders.EtchedBorder())\n    three_part_border = borders.CompoundBorder(two_part_border, borders.EmptyBorder(15, 15, 15, 15))\n    l.border = three_part_border\n    f = window.Window(\"Three Part Border\")\n    f.defaultCloseOperation = window.Window.DISPOSE_ON_CLOSE\n    f.contentPane = l\n    f.pack()\n    f.locationByPlatform = True\n    f.visible = True","lang":"py"}
{"idx":1452,"func":" \npublic static void main (String args []) {\n    JSch jsch = new JSch ();\n    Session session = null;\n    try {\n        session = jsch.getSession (\"username\", \"127.0.0.1\", 22);\n        session.setConfig (\"StrictHostKeyChecking\", \"no\");\n        session.setPassword (\"password\");\n        session.connect ();\n        Channel channel = session.openChannel (\"sftp\");\n        channel.connect ();\n        ChannelSftp sftpChannel = (ChannelSftp) channel;\n        sftpChannel.get (\"remotefile.txt\", \"localfile.txt\");\n        sftpChannel.exit ();\n        session.disconnect ();\n    } catch (JSchException e) {\n        e.printStackTrace ();\n    } catch (SftpException e) {\n        e.printStackTrace ();\n    }\n}","lang":"java"}
{"idx":1453,"func":"import jsch\njsch = jsch.JSch ()\nsession = None\ntry: \n    session = jsch.getSession (\"username\", \"127.0.0.1\", 22)\n    session.setConfig (\"StrictHostKeyChecking\", \"no\")\n    session.setPassword (\"password\")\n    session.connect ()\n    channel = session.openChannel (\"sftp\")\n    channel.connect ()\n    sftpChannel = channel.ChannelSftp ()\n    sftpChannel.get (\"remotefile.txt\", \"localfile.txt\")\n    sftpChannel.exit ()\n    session.disconnect ()\nexcept jsch.JSchException as e:\n    e.printStackTrace ()\nexcept jsch.SftpException as e:\n    e.printStackTrace ()\n","lang":"py"}
{"idx":1454,"func":" \npublic int tortoiseMoves () {\n    switch (tGen ()) {\n        case 1 :\n        case 2 :\n        case 3 :\n        case 4 :\n        case 5 :\n            return 3;\n        case 6 :\n        case 7 :\n        case 8 :\n            return 1;\n        case 9 :\n        case 10 :\n            return - 6;\n        default :\n            return 0;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1455,"func":"def tortoiseMoves():\n    move = tGen()\n    if move == 1 or move == 2 or move == 3 or move == 4 or move == 5:\n        return 3\n    elif move == 6 or move == 7 or move == 8:\n        return 1\n    elif move == 9 or move == 10:\n        return -6\n    else:\n        return 0","lang":"py"}
{"idx":1456,"func":" \npublic Object [] tokenizer (String value, String [] delimeters) {\n    List < String > list = new ArrayList < String > ();\n    for (String s : delimeters) {\n        if (value.contains (s)) {\n            String [] strArr = value.split (\"\\\\\" + s);\n            for (String str : strArr) {\n                list.add (str);\n                if (! list.contains (s)) {\n                    list.add (s);\n                }\n            }\n        }\n    }\n    Object [] newValues = list.toArray ();\n    return newValues;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1457,"func":"def tokenizer (value, delimiters): \n  list = []\n  for s in delimiters: \n    if s in value: \n      value_arr = value.split (s)\n      for v in value_arr: \n        list.append (v)\n        if s not in list: \n          list.append (s)\n  newValues = list\n  return newValues","lang":"py"}
{"idx":1458,"func":" \npublic void actionPerformed (ActionEvent e) {\n    int maxX = scrn.width - dialog.getWidth ();\n    int maxY = scrn.height - dialog.getHeight ();\n    if (x < maxX && y < maxY) {\n        x ++;\n        y ++;\n        dialog.setLocation (x, y);\n    } else {\n        ((Timer) e.getSource ()).stop ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1459,"func":"def actionPerformed (e):\n    maxX = scrn.width - dialog.getWidth ()\n    maxY = scrn.height - dialog.getHeight ()\n    if x < maxX and y < maxY:\n        x+=1\n        y+=1\n        dialog.setLocation (x, y)\n    else:\n        e.getSource ().stop ()","lang":"py"}
{"idx":1460,"func":" \npublic String startOz (String str) {\n    int len = str.length ();\n    if (len < 1) return new String (\"\");\n    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String (\"oz\");\n    if (str.charAt (0) == 'o') return new String (\"o\");\n    if (str.charAt (1) == 'z') return new String (\"z\");\n    return new String (\"\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1461,"func":"def startOz(str):\n  if len(str)<1:\n    return \"\"\n  elif len(str) > 1 and str[0] == 'o' and str[1] == 'z':\n    return \"oz\"\n  elif str[0] == 'o':\n    return \"o\"\n  elif str[1] == 'z':\n    return \"z\"\n  else:\n    return \"\"","lang":"py"}
{"idx":1462,"func":" \npublic static void main (String [] args) {\n    Random ran = new Random ();\n    int min, max;\n    Scanner sc = new Scanner (System.in);\n    System.out.println (\"Enter min range:\");\n    min = sc.nextInt ();\n    System.out.println (\"Enter max range:\");\n    max = sc.nextInt ();\n    int num = ran.nextInt (min);\n    int num1 = ran.nextInt (max);\n    System.out.println (\"Random Number between given range is \" + num1);\n}","lang":"java"}
{"idx":1463,"func":"import random\nmin = int(input(\"Enter min range:\"))\nmax = int(input(\"Enter max range:\"))\nnum1 = random.randint(min, max)\nprint(\"Random Number between given range is \" + str(num1))\n","lang":"py"}
{"idx":1464,"func":" \npublic void filter (String [] words, String text) {\n    for (int i = 0;\n    i < words.length; i ++) {\n        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {\n            System.out.println (text);\n            break;\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1465,"func":"def filter(words, text):\n    for word in words:\n        if word.lower() in text.lower():\n            print(text)\n            break","lang":"py"}
{"idx":1466,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int N = S.length ();\n    int M = P.length;\n    int [] result = new int [M];\n    lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;\n    for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1467,"func":"def solution(S,P,Q):\n    N = len(S)\n    M = len(P)\n    result = []\n    lastOccurrencesMap = [[0 for x in range(N)] for y in range(3)] \n  \n    lastA = -1\n    lastC = -1\n    lastG = -1\n\n    for i in range(N):\n        if S[i] == 'A':\n            lastA = i\n        elif S[i] == 'C':\n            lastC = i\n        elif S[i] == 'G':\n            lastG = i\n            \n        lastOccurrencesMap[0][i] = lastA\n        lastOccurrencesMap[1][i] = lastC\n        lastOccurrencesMap[2][i] = lastG\n\n    for i in range(M):\n        startIndex = P[i]\n        endIndex = Q[i]\n        minimum = 4\n        for n in range(3):\n            lastOccurence = getLastNucleotideOccurrence(startIndex, endIndex, n)\n            if lastOccurence != 0:\n                minimum = n + 1\n                break\n        result.append(minimum) \n\n    return result","lang":"py"}
{"idx":1468,"func":" \n        public void onClick (View v) {\n            Toast.makeText (container.getContext (), \"You clicked: \" + page + \". page.\", Toast.LENGTH_SHORT).show ();\n        }}\n    );\n\n\n\n\n    ","lang":"java"}
{"idx":1469,"func":"def on_click(view):\n        Toast.makeText(context, \"You clicked: \" + page + \". page.\", Toast.LENGTH_SHORT).show()","lang":"py"}
{"idx":1470,"func":" \n        public boolean accept (File pathname) {\n            if (pathname.isDirectory ()) {\n                pathname.listFiles (this);\n                pathname.delete ();\n            } else {\n                pathname.delete ();\n            }\n            return false;\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":1471,"func":"def accept(pathname):\n  if os.path.isdir(pathname):\n    for f in os.listdir(pathname):\n      accept(os.path.join(pathname,f))\n    os.rmdir(pathname)\n  else:\n    os.remove(pathname)\n  return False","lang":"py"}
{"idx":1472,"func":" \npublic static void main (String [] args) {\n    int number = 2345;\n    number = Math.min (3999, Math.max (1, number));\n    String asRomanNumerals = \"\";\n    String [] RN = {\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"};\n    int i = 0;\n    while (number > 0) {\n        switch (number % 10) {\n            case 1 :\n                asRomanNumerals = RN [i] + asRomanNumerals;\n                break;\n            case 2 :\n                asRomanNumerals = RN [i] + RN [i] + asRomanNumerals;\n                break;\n            case 3 :\n                asRomanNumerals = RN [i] + RN [i] + RN [i] + asRomanNumerals;\n                break;\n            case 4 :\n                asRomanNumerals = RN [i] + RN [i + 1] + asRomanNumerals;\n                break;\n            case 5 :\n                asRomanNumerals = RN [i + 1] + asRomanNumerals;\n                break;\n            case 6 :\n                asRomanNumerals = RN [i + 1] + RN [i] + asRomanNumerals;\n                break;\n            case 7 :\n                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + asRomanNumerals;\n                break;\n            case 8 :\n                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + RN [i] + asRomanNumerals;\n                break;\n            case 9 :\n                asRomanNumerals = RN [i] + RN [i + 2] + asRomanNumerals;\n                break;\n        }\n        number = (int) number \/ 10;\n        i += 2;\n    }\n    System.out.println (asRomanNumerals);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1473,"func":"def main(args):\n    number = 2345\n    number = min(3999, max(1, number)) \n    asRomanNumerals = \"\" \n    RN = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"] \n    i = 0\n    while number > 0:\n        if number % 10 == 1: \n            asRomanNumerals = RN[i] + asRomanNumerals\n        elif number % 10 == 2: \n            asRomanNumerals = RN[i] + RN[i] + asRomanNumerals\n        elif number % 10 == 3: \n            asRomanNumerals = RN[i] + RN[i] + RN[i] + asRomanNumerals\n        elif number % 10 == 4: \n            asRomanNumerals = RN[i] + RN[i + 1] + asRomanNumerals\n        elif number % 10 == 5: \n            asRomanNumerals = RN[i + 1] + asRomanNumerals\n        elif number % 10 == 6: \n            asRomanNumerals = RN[i + 1] + RN[i] + asRomanNumerals\n        elif number % 10 == 7: \n            asRomanNumerals = RN[i + 1] + RN[i] + RN[i] + asRomanNumerals\n        elif number % 10 == 8: \n            asRomanNumerals = RN[i + 1] + RN[i] + RN[i] + RN[i] + asRomanNumerals\n        elif number % 10 == 9: \n            asRomanNumerals = RN[i] + RN[i + 2] + asRomanNumerals\n        number = int(number \/ 10)\n        i += 2\n    print(asRomanNumerals)","lang":"py"}
{"idx":1474,"func":" \npublic static int solution (int X, int [] A) {\n    Set < Integer > values = new HashSet < Integer > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (values.add (A [i])) X --;\n        if (X == 0) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1475,"func":"def solution(X, A): \n    values = set() \n    for i in range(len(A)): \n        if A[i] not in values: \n            values.add(A[i])\n            X-=1\n            if X==0: \n                return i\n    return -1","lang":"py"}
{"idx":1476,"func":" \npublic static void main (String args []) {\n    Object sharedObject = new Object ();\n    MyClass sampleA = new MyClass ();\n    sampleA.myObject = sharedObject;\n    MyClass sampleB = new MyClass ();\n    sampleB.myObject = sharedObject;\n    System.out.println (sampleA.sharedObject == sampleB.sharedObject);\n    System.out.println (sampleA == sampleB);\n}","lang":"java"}
{"idx":1477,"func":"sharedObject = object()\nsampleA = MyClass()\nsampleA.myObject = sharedObject\nsampleB = MyClass()\nsampleB.myObject = sharedObject\nprint(sampleA.sharedObject is sampleB.sharedObject)\nprint(sampleA is sampleB) \n","lang":"py"}
{"idx":1478,"func":" \nprivate void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, Integer hash, XSSFCellStyle styleOld, HSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (workbookNew, (XSSFFont) styleOld.getFont ()));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1479,"func":"def transform(workbookOld, workbookNew, hash, styleOld, styleNew):\n    styleNew.alignment = styleOld.getAlignment()\n    styleNew.borderBottom = styleOld.getBorderBottom()\n    styleNew.borderLeft = styleOld.getBorderLeft()\n    styleNew.borderRight = styleOld.getBorderRight()\n    styleNew.borderTop = styleOld.getBorderTop()\n    styleNew.dataFormat = this.transform(workbookOld, workbookNew, styleOld.getDataFormat())\n    styleNew.fillBackgroundColor = styleOld.getFillBackgroundColor()\n    styleNew.fillForegroundColor = styleOld.getFillForegroundColor()\n    styleNew.fillPattern = styleOld.getFillPattern()\n    styleNew.font = this.transform(workbookNew, styleOld.getFont())\n    styleNew.hidden = styleOld.getHidden()\n    styleNew.indention = styleOld.getIndention()\n    styleNew.locked = styleOld.getLocked()\n    styleNew.verticalAlignment = styleOld.getVerticalAlignment()\n    styleNew.wrapText = styleOld.getWrapText()\n    this.styleMap[hash] = styleNew","lang":"py"}
{"idx":1480,"func":" \nboolean isBinaryFile (File f) throws IOException {\n    String type = Files.probeContentType (f.toPath ());\n    if (type == null) {\n        return true;\n    } else if (type.startsWith (\"text\")) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1481,"func":"def isBinaryFile(f):\n  try:\n    type = os.path.probeContentType(f.toPath())\n    if type is None: \n      return True\n    elif type.startswith(\"text\"):\n      return False\n    else: \n      return True\n  except IOError:\n    return False","lang":"py"}
{"idx":1482,"func":" \npublic void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) {\n    super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    switch (requestCode) {\n        case REQUEST_READ_PHONE_STATE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_ACCESS_FINE_LOCATION :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_WRITE_STORAGE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            }}\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1483,"func":"def onRequestPermissionsResult(requestCode, permissions, grantResults):\n    super().onRequestPermissionsResult(requestCode, permissions, grantResults)\n    if requestCode == REQUEST_READ_PHONE_STATE:\n        if grantResults.length > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            Toast.makeText(LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show()\n            finish()\n            startActivity(getIntent())\n        else:\n            Toast.makeText(LoginActivity.this, \"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show()\n    elif requestCode == REQUEST_ACCESS_FINE_LOCATION:\n        if grantResults.length > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            Toast.makeText(LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show()\n            finish()\n            startActivity(getIntent())\n        else:\n            Toast.makeText(LoginActivity.this, \"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show()\n    elif requestCode == REQUEST_WRITE_STORAGE:\n        if grantResults.length > 0 and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n            Toast.makeText(LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show()\n            finish()\n            startActivity(getIntent())\n        else:\n            Toast.makeText(LoginActivity.this, \"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show()","lang":"py"}
{"idx":1484,"func":" \npublic static void main (String [] args) {\n    int n = 7;\n    int mid = n \/ 2;\n    for (int i = 0;\n    i < n; i ++) {\n        for (int j = 0;\n        j < Math.abs (mid - i) + 1; j ++) {\n            System.out.print (\"*\");\n        }\n        System.out.println ();\n    }\n}","lang":"java"}
{"idx":1485,"func":"n=7\nmid=n\/\/2\nfor i in range(n):\n    for j in range(abs(mid-i)+1):\n        print(\"*\", end=\" \")\n    print()\n","lang":"py"}
{"idx":1486,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";\n    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);\n    Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);\n    if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1487,"func":"def filter(source, start, end, dest, dstart, dend):\n  ls_start = \"\"\n  ls_insert = \"\"\n  ls_end = \"\"\n  ls_text = \"\"\n\n  print(\"debug: \", mo_pattern)\n  print(\"debug: source: \", source, \"start: \", start, \"end: \", end, \"dest: \", dest, \"dstart: \", dstart, \"dend: \", dend)\n\n  ls_text = dest.toString()\n  if(len(ls_text) > 0):\n    ls_start = ls_text[0:dstart]\n    print(\"debug: ls_start: \", ls_start)\n    if (source != \"\"):\n      ls_insert = source.toString()\n      print(\"debug: ls_insert: \", ls_insert)\n    ls_end = ls_text[dend:]\n    print(\"debug: ls_end: \", ls_end)\n    ls_text = ls_start + ls_insert + ls_end\n    print(\"debug: ls_text: \", ls_text)\n\n  lo_matcher = mo_pattern.matchter(ls_text)\n  print(\"debug: lo_matcher.match: \", lo_matcher.matches(), \"ls_text: \", ls_text)\n  if(lo_matcher.matches() != True):\n    return \"\"\n  return None","lang":"py"}
{"idx":1488,"func":" \npublic void run () {\n    int i = 1;\n    while (i < 50) {\n        while (s.getState () != 3) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 3) System.out.println (\"t1 \" + i);\n            s.setState (1);\n            i = i + 3;\n            s.notifyAll ();\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1489,"func":"def run(s): \n    i = 1\n    while (i < 50): \n        while s.getState() != 3: \n            with s: \n                s.wait()\n        with s: \n            if (s.getState() == 3): \n                print(\"t1 \" + i)\n            s.setState(1)\n            i = i + 3\n            s.notifyAll()","lang":"py"}
{"idx":1490,"func":" \nstatic void stars () {\n    final int MAX_WIDTH = 7;\n    for (int i = 0;\n    i < 7; ++ i) {\n        int width;\n        if (i < 3) width = MAX_WIDTH - i * 2;\n        else if (i > 3) width = (i - 3) * 2 + 1;\n        else width = 1;\n        for (int j = 0;\n        j < (MAX_WIDTH - width) \/ 2; ++ j) {\n            System.out.print (\" \");\n        }\n        for (int j = 0;\n        j < width; ++ j) {\n            System.out.print (\"*\");\n        }\n        for (int j = 0;\n        j < (MAX_WIDTH - width) \/ 2; ++ j) {\n            System.out.print (\" \");\n        }\n        System.out.println ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1491,"func":"def stars(): \n    MAX_WIDTH = 7 \n    for i in range(7): \n        width = 0 \n        if(i < 3): \n            width = MAX_WIDTH - i * 2 \n        elif(i > 3): \n            width = (i-3) * 2 + 1 \n        else: \n            width = 1 \n        for j in range((MAX_WIDTH-width)\/\/2): \n            print(\" \", end = \"\") \n        for j in range(width): \n            print(\"*\", end = \"\") \n        for j in range((MAX_WIDTH-width)\/\/2): \n            print(\" \", end = \"\") \n        print(\"\")","lang":"py"}
{"idx":1492,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    MyThread mt = new MyThread ();\n    mt.hello = hello;\n    mt.world = world;\n    mt.start ();\n    for (int i = 0;\n    i < 5; i ++) {\n        hello.acquire ();\n        System.out.println (\"Hello\");\n        world.release ();\n    }\n}\n\n\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":1493,"func":"def main(args):\n    mt = MyThread()\n    mt.hello = hello\n    mt.world = world\n    mt.start()\n    for i in range(5) :\n        hello.acquire()\n        print(\"Hello\")\n        world.release()","lang":"py"}
{"idx":1494,"func":" \npublic static boolean hasLoop (Node root) {\n    if (root == null) return false;\n    Node slow = root, fast = root;\n    int taken = 0, limit = 2;\n    while (fast.next != null) {\n        fast = fast.next;\n        taken ++;\n        if (slow == fast) return true;\n        if (taken == limit) {\n            taken = 0;\n            limit <<= 1;\n            slow = fast;\n        }\n    }\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1495,"func":"def hasLoop(root):\n  if (root == None):\n    return False\n  slow = root\n  fast = root\n  taken = 0\n  limit = 2\n  while fast.next != None:\n    fast = fast.next\n    taken += 1\n    if slow == fast:\n      return True\n    if taken == limit:\n      taken = 0\n      limit = limit << 1\n      slow = fast\n  return False","lang":"py"}
{"idx":1496,"func":" \npublic synchronized void run () {\n    int i = 3;\n    while (i < 50) {\n        while (s.getState () != 2) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 2) System.out.println (\"t3 \" + i);\n            i = i + 3;\n            s.setState (3);\n            s.notifyAll ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1497,"func":"def run(self): \n    i = 3\n    while (i < 50): \n        while (s.getState() != 2): \n            with s_lock:      \n                s_lock.wait() \n        with s_lock: \n            if (s.getState() == 2): \n                print(\"t3 \" + str(i)) \n            i = i+3\n            s.setState(3)\n            s_lock.notifyAll()","lang":"py"}
{"idx":1498,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"toe\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1499,"func":"def run(): \n  try: \n    for i in range(2): \n      print(\"toe\")\n  except Exception as e: \n    e.getStackTrace()","lang":"py"}
{"idx":1500,"func":" \npublic static int [] sort (int [] numbers, int digit) {\n    if (numbers.length == 0 || digit <= 0) return numbers;\n    int [] [] space = new int [10] [1];\n    int [] len = new int [10];\n    int i, j = 0;\n    for (j = 0; j < numbers.length; j ++) {\n        i = (numbers [j] \/ digit) % 10;\n        len [i] ++;\n        space [i] = putInBucket (space [i], numbers [j]);\n    }\n    for (i = 0; i < 10; i ++) {\n        int [] bucket = new int [len [i]];\n        for (int k = 0;\n        k < len [i]; k ++) bucket [k] = space [i] [k];\n        space [i] = sort (bucket, digit \/ 10);\n    }\n    int k = 0;\n    for (i = 0; i < 10; i ++) {\n        for (j = 0; j < len [i]; j ++) {\n            numbers [k] = space [i] [j];\n            k ++;\n        }\n    }\n    return numbers;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1501,"func":"def sort(numbers, digit):\n    if(len(numbers) == 0 or digit <= 0):\n        return numbers\n    space = [[] for _ in range(10)]\n    len = [0] * 10\n    for j in range(len(numbers)):\n        i = (numbers[j] \/\/ digit) % 10\n        len[i] += 1\n        space[i].append(numbers[j])\n    for i in range(10):\n        bucket = [None] * len[i]\n        for k in range(len[i]):\n            bucket[k] = space[i][k]\n        space[i] = sort(bucket, digit \/\/ 10)\n    k = 0\n    for i in range(10):\n        for j in range(len[i]):\n            numbers[k] = space[i][j]\n            k += 1\n    return numbers","lang":"py"}
{"idx":1502,"func":" \npublic static void main (String [] args) {\n    String output = \"\";\n    Multiset < String > wordsMultiset = HashMultiset.create ();\n    String [] words = \"AAABBBBCC\".split (\"\");\n    wordsMultiset.addAll (Arrays.asList (words));\n    for (Entry < String > string : wordsMultiset.entrySet ()) {\n        if (! string.getElement ().isEmpty ()) output += string.getCount () + \"\" + string.getElement ();\n    }\n    System.out.println (output);\n}","lang":"java"}
{"idx":1503,"func":"output = ''\nwordsMultiset = collections.Counter()\nwords = 'AAABBBBCC'.split('')\nwordsMultiset.update(words)\nfor string, count in wordsMultiset.items():\n    if string != '':\n        output += str(count) + string\nprint(output)\n","lang":"py"}
{"idx":1504,"func":" \npublic void onRequestPermissionsResult (int requestCode,@NonNull\nString [] permissions,@NonNull\nint [] grantResults) {\n    if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1505,"func":"def onRequestPermissionsResult(requestCode, permissions, grantResults):\n    if requestCode == mRequestCode:\n        if len(grantResults) > 0:\n            for grantResult in grantResults:\n                if grantResult != PackageManager.PERMISSION_GRANTED:\n                    mRequestPermissionListener.onFailed()\n                    return\n            mRequestPermissionListener.onSuccess()\n        else:\n            mRequestPermissionListener.onFailed()","lang":"py"}
{"idx":1506,"func":" \nprivate static float getRandomNumberBetween (float numberOne, float numberTwo) throws Exception {\n    if (numberOne == numberTwo) {\n        throw new Exception (\"Both the numbers can not be equal\");\n    }\n    float rand = (float) Math.random ();\n    float highRange = Math.max (numberOne, numberTwo);\n    float lowRange = Math.min (numberOne, numberTwo);\n    float lowRand = (float) Math.floor (rand - 1);\n    float highRand = (float) Math.ceil (rand + 1);\n    float genRand = (highRange - lowRange) * ((rand - lowRand) \/ (highRand - lowRand)) + lowRange;\n    return genRand;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1507,"func":"def getRandomNumberBetween(numberOne, numberTwo):\n    if (numberOne == numberTwo):\n        raise Exception (\"Both the numbers cannot be equal\")\n    rand = random.random()\n    highRange = max(numberOne, numberTwo)\n    lowRange = min(numberOne, numberTwo)\n    lowRand = math.floor(rand - 1)\n    highRand = math.ceil(rand + 1)\n    genRand = (highRange - lowRange) * ((rand - lowRand) \/ (highRand - lowRand)) + lowRange\n    return genRand","lang":"py"}
{"idx":1508,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    Clip play = null;\n    try {\n        File in = new File (\"C:\\\\Users\\\\Public\\\\Music\\\\Sample Music\\\\Kalimba.wav\");\n        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);\n        play = AudioSystem.getClip ();\n        play.open (audioInputStream);\n        FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);\n        volume.setValue (1.0f);\n        play.start ();\n        play.drain ();\n    } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {\n        ex.printStackTrace ();\n    } finally {\n        try {\n            play.close ();\n        } catch (Exception exp) {\n        }\n    }\n    System.out.println (\"...\");\n}\n\n\n\n\n\nimport os\nimport wave\nimport audioop\nfrom contextlib import closing\nfrom playsound import playsound\n\n","lang":"java"}
{"idx":1509,"func":"def play_wav(filepath):\n     with closing(wave.open(filepath,'r')) as f:\n        frames = f.getnframes()\n        rate = f.getframerate()\n        duration = frames \/ float(rate)\n        playsound(filepath)\n\ntry:\n        sound_path = \"C:\\\\Users\\\\Public\\\\Music\\\\Sample Music\\\\Kalimba.wav\"\n        play_wav(sound_path)\nfinally:\n        print(\"...\")","lang":"py"}
{"idx":1510,"func":" \npublic int solution (final int X, final int [] A) {\n    Set < Integer > emptyPosition = new HashSet < Integer > ();\n    for (int i = 1;\n    i <= X; i ++) {\n        emptyPosition.add (i);\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        emptyPosition.remove (A [i]);\n        if (emptyPosition.size () == 0) {\n            return i;\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1511,"func":"def solution(X, A):\n    empty_position = set(range(1, X+1))\n    for i in range(0, len(A)):\n        if A[i] in empty_position:\n            empty_position.remove(A[i])\n        if not empty_position:\n            return i\n    return -1","lang":"py"}
{"idx":1512,"func":" \npublic static void print (Object...toPrint) {\n    for (Object item : toPrint) {\n        if (item.getClass () == int [].class) {\n            System.out.println (Arrays.toString ((int []) item));\n        } else if (item.getClass () == double [].class) {\n            System.out.println (Arrays.toString ((double []) item));\n        } else if (item instanceof Object []) {\n            System.out.println (Arrays.toString ((Object []) item));\n        } else {\n            System.out.println (item);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1513,"func":"def print(*args): \n  for arg in args:\n    if type(arg) == list: \n      print(str(arg))\n    elif type(arg) == tuple: \n      print(str(arg))\n    else:\n      print(arg)","lang":"py"}
{"idx":1514,"func":" \npublic static void main (String [] args) {\n    BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));\n    System.out.print (\"Please enter user name : \");\n    String username = null;\n    try {\n        username = reader.readLine ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }\n    System.out.println (\"You entered : \" + username);\n    Scanner in = new Scanner (System.in);\n    System.out.print (\"Please enter user name : \");\n    username = in.nextLine ();\n    System.out.println (\"You entered : \" + username);\n    Console console = System.console ();\n    username = console.readLine (\"Please enter user name : \");\n    System.out.println (\"You entered : \" + username);\n}","lang":"java"}
{"idx":1515,"func":"username = input(\"Please enter username: \")\nprint(\"You entered: %s\" % username)\n","lang":"py"}
{"idx":1516,"func":" \npublic void run () {\n    for (int i = 0;\n    ; i ++) {\n        if (i % 1000 == 0) {\n            System.out.printf (\"get: %d\\n\", i);\n        }\n        Map < K, String > m2 = new HashMap < > (map);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1517,"func":"def run():\n    i = 0 \n    while True:\n        if (i % 1000 == 0): \n            print('get: '+ str(i))\n        m2 = dict(map)\n        i += 1","lang":"py"}
{"idx":1518,"func":" \nprivate void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFRow rowOld, HSSFRow rowNew) {\n    HSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1519,"func":"def transform(workbookOld, workbookNew, rowOld, rowNew):\n    rowNew.height = rowOld.height\n    for cell in rowOld:\n        cellNew = rowNew.create_cell(cell.column_index, cell.cell_type)\n        if cellNew is not None: \n            transform(workbookOld, workbookNew, cellOld, cellNew)\n    lastColumn = max(lastColumn, rowOld.last_cell_num)","lang":"py"}
{"idx":1520,"func":" \n        public void run () {\n            int next = sequencer.getAndIncrement ();\n            integers [next - 1] ++;\n        }}\n    ;\n\n\n\n\n    ","lang":"java"}
{"idx":1521,"func":"def run():\n      next = sequencer.getAndIncrement()\n      integers[next-1]+=1","lang":"py"}
{"idx":1522,"func":" \npublic static int evenDigits (int n) {\n    if ((n & 1) != 0) {\n        return evenDigits (n \/ 10);\n    }\n    if (n < 10) {\n        return n;\n    }\n    return n % 10 + evenDigits (n \/ 10) * 10;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1523,"func":"def evenDigits(n):\n    if (n & 1) != 0:\n        return evenDigits(n\/\/10)\n    if n < 10:\n        return n\n    return n%10 + evenDigits(n\/\/10)*10","lang":"py"}
{"idx":1524,"func":" \npublic static void main (String...a) {\n    System.out.print (\"Enter the String\");\n    Scanner sc = new Scanner (System.in);\n    String st = sc.nextLine ();\n    int [] ar = new int [256];\n    for (int i = 0;\n    i < st.length (); i ++) {\n        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        char ch = (char) i;\n        if (ar [i] > 0) {\n            if (ar [i] == 1) {\n                System.out.print (ch);\n            } else {\n                System.out.print (ch + \"\" + ar [i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1525,"func":"def main(*a):\n    print(\"Enter the String\")\n    sc = input()\n    str = sc.replace(\" \", \"\")\n    ar = [0] * 256\n    for i in range(len(str)):\n        ar[ord(str[i])] = ar[ord(str[i])] + 1\n    for i in range(256):\n        ch = chr(i)\n        if ar[i] > 0:\n            if ar[i] == 1:\n                print(ch, end=\"\")\n            else:\n                print(ch + str(ar[i]), end=\"\")","lang":"py"}
{"idx":1526,"func":" \npublic static void pack (String sourceDirPath, String zipFilePath) throws IOException {\n    Path p = Files.createFile (Paths.get (zipFilePath));\n    Path pp = Paths.get (sourceDirPath);\n    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {\n        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {\n            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());\n            try {\n                zs.putNextEntry (zipEntry);\n                Files.copy (path, zs);\n                zs.closeEntry ();\n            } catch (IOException e) {\n                System.err.println (e);\n            }\n        });\n    }\n}\n\n\n\n\n\n\nimport os\nimport zipfile\n\n","lang":"java"}
{"idx":1527,"func":"def pack(source_dir_path, zip_file_path):\n    with zipfile.ZipFile(zip_file_path, \"w\") as zipObj:\n        for root, dirs, files in os.walk(source_dir_path):\n            for file in files:\n                zipObj.write(os.path.join(root, file))","lang":"py"}
{"idx":1528,"func":" \npublic int solution (int X, int [] A) {\n    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1529,"func":"def solution(X, A):\n    check = [0] * X\n    cmp = 0\n    time = -1\n    for x in range(len(A)):\n        temp = A[x]\n        if temp <= X:\n            if check[temp - 1] > 0:\n                continue\n            check[temp - 1] += 1\n            cmp += 1\n        if cmp == X:\n            time = x\n            break\n\n    return time","lang":"py"}
{"idx":1530,"func":" \npublic static String removeAdjacentDuplicates (String input) {\n    if (input.length () <= 1) {\n        return input;\n    }\n    StringBuilder sb = new StringBuilder ();\n    sb.append (input.charAt (0));\n    IntStream.range (1, input.length ()).mapToObj (i -> input.charAt (i) != input.charAt (i - 1) ? input.charAt (i) : \"\").forEach (sb :: append);\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1531,"func":"def removeAdjacentDuplicates(input):\n    if len(input) <= 1:\n        return input\n    result = input[0]\n    for i in range(1, len(input)):\n        if input[i] != input[i-1]:\n            result += input[i]\n    return result","lang":"py"}
{"idx":1532,"func":" \npublic String inputStreamToString (InputStream inputStream) throws IOException {\n    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {\n        byte [] buffer = new byte [1024];\n        int length;\n        while ((length = inputStream.read (buffer)) != - 1) {\n            result.write (buffer, 0, length);\n        }\n        return result.toString (UTF_8);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1533,"func":"def inputStreamToString (inputStream): \n    result = bytearray()\n    buffer = bytearray(1024)\n    length = 0\n    while length != -1: \n        length = inputStream.readinto(buffer)\n        result.extend(buffer[:length])\n\n    return result.decode('utf-8')","lang":"py"}
{"idx":1534,"func":" \npublic void actionPerformed (ActionEvent e) {\n    System.out.println ();\n    System.out.println (\"Close Dialogs\");\n    for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\tClosing \" + dialog.getTitle ());\n            dialog.dispose ();\n        }\n    }\n    Runtime.getRuntime ().gc ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1535,"func":"def actionPerformed(e):\n    print()\n    print('Close Dialogs')\n    for window in Window.getWindows():\n        if isinstance(window, JDialog):\n            dialog = window\n            print('\\tClosing ' + dialog.getTitle())\n            dialog.dispose()\n    Runtime.getRuntime().gc()","lang":"py"}
{"idx":1536,"func":" \npublic void type (CharSequence chars, int ms) {\n    ms = ms > 0 ? ms : 0;\n    for (int i = 0, len = chars.length ();\n    i < len; i ++) {\n        char c = chars.charAt (i);\n        AWTKeyStroke keyStroke = getKeyStroke (c);\n        int keyCode = keyStroke.getKeyCode ();\n        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);\n        if (shift) {\n            robot.keyPress (KeyEvent.VK_SHIFT);\n        }\n        robot.keyPress (keyCode);\n        robot.keyRelease (keyCode);\n        if (shift) {\n            robot.keyRelease (KeyEvent.VK_SHIFT);\n        }\n        if (ms > 0) {\n            robot.delay (ms);\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1537,"func":"def type(chars, ms):\n    if ms > 0:\n        ms = ms\n    else:\n        ms = 0\n\n    for i in range(len(chars)):\n        c = chars[i]\n        keyStroke = get_key_stroke(c)\n        keyCode = keyStroke.get_key_code()\n        if character.is_upper_case(c) or keyStroke.get_modifiers() == (shift_down_mask + 1):\n            shift = True\n        else:\n            shift = False\n\n        if shift:\n            robot.key_press(KeyEvent.VK_SHIFT)\n        robot.key_press(keyCode)\n        robot.key_release(keyCode)\n        if shift:\n            robot.key_release(KeyEvent.VK_SHIFT)\n\n        if ms > 0:\n            robot.delay(ms)","lang":"py"}
{"idx":1538,"func":" \nprivate void sort (int [] input, int startIndx, int endIndx) {\n    int endIndexOrig = endIndx;\n    int startIndexOrig = startIndx;\n    if (startIndx >= endIndx) return;\n    int pavitVal = input [endIndx];\n    while (startIndx <= endIndx) {\n        while (input [startIndx] < pavitVal) startIndx ++;\n        while (input [endIndx] > pavitVal) endIndx --;\n        if (startIndx <= endIndx) {\n            int tmp = input [startIndx];\n            input [startIndx] = input [endIndx];\n            input [endIndx] = tmp;\n            startIndx ++;\n            endIndx --;\n        }\n    }\n    sort (input, startIndexOrig, endIndx);\n    sort (input, startIndx, endIndexOrig);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1539,"func":"def sort(input, startIndx, endIndx): \n  if startIndx >= endIndx: \n    return\n  \n  endIndexOrig = endIndx\n  startIndexOrig = startIndx\n  pivotVal = input[endIndx]\n  \n  while startIndx <= endIndx: \n    while input[startIndx] < pivotVal: \n      startIndx += 1\n    while input[endIndx] > pivotVal: \n      endIndx -= 1\n    \n    if startIndx <= endIndx: \n      tmp = input[startIndex]\n      input[startIndex] = input[endIndex]\n      input[endIndex] = tmp\n      \n      startIndx += 1\n      endIndx -= 1\n      \n  sort(input, startIndexOrig, endIndx)\n  sort(input, startIndx, endIndexOrig)","lang":"py"}
{"idx":1540,"func":" \npublic static void main (String [] args) {\n    String str1 = \"\";\n    String str2 = null;\n    String str3 = \"Starts with upper case\";\n    String str4 = \"starts with lower case\";\n    System.out.println (startWithUpperCase (str1));\n    System.out.println (startWithUpperCase (str2));\n    System.out.println (startWithUpperCase (str3));\n    System.out.println (startWithUpperCase (str4));\n}\n\n\n\n\npublic static Boolean startWithUpperCase(String str){\n\n\n","lang":"java"}
{"idx":1541,"func":"def startWithUpperCase(str):\n    if str is None or str == \"\":\n        return False\n    return str[0].isupper()","lang":"py"}
{"idx":1542,"func":" \npublic int solution (int X, int [] A) {\n    int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) \/ 2;\n    List < Integer > arrayList = new ArrayList < Integer > ();\n    for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1543,"func":"def solution (X, A):\n  lst = A\n  s = 0\n  searchedValue = X\n  sumV = searchedValue * (searchedValue + 1)\/2\n  arrayList = []\n\n  for iii in range(len(lst)):\n    if lst[iii] <= searchedValue and lst[iii] not in arrayList:\n      s += lst[iii]\n      if s == sumV:\n        return iii\n      arrayList.append(lst[iii])\n\n  return -1","lang":"py"}
{"idx":1544,"func":" \npublic static void main (String [] args) {\n    Scanner input = new Scanner (System.in);\n    System.out.print (\"\\t\\tPlease enter the maximum: \");\n    int max = input.nextInt ();\n    System.out.print (\"\\t\\tPlease enter the minimum: \");\n    int min = input.nextInt ();\n    System.out.print (\"enter: \");\n    Scanner lineInput = new Scanner (System.in);\n    String word = lineInput.nextLine ();\n    String [] lengthword = word.split (\"\\\\s+\");\n    int countwords = lengthword.length;\n    if (countwords <= max && countwords >= min) {\n        System.out.println (\"YAY!!!!!!!!! YOU'RE WTHIN THE RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!\");\n    } else {\n        System.out.println (\"Ohh!!!!!!!!! YOU'RE Not in RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!\");\n    }\n}","lang":"java"}
{"idx":1545,"func":"max = int(input(\"Please enter the maximum: \"))\nmin = int(input(\"Please enter the minimum: \"))\nword = input(\"enter: \")\n","lang":"py"}
{"idx":1546,"func":" \npublic static void main (final String [] args) {\n    final Console console = System.console ();\n    if (console != null) {\n        final SortNames sortNames = new SortNames (console);\n        sortNames.run ();\n    } else {\n        System.err.println (\"Sorry, no console.\");\n        System.exit (1);\n    }\n}","lang":"java"}
{"idx":1547,"func":"import os\nif os.isatty(0):\n    sortNames = SortNames()\n    sortNames.run()\nelse:\n    print(\"Sorry, no console.\")\n    exit(1)\n","lang":"py"}
{"idx":1548,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int number;\n    if (\"\".equals (value)) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number \/ 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! \"\".equals (tensName) && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1549,"func":"def getName(value):\n   number = 0\n   if value == \"\":\n       number = 0\n   elif len(value) > 4:\n       number = int(value[-4:], 10) \n   else:\n       number = int(value, 10)\n   number %= 1000\n   buffer = \"\"\n   if number >= 100:\n        buffer += unitProcessor.getName(number\/\/100) \n        buffer += SEPARATOR\n        buffer += SCALE.getName(EXPONENT)\n   tensName = tensProcessor.getName(number % 100) \n   if tensName != \"\" and number >= 100:\n        buffer += SEPARATOR\n   buffer += tensName\n   return buffer","lang":"py"}
{"idx":1550,"func":" \npublic static void main (String [] args) {\n    int sayThisManyTimes = 5;\n    AtomicBoolean saidHello = new AtomicBoolean (false);\n    MyThread mt = new MyThread (sayThisManyTimes, saidHello);\n    mt.start ();\n    for (int i = 0;\n    i < sayThisManyTimes; i ++) {\n        while (saidHello.get ()) {\n        }\n        System.out.println (\"Hello \");\n        saidHello.set (true);\n    }\n}\n\n\n\n\n\n\nimport threading \nimport time \n\nsayThisManyTimes = 5\nsaidHello = False\n\n","lang":"java"}
{"idx":1551,"func":"def myThread(): \n    global saidHello \n    for i in range(sayThisManyTimes):\n        while saidHello:\n            time.sleep(0.1) \n        print(\"Hello\") \n        saidHello = True\n\nt = threading.Thread(target=myThread)\nt.start() \n\nfor i in range(sayThisManyTimes): \n    while not saidHello:\n        time.sleep(0.1) \n    print(\"Hello\") \n    saidHello = False","lang":"py"}
{"idx":1552,"func":" \npublic static void main (String [] args) {\n    String output = \"\";\n    Multiset < String > wordsMultiset = HashMultiset.create ();\n    String [] words = \"AAABBBBCC\".split (\"\");\n    wordsMultiset.addAll (Arrays.asList (words));\n    for (Entry < String > string : wordsMultiset.entrySet ()) {\n        if (! string.getElement ().isEmpty ()) output += string.getCount () + \"\" + string.getElement ();\n    }\n    System.out.println (output);\n}","lang":"java"}
{"idx":1553,"func":"output = ''\nwords_multiset = collections.Counter()\nwords = 'AAABBBBCC'.split('')\nwords_multiset.update(words)\nfor k,v in words_multiset.items():\n    if k != '':\n        output += str(v) + k\nprint(output)\n","lang":"py"}
{"idx":1554,"func":" \npublic static void main (String [] args) {\n    LinkedHashMap < String, Vector < String > > data = new LinkedHashMap < String, Vector < String > > ();\n    data.put (\"foo\", new Vector < String > (Arrays.asList (\"1\", \"2\", \"3\")));\n    data.put (\"bar\", new Vector < String > (Arrays.asList (\"3\", \"2\")));\n    data.put (\"baz\", new Vector < String > (Arrays.asList (\"5\", \"6\", \"7\")));\n    Foo foo = new Foo (data);\n    for (String [] combination : foo.allUniqueCombinations ()) {\n        System.out.println (Arrays.toString (combination));\n    }\n}","lang":"java"}
{"idx":1555,"func":"data = {\"foo\": [\"1\", \"2\", \"3\"],\n        \"bar\": [\"3\", \"2\"], \n        \"baz\": [\"5\", \"6\", \"7\"]}\nfoo = Foo(data)\nfor combination in foo.allUniqueCombinations():\n    print(combination)\n","lang":"py"}
{"idx":1556,"func":" \nprivate void sort (int [] input, int startIndx, int endIndx) {\n    int endIndexOrig = endIndx;\n    int startIndexOrig = startIndx;\n    if (startIndx >= endIndx) return;\n    int pavitVal = input [endIndx];\n    while (startIndx <= endIndx) {\n        while (input [startIndx] < pavitVal) startIndx ++;\n        while (input [endIndx] > pavitVal) endIndx --;\n        if (startIndx <= endIndx) {\n            int tmp = input [startIndx];\n            input [startIndx] = input [endIndx];\n            input [endIndx] = tmp;\n            startIndx ++;\n            endIndx --;\n        }\n    }\n    sort (input, startIndexOrig, endIndx);\n    sort (input, startIndx, endIndexOrig);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1557,"func":"def sort(input, startIndx, endIndx): \n    endIndexOrig = endIndx\n    startIndexOrig = startIndx\n    if (startIndx >= endIndx): \n        return\n    pavitVal = input[endIndx]\n    while (startIndx <= endIndx): \n        while (input[startIndx] < pavitVal): \n            startIndx += 1\n        while (input[endIndx] > pavitVal): \n            endIndx -= 1\n        if (startIndx <= endIndx): \n            tmp = input[startIndx]\n            input[startIndx] = input[endIndx]\n            input[endIndx] = tmp\n            startIndx += 1\n            endIndx -= 1\n    sort(input, startIndexOrig, endIndx)\n    sort(input, startIndx, endIndexOrig)","lang":"py"}
{"idx":1558,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1559,"func":"def solution(X, A):\n    leaves = set()\n    for i in range(len(A)):\n        leaves.add(A[i])\n        if X in leaves and len(leaves) == X:\n            return i\n    return -1","lang":"py"}
{"idx":1560,"func":" \npublic int readNumber () {\n    int x = - 1;\n    while (x < 0) {\n        System.out.println (\"Please enter a positive number.\");\n        try {\n            x = keyboard.nextInt ();\n        } catch (java.util.InputMismatchException e) {\n        }\n    }\n    return x;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1561,"func":"def readNumber():\n    x = -1\n    while x < 0:\n        print(\"Please enter a positive number.\")\n        try:\n            x = int(input(\"Enter a number: \"))\n        except ValueError:\n            pass\n    return x","lang":"py"}
{"idx":1562,"func":" \nint findCombinationsCount (int amount, int coins [], int checkFromIndex) {\n    if (amount == 0) return 1;\n    else if (amount < 0 || coins.length == checkFromIndex) return 0;\n    else {\n        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);\n        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);\n        return withFirstCoin + withoutFirstCoin;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1563,"func":"def findCombinationsCount(amount, coins, checkFromIndex):\n    if amount == 0:\n        return 1\n    elif amount < 0 or len(coins) == checkFromIndex:\n        return 0\n    else:\n        withFirstCoin = findCombinationsCount(amount - coins[checkFromIndex], coins, checkFromIndex)\n        withoutFirstCoin = findCombinationsCount(amount, coins, checkFromIndex + 1)\n        return withFirstCoin + withoutFirstCoin","lang":"py"}
{"idx":1564,"func":" \n        public void run () {\n            System.out.println (new Date ());\n        }}\n\n\n\n\nimport datetime\n\n","lang":"java"}
{"idx":1565,"func":"def run(): \n    print(datetime.datetime.now())","lang":"py"}
{"idx":1566,"func":" \npublic static void main (String args []) throws IOException {\n    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));\n    int totalGrades = 0;\n    float gradeAverage = 0;\n    System.out.print (\"How many grades will you enter?\");\n    int laki = Integer.parseInt (dataIn.readLine ());\n    float [] grades = new float [laki];\n    int count = 0;\n    while (laki > 0) {\n        System.out.print (\"Please enter grade # \" + (count + 1) + \": \");\n        grades [count] = Float.parseFloat (dataIn.readLine ());\n        totalGrades += grades [count];\n        laki --;\n        count ++;\n    }\n    gradeAverage = (float) totalGrades \/ count;\n    System.out.println (\"Your grades average is \" + gradeAverage);\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":1567,"func":"def main():\n    totalGrades, gradeAverage = 0, 0\n    laki = int(input(\"How many grades will you enter? \"))\n    grades = []\n    count = 0\n\n    while laki > 0 :\n        grades.append(float(input(\"Please enter grade # \" + str(count+1) + \" : \")))\n        totalGrades += grades[count]\n        laki -= 1\n        count += 1\n\n    gradeAverage = totalGrades\/count\n    print(\"Your grades average is \" , gradeAverage)","lang":"py"}
{"idx":1568,"func":" \npublic static void main (String [] args) {\n    try {\n        Tic tic = new Tic ();\n        Tac tac = new Tac ();\n        Toe toe = new Toe ();\n        Thread t1 = new Thread (tic);\n        Thread t2 = new Thread (tac);\n        Thread t3 = new Thread (toe);\n        t1.start ();\n        t1.join ();\n        if (! t1.isAlive ()) {\n            t2.start ();\n        }\n        t2.join ();\n        if (! t2.isAlive ()) {\n            t3.start ();\n        }\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1569,"func":"def main(args=[]):\n    try:\n        tic = Tic()\n        tac = Tac()\n        toe = Toe()\n\n        t1 = Thread(target=tic)\n        t2 = Thread(target=tac)\n        t3 = Thread(target=toe)\n\n        t1.start()\n        t1.join()\n        if not t1.isAlive():\n            t2.start()\n        t2.join()\n        if not t2.isAlive():\n            t3.start()\n    except InterruptedException as e:\n        e.printStackTrace()","lang":"py"}
{"idx":1570,"func":" \npublic static int [] removeDuplicates (int [] arr) {\n    boolean [] set = new boolean [1001];\n    int totalItems = 0;\n    for (int i = 0;\n    i < arr.length; ++ i) {\n        if (! set [arr [i]]) {\n            set [arr [i]] = true;\n            totalItems ++;\n        }\n    }\n    int [] ret = new int [totalItems];\n    int c = 0;\n    for (int i = 0;\n    i < set.length; ++ i) {\n        if (set [i]) {\n            ret [c ++] = i;\n        }\n    }\n    return ret;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1571,"func":"def removeDuplicates(arr):\n    seen = set()\n    i = 0\n    while i < len(arr):\n        if arr[i] in seen:\n            arr.pop(i)\n            i -= 1\n        else:\n            seen.add(arr[i])\n        i += 1\n    return arr","lang":"py"}
{"idx":1572,"func":" \nprivate int sum (@NotNull\nIndex mainIndex,@NotNull\nIndex secondaryIndex) {\n    int localSum = 0;\n    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {\n        mainIndex.index ++;\n    }\n    if (mainIndex.index < array.length) {\n        localSum += array [mainIndex.index ++];\n    } else {\n        for (; secondaryIndex.index < array.length; secondaryIndex.index ++) {\n            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {\n                localSum += array [secondaryIndex.index];\n            }\n        }\n    }\n    return localSum;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1573,"func":"def sum(main_index, secondary_index):\n    local_sum = 0\n    while main_index.index < len(array) and secondary_index.sign.test(array[main_index.index]):\n        main_index.index += 1\n\n    if main_index.index < len(array):\n        local_sum += array[main_index.index]\n        main_index.index += 1\n    else:\n        for i in range(secondary_index.index, len(array)):\n            if secondary_index.sign.test(array[i]):\n                local_sum += array[i]\n\n    return local_sum","lang":"py"}
{"idx":1574,"func":" \npublic int solution (int X, int [] A) {\n    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1575,"func":"def solution(X, A):\n    size = len(A)\n    check = [0] * X\n    cmp = 0\n    time = -1\n    for x in range(0, size):\n        temp = A[x]\n        if temp <= X:\n            if check[temp - 1] > 0:\n                continue\n            check[temp - 1] += 1\n            cmp += 1\n\n        if cmp == X:\n            time = x\n            break\n    return time","lang":"py"}
{"idx":1576,"func":" \n        public void changed (ObservableValue < ? extends Worker.State > observableValue, Worker.State state, Worker.State newState) {\n            if (newState.equals (Worker.State.SUCCEEDED)) {\n                dialog.show ();\n                dialog.toFront ();\n            }\n        }}\n    );\n\n\n\n\n\n","lang":"java"}
{"idx":1577,"func":"def changed(observableValue, state, newState):\n    if newState == Worker.State.SUCCEEDED:\n        dialog.show()\n        dialog.toFront()","lang":"py"}
{"idx":1578,"func":" \npublic static void main (String [] args) {\n    Scanner scan = new Scanner (System.in);\n    int code;\n    int red, green, blue;\n    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;\n    System.out.println (\"Please enter the red color. Range [0, 255] only please.\");\n    red = scan.nextInt ();\n    System.out.println (\"Please enter the green color. Range [0, 255] only please.\");\n    green = scan.nextInt ();\n    System.out.println (\"Please enter the blue color. Range [0, 255] only please.\");\n    blue = scan.nextInt ();\n    code = 0;\n    code += (int) (red * Math.pow (2, 16));\n    code += (int) (green * Math.pow (2, 8));\n    code += (int) (blue * Math.pow (2, 0));\n    System.out.println (\"The code is \" + code + \".\");\n    red = 0;\n    green = 0;\n    blue = 0;\n    red = (code & rMask)>> 16;\n    green = (code & gMask)>> 8;\n    blue = (code & bMask);\n    System.out.println (\"Your red value is: \" + red);\n    System.out.println (\"Your green value is: \" + green);\n    System.out.println (\"Your blue value is: \" + blue);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1579,"func":"def main():\n    scan = input(\"Please enter the red color. Range [0, 255] only please: \")\n    red = int(scan)\n    scan = input(\"Please enter the green color. Range [0, 255] only please: \")\n    green = int(scan)\n    scan = input(\"Please enter the blue color. Range [0, 255] only please: \")\n    blue = int(scan)\n\n    # Create code\n    code = 0\n    code += red * 2**16\n    code += green * 2**8\n    code += blue * 2**0\n\n    print(\"The code is \" + str(code) + \".\")\n\n    # Extract values from code\n    red = int(code >> 16)\n    green = int((code & 0xFF00) >> 8)\n    blue = int(code & 0xFF)\n\n    print(\"Your red value is: \" + str(red))\n    print(\"Your green value is: \" + str(green))\n    print(\"Your blue value is: \" + str(blue))\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":1580,"func":" \npublic void actionPerformed (ActionEvent e) {\n    System.out.println ();\n    System.out.println (\"Create Dialog\");\n    JDialog dialog = new JDialog ();\n    dialog.getContentPane ().setLayout (null);\n    for (int i = 0;\n    i < 200; i ++) {\n        dialog.add (new JTextField (\"some text\"));\n    }\n    dialog.setTitle (\"Dialog \" + count ++);\n    dialog.setLocation (count * 25, count * 25);\n    dialog.setVisible (true);\n    System.out.println (\"\\tCreated \" + dialog.getTitle ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1581,"func":"def actionPerformed(e):\n    print()\n    print(\"Create Dialog\")\n    dialog = JDialog()\n    dialog.getContentPane().setLayout(None)\n    for i in range(200):\n        dialog.add(JTextField(\"some text\"))\n    dialog.setTitle(\"Dialog \"+str(count))\n    dialog.setLocation(count*25, count*25)\n    dialog.setVisible(True)\n    print(\"\\tCreated \"+dialog.getTitle())","lang":"py"}
{"idx":1582,"func":" \npublic void actionPerformed (ActionEvent e) {\n    System.out.println ();\n    System.out.println (\"Create Dialog\");\n    JDialog dialog = new JDialog ();\n    dialog.getContentPane ().setLayout (null);\n    for (int i = 0;\n    i < 200; i ++) {\n        dialog.add (new JTextField (\"some text\"));\n    }\n    dialog.setTitle (\"Dialog \" + count ++);\n    dialog.setLocation (count * 25, count * 25);\n    dialog.setVisible (true);\n    System.out.println (\"\\tCreated \" + dialog.getTitle ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1583,"func":"def actionPerformed(e):\n    print()\n    print(\"Create Dialog\")\n    dialog = JDialog()\n    dialog.getContentPane().setLayout(None)\n    for i in range(200):\n        dialog.add(JTextField(\"some text\"))\n\n    dialog.title(\"Dialog \" + count)\n    count += 1\n    dialog.setLocation(count * 25, count * 25)\n    dialog.setVisible(True)\n    print(\"\\tCreated \" + dialog.getTitle())","lang":"py"}
{"idx":1584,"func":" \npublic static boolean areAnagrams (String one, String two) {\n    if (one.length () == two.length ()) {\n        String s0 = one.toLowerCase ();\n        String s1 = two.toLowerCase ();\n        HashMap < Character, Integer > chars = new HashMap < Character, Integer > (one.length ());\n        Integer count;\n        for (char c : s0.toCharArray ()) {\n            count = chars.get (c);\n            count = Integer.valueOf (count != null ? count + 1 : 1);\n            chars.put (c, count);\n        }\n        for (char c : s1.toCharArray ()) {\n            count = chars.get (c);\n            if (count == null) {\n                return false;\n            } else {\n                count --;\n                chars.put (c, count);\n            }\n        }\n        for (Integer i : chars.values ()) {\n            if (i != 0) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}","lang":"java"}
{"idx":1585,"func":"","lang":"py"}
{"idx":1586,"func":" \npublic static int [] MaxNumber (String [] arr) {\n    int [] Number_arr = new int [11];\n    int count = 1;\n    int j = 0;\n    int k = 0;\n    for (int i = 0;\n    i < arr.length - 1; i ++) {\n        if (arr [i].equals (arr [i + 1])) count ++;\n        else {\n            Number_arr [j] = count;\n            j ++;\n            count = 1;\n        }\n    }\n    Number_arr [j] = count;\n    return Number_arr;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1587,"func":"def MaxNumber(arr):\n    Number_arr = [0] * 11       # Initializing array\n    count = 1\n    j = 0\n    k = 0\n\n    for i in range(len(arr)-1):\n        if arr[i] == arr[i+1]:\n            count+=1\n        else:\n            Number_arr[j] = count\n            j+=1\n            count = 1\n    Number_arr[j] = count\n    return Number_arr","lang":"py"}
{"idx":1588,"func":" \npublic static void main (String [] s) throws VTDException {\n    VTDGen vg = new VTDGen ();\n    if (! vg.parseFile (\"input.xml\", false)) return;\n    VTDNav vn = vg.getNav ();\n    AutoPilot ap = new AutoPilot (vn);\n    ap.selectXPath (\"\/xml\/item\/@name\");\n    int i = 0;\n    while ((i = ap.evalXPath ()) != - 1) {\n        System.out.println (\" item name is ===>\" + vn.toString (i + 1));\n    }\n}","lang":"java"}
{"idx":1589,"func":"from vtd import VTDGen,VTDNav,AutoPilot\nvg = VTDGen()\nif not vg.parseFile('input.xml', False):\n    return\nvn = vg.getNav()\nap = AutoPilot(vn)\nap.selectXPath('\/xml\/item\/@name')\ni = 0\nwhile i != -1:\n    i = ap.evalXPath()\n    if i != -1:\n        print(' item name is ===>' + vn.toString(i + 1))\n","lang":"py"}
{"idx":1590,"func":" \npublic static double [] [] amountOTP (double [] [] a, int x) {\n    double [] [] b = new double [x] [x];\n    x = Math.min (x, a.length);\n    for (int i = 0;\n    i < x; i ++) for (int j = 0;\n    j < x; j ++) b [i] [j] = a [i] [j];\n    return b;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1591,"func":"def amountOTP (a, x): \n    b = [[0 for _ in range(x)] for _ in range(x)] \n    x = min(x, len(a)) \n    for i in range(x): \n        for j in range(x): \n            b[i][j] = a[i][j] \n    return b","lang":"py"}
{"idx":1592,"func":" \npublic void start (Stage stage) throws Exception {\n    URL location = getClass ().getResource (\"Main.fxml\");\n    FXMLLoader fxmlLoader = new FXMLLoader ();\n    fxmlLoader.setLocation (location);\n    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());\n    Parent root = (Parent) fxmlLoader.load (location.openStream ());\n    Scene scene = new Scene (root);\n    stage.setScene (scene);\n    MainController mainController = fxmlLoader.getController ();\n    mainController.setStage (stage);\n    mainController.showStage ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1593,"func":"def start(stage):\n    location = getClass().getResource('Main.fxml')\n    fxml_loader = FXMLLoader(location)\n    fxml_loader.set_builder_factory(JavaFXBuilderFactory())\n    root = fxml_loader.load(location.open_stream())\n    scene = Scene(root)\n    stage.set_scene(scene)\n    main_controller = fxml_loader.get_controller()\n    main_controller.set_stage(stage)\n    main_controller.show_stage()","lang":"py"}
{"idx":1594,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int [] answer = new int [P.length];\n    char [] chars = S.toCharArray ();\n    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];\n    for (int iii = 0;\n    iii < chars.length; iii ++) {\n        if (iii > 0) {\n            for (int zzz = 0;\n            zzz < 4; zzz ++) {\n                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];\n            }\n        }\n        switch (chars [iii]) {\n            case 'A' :\n                cumulativeAnswers [0] [iii + 1] ++;\n                break;\n            case 'C' :\n                cumulativeAnswers [1] [iii + 1] ++;\n                break;\n            case 'G' :\n                cumulativeAnswers [2] [iii + 1] ++;\n                break;\n            case 'T' :\n                cumulativeAnswers [3] [iii + 1] ++;\n                break;\n        }\n    }\n    for (int iii = 0;\n    iii < P.length; iii ++) {\n        for (int zzz = 0;\n        zzz < 4; zzz ++) {\n            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {\n                answer [iii] = zzz + 1;\n                break;\n            }\n        }\n    }\n    return answer;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1595,"func":"def solution(S, P, Q):\n    answer = []\n    chars = list(S)\n    cumulativeAnswers = [[0 for x in range(len(chars) + 1)] for y in range(4)]\n\n    for iii in range(len(chars)):\n        if iii > 0:\n            for zzz in range(4):\n                cumulativeAnswers[zzz][iii + 1] = cumulativeAnswers[zzz][iii]\n\n        if chars[iii] == 'A':\n            cumulativeAnswers[0][iii + 1] += 1\n        elif chars[iii] == 'C':\n            cumulativeAnswers[1][iii + 1] += 1\n        elif chars[iii] == 'G':\n            cumulativeAnswers[2][iii + 1] += 1\n        elif chars[iii] == 'T':\n            cumulativeAnswers[3][iii + 1] += 1\n\n    for iii in range(len(P)):\n        for zzz in range(4):\n            if (cumulativeAnswers[zzz][Q[iii] + 1] - cumulativeAnswers[zzz][P[iii]]) > 0:\n                answer.append(zzz + 1)\n                break\n\n    return answer","lang":"py"}
{"idx":1596,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tic\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1597,"func":"def run():\n  try:\n    for i in range(2):\n      print(\"tic\")\n  except Exception as e:\n    print(e.getStackTrace())","lang":"py"}
{"idx":1598,"func":" \npublic void run () {\n    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tac\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1599,"func":"def run():\n try:\n  for i in range(2):\n   print(\"tac\")\n except Exception as e:\n  print(e)","lang":"py"}
{"idx":1600,"func":" \npublic static void main (String [] args) throws FileNotFoundException, IOException {\n    FileInputStream fin = new FileInputStream (\"line.srt\");\n    BufferedReader reader = new BufferedReader (new InputStreamReader (fin));\n    PrintWriter out = new PrintWriter (\"newline.srt\");\n    int i = 0;\n    String line = reader.readLine ();\n    while (line != null) {\n        if (! line.trim ().equals (\"\")) {\n            out.println (line);\n        }\n        line = reader.readLine ();\n    }\n    out.close ();\n}","lang":"java"}
{"idx":1601,"func":"f1 = open(\"line.srt\") \nf2 = open(\"newline.srt\", \"w\")    \ni = 0\n  \nfor line in f1: \n    if line.strip() != \"\": \n        f2.write(line) \n  \nf1.close()  \nf2.close() \n","lang":"py"}
{"idx":1602,"func":" \npublic static void main (String args []) {\n    try {\n        Game game = new Chess ();\n        Thread t1 = new Thread (game);\n        t1.start ();\n        Thread.sleep (1000);\n        game.setRunGame (false);\n        Thread.sleep (1000);\n        game = new TicTacToe ();\n        Thread t2 = new Thread (game);\n        t2.start ();\n        Thread.sleep (1000);\n        game.setRunGame (false);\n    } catch (Exception err) {\n        err.printStackTrace ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1603,"func":"def main():\n  try:\n    game = Chess();\n    t1 = threading.Thread(target=game.run())\n    t1.start()\n    time.sleep(1000)\n    game.setRunGame(False)\n    time.sleep(1000)\n    game = TicTacToe()\n    t2 = threading.Thread(target=game.run())\n    t2.start()\n    time.sleep(1000)\n    game.setRunGame(False)\n  except Exception as err:\n    print(err.stack_trace())","lang":"py"}
{"idx":1604,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int N = S.length ();\n    int M = P.length;\n    int [] result = new int [M];\n    lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;\n    for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1605,"func":"def solution(S, P, Q):\n    N = len(S)\n    M = len(P)\n    result = [0] * M\n    lastOccurrencesMap = [[0] * N for _ in range(3)]\n    lastA = -1\n    lastC = -1\n    lastG = -1\n\n    for i in range(N):\n        if S[i] == 'A':\n            lastA = i\n        elif S[i] == 'C':\n            lastC = i\n        elif S[i] == 'G':\n            lastG = i\n        lastOccurrencesMap[0][i] = lastA\n        lastOccurrencesMap[1][i] = lastC\n        lastOccurrencesMap[2][i] = lastG\n    \n    for i in range(M):\n        startIndex = P[i]\n        endIndex = Q[i]\n        minimum = 4\n        for n in range(3):\n            lastOccurrence =  getLastNucleotideOccurrence(startIndex, endIndex, n)\n            if lastOccurrence != 0:\n                minimum = n + 1\n                break\n        result[i] = minimum\n    return result","lang":"py"}
{"idx":1606,"func":" \npublic static void main (String [] args) {\n    Scanner scan = new Scanner (System.in);\n    int numOfItems = 0;\n    System.out.print (\"Enter How Many Items: \");\n    try {\n        numOfItems = Integer.parseInt (scan.nextLine ().trim ());\n    } catch (NumberFormatException e) {\n        System.out.print (\"Number of items you entered is invalid!\");\n        System.exit (0);\n    }\n    Grocery grocery = new Grocery (numOfItems);\n    for (int i = 0;\n    i < numOfItems; i ++) {\n        System.out.print (\"Enter Item \" + (i + 1) + \" : \");\n        if (! grocery.addItem (scan.nextLine ())) {\n            System.out.println (\"First Item Duplicate Detected!\");\n            System.exit (0);\n        }\n    }\n    scan.close ();\n    System.out.println (grocery.toString ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1607,"func":"def main():\n    scan = input()\n    numOfItems = 0\n    print(\"Enter How Many Items: \")\n    try:\n        numOfItems = int(scan)\n    except ValueError as e:\n        print (\"Number of items you entered is invalid!\")\n        exit(0)\n\n    grocery = Grocery(numOfItems)\n    for i in range(numOfItems):\n        print (\"Enter Item \" + str(i + 1) + \" : \")\n        if not grocery.addItem(input()):\n            print (\"First Item Duplicate Detected!\")\n            exit(0)\n    print (grocery.toString ())","lang":"py"}
{"idx":1608,"func":" \npublic void move (Container container) {\n    if (x >= canvasWidth || x <= 0) {\n        deltaX = - 1 * deltaX;\n    }\n    if (y >= canvasHeight || y <= 0) {\n        deltaY = - 1 * deltaY;\n    }\n    x += deltaX;\n    y += deltaY;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1609,"func":"def move(container):\n    if(x >= canvasWidth or x <= 0):\n        deltaX *= -1\n    if(y >= canvasHeight or y <= 0):\n        deltaY *= -1\n    x += deltaX\n    y += deltaY","lang":"py"}
{"idx":1610,"func":" \npublic int solution (int X, int [] A) {\n    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1611,"func":"def solution(X, A): \n    size = len(A) \n    check = [0] * X \n    cmp = 0 \n    time = -1 \n    for x in range(size): \n        temp = A[x] \n        if temp <= X: \n            if check[temp - 1] > 0: \n                continue \n            check[temp - 1] += 1 \n            cmp += 1 \n        if cmp == X: \n            time = x \n            break \n    return time","lang":"py"}
{"idx":1612,"func":" \npublic int solution (int N) {\n    int result = 0;\n    while (N > 0) {\n        if ((N & 1) == 1) {\n            int temp = 0;\n            while ((N>>= 1) > 0 && ((N & 1) != 1)) {\n                temp ++;\n            }\n            result = Math.max (result, temp);\n        } else {\n            N>>= 1;\n        }\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1613,"func":"def solution(N):\n    result = 0\n    while N > 0:\n        if N & 1 == 1:\n            temp = 0\n            while N >> 1 > 0 and (N & 1 != 1):\n                temp += 1\n                N >>= 1\n            result = max(result, temp)\n        else:\n            N >>= 1\n    return result","lang":"py"}
{"idx":1614,"func":" \nprivate static void decimalToHex (int decimal) {\n    if (decimal >= 256) {\n        returnHex (decimal \/ 256);\n        decimal %= 256;\n    } else {\n        System.out.print (\"0\");\n    }\n    if (decimal >= 16) {\n        returnHex (decimal \/ 16);\n        decimal %= 16;\n    } else {\n        System.out.print (\"0\");\n    }\n    returnHex (decimal);\n    decimal \/= 16;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1615,"func":"def decimalToHex(decimal):\n    if decimal >= 256:\n        returnHex(decimal \/\/ 256)\n        decimal %= 256\n    else:\n        print(\"0\")\n    if decimal >= 16:\n        returnHex(decimal \/\/ 16)\n        decimal %= 16\n    else:\n        print(\"0\")\n    returnHex(decimal)\n    decimal \/= 16","lang":"py"}
{"idx":1616,"func":" \npublic static String shuffle (String text) {\n    char [] characters = text.toCharArray ();\n    for (int i = 0;\n    i < characters.length; i ++) {\n        int randomIndex = (int) (Math.random () * characters.length);\n        char temp = characters [i];\n        characters [i] = characters [randomIndex];\n        characters [randomIndex] = temp;\n    }\n    return new String (characters);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1617,"func":"def shuffle(text):\n  characters = list(text)\n  for i in range(len(characters)):\n    random_index = random.randint(0, len(characters)-1)\n    temp = characters[i]\n    characters[i] = characters[random_index]\n    characters[random_index] = temp\n  return \"\".join(characters)","lang":"py"}
{"idx":1618,"func":" \npublic static final void printArray (int [] arr) {\n    System.out.print (\"[\");\n    for (int i = 0;\n    i < arr.length; i ++) {\n        if (i == arr.length - 1) System.out.print (arr [i]);\n        else System.out.print (arr [i] + \", \");\n    }\n    System.out.println (\"]\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1619,"func":"def printArray(arr):\n  print('[', end = '')\n  for i in range(len(arr)):\n    if i == len(arr)-1:\n      print(arr[i], end = '')\n    else:\n      print(arr[i], end = ', ')\n  print(']')","lang":"py"}
{"idx":1620,"func":" \npublic static void main (String [] args) {\n    int [] nums = new int [N];\n    for (int i = 0;\n    i < nums.length; ++ i) {\n        nums [i] = i;\n    }\n    Random randomGenerator = new Random ();\n    int randomIndex;\n    int randomValue;\n    for (int i = 0;\n    i < nums.length; ++ i) {\n        randomIndex = randomGenerator.nextInt (nums.length);\n        randomValue = nums [randomIndex];\n        nums [randomIndex] = nums [i];\n        nums [i] = randomValue;\n    }\n}","lang":"java"}
{"idx":1621,"func":"N = int(input())\nnums = [i for i in range(N)]\nimport random\nfor i in range(N):\n    randomIndex = random.randint(0,N)\n    randomValue = nums[randomIndex]\n    nums[randomIndex], nums[i] = nums[i], randomValue\n","lang":"py"}
{"idx":1622,"func":" \npublic void actionPerformed (ActionEvent e) {\n    String item = (String) mainComboBox.getSelectedItem ();\n    Object o = subItems.get (item);\n    if (o == null) {\n        subComboBox.setModel (new DefaultComboBoxModel ());\n    } else {\n        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1623,"func":"def actionPerformed(e):\n  item = mainComboBox.getSelectedItem()\n  o = subItems.get(item)\n  if o is None:\n    subComboBox.setModel(DefaultComboBoxModel())\n  else:\n    subComboBox.setModel(DefaultComboBoxModel(o))","lang":"py"}
{"idx":1624,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > leaves = new HashSet < > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1625,"func":"def solution(X, A):\n    leaves = set()\n    for i, v in enumerate(A):\n        leaves.add(v)\n        if X in leaves and len(leaves) == X:\n            return i\n    return -1","lang":"py"}
{"idx":1626,"func":" \n        public void afterTextChanged (Editable arg0) {\n        }}\n    );\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1627,"func":"def after_text_changed(arg0):\npass\n\narg0.add_text_changed_listener(after_text_changed)","lang":"py"}
{"idx":1628,"func":" \npublic static String compressBad (String str) {\n    String compressedString = \"\";\n    if (str != null && str.length () > 0) {\n        int countConsecutive = 1;\n        char prevChar = str.charAt (0);\n        for (int i = 1;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != prevChar) {\n                compressedString += String.valueOf (prevChar) + countConsecutive;\n                prevChar = str.charAt (i);\n                countConsecutive = 1;\n                continue;\n            }\n            countConsecutive ++;\n        }\n        compressedString += String.valueOf (prevChar) + countConsecutive;\n    }\n    return compressedString;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1629,"func":"def compressBad(str):\n    compressed_string = \"\"\n    if str is not None and len(str) > 0:\n        count_consecutive = 1\n        prev_char = str[0]\n        for i in range(1, len(str)):\n            if str[i] != prev_char:\n                compressed_string += str(prev_char) + str(count_consecutive)\n                prev_char = str[i]\n                count_consecutive = 1\n            else:\n                count_consecutive += 1\n        compressed_string += str(prev_char) + str(count_consecutive)\n    return compressed_string","lang":"py"}
{"idx":1630,"func":" \nstatic GenericType parse (StreamTokenizer tokenizer) throws IOException {\n    String baseName = tokenizer.sval;\n    tokenizer.nextToken ();\n    List < GenericType > params = new ArrayList < > ();\n    if (tokenizer.ttype == '<') {\n        do {\n            tokenizer.nextToken ();\n            params.add (parse (tokenizer));\n        } while (tokenizer.ttype == ',');\n        tokenizer.nextToken ();\n    }\n    return new GenericType (baseName, params);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1631,"func":"def parse(tokenizer):\n    baseName = tokenizer.sval\n    tokenizer.nextToken()\n    params = []\n    if tokenizer.ttype == '<':\n        while True:\n            tokenizer.nextToken()\n            params.append(parse(tokenizer))\n            if tokenizer.ttype != ',':\n                break\n        tokenizer.nextToken()\n    return GenericType(baseName, params)","lang":"py"}
{"idx":1632,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    gg.drawString (string, (getWidth () - width) \/ 2, 11);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1633,"func":"def paintComponent(self, g):\n    super().paintComponent(g);\n    gg = g.cast(Graphics2D);\n    gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    font = Font(\"Arial\", Font.PLAIN, 15);\n    string = \"Distance (m)\";\n    metrics = g.getFontMetrics(font);\n    width = metrics.stringWidth(string);\n    height = metrics.getHeight();\n    gg.setFont(font);\n    gg.drawString(string, (self.getWidth()-width) \/ 2, 11);","lang":"py"}
{"idx":1634,"func":" \npublic void serialize (final Object bean, final JsonGenerator jgen, final SerializerProvider provider) throws IOException, JsonGenerationException {\n    jgen.writeStartObject ();\n    if (_propertyFilterId != null) {\n        serializeFieldsFiltered (bean, jgen, provider);\n    } else {\n        serializeFields (bean, jgen, provider);\n    }\n    serializerListener.postSerialization (bean, jgen);\n    jgen.writeEndObject ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1635,"func":"def serialize(bean, jgen, provider):\n    jgen.writeStartObject()\n\n    if _propertyFilterId is not None:\n        serializeFieldsFiltered(bean, jgen, provider)\n    else:\n        serializeFields(bean, jgen, provider)\n    \n    serializerListener.postSerialization(bean, jgen)\n    jgen.writeEndObject()","lang":"py"}
{"idx":1636,"func":" \npublic static final void main (String...aArgs) {\n    log (\"Generating 10 random integers in range 1..10.\");\n    int START = 1;\n    int END = 10;\n    Random randomGenerator = new Random ();\n    for (int idx = 1;\n    idx <= 10; ++ idx) {\n        showRandomInteger (START, END, randomGenerator);\n    }\n    log (\"Done\");\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1637,"func":"def main(aArgs):\n    print(\"Generating 10 random integers in range 1..10.\")\n    START = 1\n    END = 10\n    randomGenerator = random.Random()\n    for idx in range(1, 11):\n        showRandomInteger(START, END, randomGenerator)\n    print(\"Done.\")","lang":"py"}
{"idx":1638,"func":" \npublic static void main (String [] args) {\n    String s = \"harikrishna\";\n    String s2 = \"\";\n    for (int i = 0;\n    i < s.length (); i ++) {\n        Boolean found = false;\n        for (int j = 0;\n        j < s2.length (); j ++) {\n            if (s.charAt (i) == s2.charAt (j)) {\n                found = true;\n                break;\n            }\n        }\n        if (found == false) {\n            s2 = s2.concat (String.valueOf (s.charAt (i)));\n        }\n    }\n    System.out.println (s2);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1639,"func":"def main(): \n    s = \"harikrishna\"\n    s2 = \"\"\n    for i in range(len(s)):\n    \tfound = False\n    \tfor j in range(len(s2)):\n    \t\tif s[i] == s2[j]:\n    \t\t\tfound = True\n    \t\t\tbreak\n    \tif found == False:\n    \t\ts2 += s[i]\n    print(s2)\n\nmain()","lang":"py"}
{"idx":1640,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    boolean tensFound = false;\n    int number;\n    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number >= 20) {\n        buffer.append (TOKENS [(number \/ 10) - 2]);\n        number %= 10;\n        tensFound = true;\n    } else {\n        number %= 20;\n    }\n    if (number != 0) {\n        if (tensFound) {\n            buffer.append (UNION_SEPARATOR);\n        }\n        buffer.append (unitProcessor.getName (number));\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1641,"func":"def getName(value):\n    buffer = ''\n    tensFound = False\n    number = 0\n    if len(value) > 3:\n        number = int(value[len(value)-3:], 10)\n    else:\n        number = int(value, 10)\n    number %= 100\n    if number >= 20:\n        buffer += TOKENS[(number \/ 10) - 2]\n        number %= 10\n        tensFound = True\n    else:\n        number %= 20\n    if number != 0:\n        if tensFound:\n            buffer += UNION_SEPARATOR\n        buffer += unitProcessor.getName(number)\n    return buffer","lang":"py"}
{"idx":1642,"func":" \npublic int compare (Integer o1, Integer o2) {\n    if (o1 % 2 == 0) {\n        if (o2 % 2 == 0) {\n            if (o1 < o2) return - 1;\n            else return 1;\n        } else {\n            return - 1;\n        }\n    } else {\n        if (o2 % 2 != 0) {\n            if (o1 < o2) return 1;\n            else return - 1;\n        } else {\n            return 1;\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1643,"func":"def compare(o1, o2):\n    if o1 % 2 == 0:\n        if o2 % 2 == 0:\n            if o1 < o2:\n                return -1\n            else:\n                return 1\n        else:\n            return -1\n    else:\n        if o2 % 2 != 0:\n            if o1 < o2:\n                return 1\n            else:\n                return -1\n        else:\n            return 1","lang":"py"}
{"idx":1644,"func":" \n        public void characters (char ch [], int start, int length) throws SAXException {\n            tmpElementValue = new String (ch, start, length);\n        }}\n    ;\n\n#====================\n\n\n","lang":"java"}
{"idx":1645,"func":"def characters(ch, start, length):\n    tmpElementValue = ''.join(map(chr, ch[start:start+length]))","lang":"py"}
{"idx":1646,"func":" \npublic Serializable generate (SessionImplementor session, Object object) throws HibernateException {\n    Serializable result = null;\n    Connection connection = null;\n    Statement statement = null;\n    ResultSet resultSet = null;\n    String prefix = \"emp\";\n    try {\n        connection = session.connection ();\n        statement = connection.createStatement ();\n        try {\n            resultSet = statement.executeQuery (\"SELECT next_val FROM  \" + DEFAULT_SEQUENCE_NAME);\n        } catch (Exception e) {\n            System.out.println (\"In catch, cause : Table is not available.\");\n            statement.execute (\"CREATE table \" + DEFAULT_SEQUENCE_NAME + \" (next_val INT NOT NULL)\");\n            statement.executeUpdate (\"INSERT INTO \" + DEFAULT_SEQUENCE_NAME + \" VALUES(0)\");\n            statement.executeUpdate (\"UPDATE \" + DEFAULT_SEQUENCE_NAME + \" SET next_val=LAST_INSERT_ID(next_val+1)\");\n            resultSet = statement.executeQuery (\"SELECT next_val FROM  \" + DEFAULT_SEQUENCE_NAME);\n        }\n        if (resultSet.next ()) {\n            int nextValue = resultSet.getInt (1);\n            String suffix = String.format (\"%04d\", nextValue);\n            result = prefix.concat (suffix);\n            System.out.println (\"Custom generated sequence is : \" + result);\n        }\n    } catch (SQLException e) {\n        e.printStackTrace ();\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1647,"func":"def generate(session, object):\n    result = None \n    connection = None \n    statement = None \n    resultSet = None \n    prefix = 'emp'\n    try: \n        connection = session.connection()\n        statement = connection.createStatement()\n        try: \n            resultSet = statement.executeQuery('SELECT next_val FROM ' + DEFAULT_SEQUENCE_NAME)\n        except Exception as e: \n            print('In catch, cause: Table is not available.')\n            statement.execute('CREATE table ' + DEFAULT_SEQUENCE_NAME + ' (next_val INT NOT NULL)')\n            statement.executeUpdate('INSERT INTO ' + DEFAULT_SEQUENCE_NAME + ' VALUES(0)')\n            statement.executeUpdate('UPDATE ' + DEFAULT_SEQUENCE_NAME + ' SET next_val=LAST_INSERT_ID(next_val+1)') \n            resultSet = statement.executeQuery('SELECT next_val FROM ' + DEFAULT_SEQUENCE_NAME)\n        if resultSet.next():\n            nextValue = resultSet.getInt(1)\n            suffix = '{:04d}'.format(nextValue)\n            result = prefix + suffix\n            print('Custom generated sequence is: ' + result)\n    except SQLException as e:\n        e.printStackTrace()\n    return result","lang":"py"}
{"idx":1648,"func":" \npublic void onRequestPermissionsResult (int requestCode,@NonNull\nString [] permissions,@NonNull\nint [] grantResults) {\n    super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n    } else {\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1649,"func":"def onRequestPermissionsResult(self, requestCode, permissions, grantResults):\n    super().onRequestPermissionsResult(requestCode, permissions, grantResults)\n    if requestCode == REQUEST_CODE_CAMERA and grantResults[0] == PackageManager.PERMISSION_GRANTED:\n        pass\n    else:\n        pass","lang":"py"}
{"idx":1650,"func":" \npublic void insertNodeAfter (E nVal, E curVal) {\n    Node < E > prev = findPrevOf (curVal);\n    Node < E > curr = null;\n    if (prev == null) {\n        curr = head;\n    } else {\n        curr = prev.getNext ();\n    }\n    Node < E > newNode = new Node < E > (nVal);\n    insert (curr, (curr == null ? curr : curr.getNext ()), newNode);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1651,"func":"def insertNodeAfter(nVal, curVal):\n    prev = findPrevOf(curVal)\n    curr = None\n    if prev == None:\n        curr = head\n    else:\n        curr = prev.getNext()\n    newNode = Node(nVal)\n    insert(curr, (curr if curr else curr.getNext()), newNode)","lang":"py"}
{"idx":1652,"func":" \nint computeHeight () {\n    int maxHeight = 0;\n    int [] heights = new int [parent.length];\n    for (int vertex = 0;\n    vertex < n; vertex ++) {\n        if (heights [vertex] != 0) continue;\n        int height = 0;\n        for (int i = vertex;\n        i != - 1; i = parent [i]) {\n            if (heights [i] != 0) {\n                height += heights [i];\n                break;\n            }\n            height ++;\n        }\n        maxHeight = Math.max (maxHeight, height);\n        for (int i = vertex;\n        i != - 1; i = parent [i]) {\n            if (heights [i] != 0) break;\n            heights [i] = height --;\n        }\n    }\n    return maxHeight;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1653,"func":"def computeHeight():\n    maxHeight = 0\n    heights = [0] * len(parent)\n    for vertex in range(n):\n        if heights[vertex] != 0: \n            continue\n        height = 0\n        current_vertex = vertex\n        while current_vertex != -1:\n            if heights[current_vertex] != 0:\n                height += heights[current_vertex]\n                break\n            else:\n                height += 1\n                current_vertex = parent[current_vertex]\n        maxHeight = max(maxHeight, height)\n        current_vertex = vertex\n        while current_vertex != -1:\n            if heights[current_vertex] != 0:\n                break\n            else:\n                heights[current_vertex] = height\n                height -= 1\n                current_vertex = parent[current_vertex]\n    return maxHeight","lang":"py"}
{"idx":1654,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1655,"func":"def filter(source, start, end, dest, dstart, dend):\n    dot_pos = -1\n    length = len(dest)\n    for i in range(length):\n        if dest[i] == '.' or dest[i] == ',':\n            dot_pos = i\n            break\n\n    if dot_pos >= 0:\n        if source == '.' or source == ',':\n            return \"\"\n        if dend <= dot_pos:\n            return None\n        elif length - dot_pos > decimal_digits:\n            return \"\"\n    return None","lang":"py"}
{"idx":1656,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1657,"func":"def getName(value):\n    negative = False\n    if value.startswith(\"-\"):\n        negative = True\n        value = value[1:]\n    decimals = value.find(\".\")\n    decimalValue = None\n    if 0 <= decimals:\n        decimalValue = value[decimals+1:]\n        value = value[:decimals]\n    name = processor.getName(value)\n    if name == \"\":\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n    if decimalValue and decimalValue != \"\":\n        zeroDecimalValue = \"\"\n        for i in range(len(decimalValue)):\n            zeroDecimalValue += \"0\"\n        if decimalValue == zeroDecimalValue:\n            name += SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue))\n        else:\n            name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    return name","lang":"py"}
{"idx":1658,"func":" \npublic static void CountbyChar (String s) {\n    HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();\n    char [] c = s.toCharArray ();\n    for (int i = 0;\n    i < c.length; i ++) {\n        Integer count = 0;\n        if (letterCountMap.containsKey (c [i])) {\n            count = letterCountMap.get (c [i]) + 1;\n        } else {\n            count = 1;\n        }\n        letterCountMap.put (c [i], count);\n    }\n    for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {\n        System.out.println (entry.getValue () + \"( for\" + entry.getKey () + \" )\");\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1659,"func":"def count_by_char(s):\n    letter_count_map = {}\n    for c in s:\n        if c in letter_count_map:\n            letter_count_map[c] += 1\n        else:\n            letter_count_map[c] = 1\n    for key, value in letter_count_map.items():\n        print(value, \"( for \", key, \")\")","lang":"py"}
{"idx":1660,"func":" \npublic static void main (String [] args) {\n    int temp = 0;\n    out : for (int i = 0;\n    i < 3; ++ i) {\n        System.out.println (\"I am here\");\n        for (int j = 0;\n        j < 20; ++ j) {\n            if (temp == 0) {\n                System.out.println (\"j: \" + j);\n                if (j == 1) {\n                    temp = j;\n                    continue out;\n                }\n            }\n        }\n    }\n    System.out.println (\"temp = \" + temp);\n}","lang":"java"}
{"idx":1661,"func":"temp = 0\nfor i in range(3):\n    print(\"I am here\")\n    for j in range(20):\n        if temp == 0:\n            print(\"j: \", j)\n            if j == 1:\n                temp=j\n                continue\nprint(\"temp = \", temp)\n","lang":"py"}
{"idx":1662,"func":" \npublic static void main (String args []) {\n    try {\n        URLBuilder url = new URLBuilder ();\n        System.out.println (url.toString ());\n        url.setFragment (\"fragment\");\n        System.out.println (url.toString ());\n        url.setHost (\"host.com\");\n        System.out.println (url.toString ());\n        url.addPath (\"APath\");\n        System.out.println (url.toString ());\n        url.addPath (\"AnotherPath\");\n        System.out.println (url.toString ());\n        url.addQuery (\"query1\", \"param1\");\n        System.out.println (url.toString ());\n        url.addQuery (\"query 2\", \"param 2\");\n        System.out.println (url.toString ());\n        url.addQuery (\"file\", new File (\"Hello World.txt\"));\n        System.out.println (url.toString ());\n    } catch (Throwable t) {\n        t.printStackTrace (System.err);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1663,"func":"def main(args):\n    try:\n        url = URLBuilder()\n        print(url.toString())\n        url.setFragment(\"fragment\")\n        print(url.toString())\n        url.setHost(\"host.com\")\n        print(url.toString())\n        url.addPath(\"APath\")\n        print(url.toString())\n        url.addPath(\"AnotherPath\")\n        print(url.toString())\n        url.addQuery(\"query1\", \"param1\")\n        print(url.toString())\n        url.addQuery(\"query 2\", \"param 2\")\n        print(url.toString())\n        url.addQuery(\"file\", File(\"Hello World.txt\"))\n        print(url.toString())\n    except Throwable as t:\n        t.printStackTrace(sys.stderr)","lang":"py"}
{"idx":1664,"func":" \nprivate void type (char character) {\n    handleSpecialCharacter (character);\n    if (Character.isLowerCase (character)) {\n        typeCharacter (Character.toUpperCase (character));\n    }\n    if (Character.isUpperCase (character)) {\n        typeShiftCharacter (character);\n    }\n    if (Character.isDigit (character)) {\n        typeCharacter (character);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1665,"func":"def type(character): \n    handleSpecialCharacter(character) \n    if character.islower(): \n        typeCharacter(character.upper()) \n    if character.isupper(): \n        typeShiftCharacter(character) \n    if character.isdigit(): \n        typeCharacter(character)","lang":"py"}
{"idx":1666,"func":" \npublic static void main (String [] args) {\n    Random ran = new Random ();\n    int min, max;\n    Scanner sc = new Scanner (System.in);\n    System.out.println (\"Enter min range:\");\n    min = sc.nextInt ();\n    System.out.println (\"Enter max range:\");\n    max = sc.nextInt ();\n    int num = ran.nextInt (min);\n    int num1 = ran.nextInt (max);\n    System.out.println (\"Random Number between given range is \" + num1);\n}","lang":"java"}
{"idx":1667,"func":"import random \nmin = int(input(\"Enter min range: \"))\nmax = int(input(\"Enter max range: \"))\nnum = random.randint(min,max)\nprint(\"Random Number between given range is\", num)\n","lang":"py"}
{"idx":1668,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1669,"func":"def getName(value):\n    negative = False\n    if value.startswith('-'):\n        negative = True \n        value = value[1:]\n    decimals = value.find(\".\") \n    decimal_value = None\n    if decimals >= 0:\n        decimal_value = value[decimals+1:]\n        value = value[:decimals]\n\n    name = processor.getName(value)\n    if name == \"\":\n        name = ZERO_TOKEN\n    elif negative: \n        name = MINUS + SEPARATOR + name\n\n    if decimal_value and not (decimal_value == \"\"):\n        zero_decimal_value = \"\"\n        for i in range(len(decimal_value)):\n            zero_decimal_value += \"0\"\n\n        if decimal_value == zero_decimal_value:\n            name = name + SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimal_value))\n        else:\n            name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimal_value) + SEPARATOR + SCALE.getName(-len(decimal_value))\n\n    return name","lang":"py"}
{"idx":1670,"func":" \npublic static boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) {\n        return false;\n    }\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();\n    char [] c1 = s1.toCharArray ();\n    char [] c2 = s2.toCharArray ();\n    Arrays.sort (c1);\n    Arrays.sort (c2);\n    String sc1 = new String (c1);\n    String sc2 = new String (c2);\n    return sc1.equals (sc2);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1671,"func":"def isAnagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n\n    s1 = s1.lower()\n    s2 = s2.lower()\n    c1 = list(s1)\n    c2 = list(s2)\n\n    c1.sort()\n    c2.sort()\n\n    sc1 = \"\".join(c1)\n    sc2 = \"\".join(c2)\n\n    return sc1 == sc2","lang":"py"}
{"idx":1672,"func":" \npublic String toString () {\n    StringBuilder sb = new StringBuilder ();\n    sb.append (a + \"\\n\");\n    sb.append (b + \"\\n\");\n    for (A elem : aList) {\n        sb.append (elem + \"\\n\");\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1673,"func":"def toString(self):\n    sb = \"\"\n    sb+= str(self.a) + \"\\n\"\n    sb+= str(self.b) + \"\\n\"\n    for elem in self.aList:\n        sb+= str(elem) + \"\\n\"\n    return sb","lang":"py"}
{"idx":1674,"func":" \npublic static void main (String [] args) {\n    Scanner kb = new Scanner (System.in);\n    String name;\n    int age;\n    char bloodGroup;\n    float height;\n    System.out.println (\"Enter Your Name\");\n    name = kb.nextLine ();\n    System.out.println (\"Enter Your Age\");\n    age = kb.nextInt ();\n    System.out.println (\"Enter Your BloodGroup : A\/B\/O only\");\n    bloodGroup = kb.next ().charAt (0);\n    System.out.println (\"Enter Your Height in Meters\");\n    height = kb.nextFloat ();\n    kb.close ();\n    System.out.println (\"Name : \" + name);\n    System.out.println (\"Age : \" + age);\n    System.out.println (\"BloodGroup : \" + bloodGroup);\n    System.out.println (\"Height : \" + height + \" m\");\n}","lang":"java"}
{"idx":1675,"func":"name = input('Enter Your Name: ')\nage = int(input('Enter Your Age: '))\nbloodGroup = input('Enter Your BloodGroup : A\/B\/O only: ') \nheight = float(input('Enter Your Height in Meters: '))\nprint('Name:',name)\nprint('Age:',age)\nprint('Blood Group:',bloodGroup)\nprint('Height:',height,'m')\n","lang":"py"}
{"idx":1676,"func":" \npublic void sort (int [] input) {\n    for (int i = 0;\n    i < input.length - 1; i ++) {\n        int k = i + 1;\n        int nxtVal = input [k];\n        while (input [k - 1] > nxtVal) {\n            input [k] = input [k - 1];\n            k --;\n            if (k == 0) break;\n        }\n        input [k] = nxtVal;\n    }\n    System.out.println (\"Medium sorting is done and the result is :\");\n    for (int i : input) {\n        System.out.print (i + \",\");\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1677,"func":"def sort(input):\n    for i in range(len(input) - 1):\n        k = i +1\n        nxtVal = input[k]\n        while input[k-1] > nxtVal and k != 0:\n            input[k] = input[k - 1]\n            k -= 1\n        input[k] = nxtVal\n\n    print(\"Medium sorting is done and the result is:\")\n    for i in input:\n        print(str(i) + \",\", end = \"\")","lang":"py"}
{"idx":1678,"func":" \npublic void serialize (final Object bean, final JsonGenerator jgen, final SerializerProvider provider) throws IOException, JsonGenerationException {\n    jgen.writeStartObject ();\n    if (_propertyFilterId != null) {\n        serializeFieldsFiltered (bean, jgen, provider);\n    } else {\n        serializeFields (bean, jgen, provider);\n    }\n    serializerListener.postSerialization (bean, jgen);\n    jgen.writeEndObject ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1679,"func":"def serialize(bean, jgen, provider):\n    try:\n        jgen.writeStartObject()\n        if _propertyFilterId != None:\n            serializeFieldsFiltered(bean, jgen, provider)\n        else:\n            serializeFields(bean, jgen, provider)\n        serializerListener.postSerialization(bean, jgen)\n        jgen.writeEndObject()\n    except IOException, JsonGenerationException:\n        print(\"Error during serialization.\")","lang":"py"}
{"idx":1680,"func":" \npublic Speedo manage (int speed) {\n    if (speed < getLowRange ()) {\n        onLowTransition ();\n        return getLowState ();\n    } else if (speed > getHighRange ()) {\n        onHighTransition ();\n        return getHighState ();\n    } else {\n        return this;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1681,"func":"def manage(speed):\n  if speed <= getLowRange ():\n    onLowTransition()\n    return getLowState()\n  elif speed > getHighRange():\n    onHighTransition()\n    return getHighState()\n  else:\n    return self","lang":"py"}
{"idx":1682,"func":" \npublic static int solution (int X, int [] A) {\n    int [] count = new int [X];\n    for (int i = 0;\n    i < A.length; i ++) {\n        try {\n            count [A [i] - 1] ++;\n        } catch (ArrayIndexOutOfBoundsException e) {\n        }\n        if (i >= X - 1) {\n            for (int j = 0;\n            j < count.length; j ++) {\n                if (count [j] == 0) {\n                    break;\n                }\n                if (j == count.length - 1) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1683,"func":"def solution(x, a):  \n    count = [0] * x  \n    for i in range(len(a)):  \n        try:\n            count[a[i] - 1] += 1\n        except: \n            continue \n        if i >= x - 1:  \n            for j in range(len(count)):  \n                if count[j] == 0:  \n                    break  \n                if j == len(count) - 1:  \n                    return i \n    return -1","lang":"py"}
{"idx":1684,"func":" \npublic static void main (String [] args) {\n    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;\n    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }\n    System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n}","lang":"java"}
{"idx":1685,"func":"","lang":"py"}
{"idx":1686,"func":" \npublic static String shuffle (String text) {\n    char [] characters = text.toCharArray ();\n    for (int i = 0;\n    i < characters.length; i ++) {\n        int randomIndex = (int) (Math.random () * characters.length);\n        char temp = characters [i];\n        characters [i] = characters [randomIndex];\n        characters [randomIndex] = temp;\n    }\n    return new String (characters);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1687,"func":"def shuffle(text): \n    characters = list(text) \n    for i in range(len(characters)): \n        random_index = random.randint(0, len(characters)- 1) \n        characters[i], characters[random_index] = characters[random_index], characters[i] \n    return ''.join(characters)","lang":"py"}
{"idx":1688,"func":" \npublic static void main (String [] args) {\n    Integer n = Integer.parseInt (args [0]);\n    Queue < Integer > q = new Queue < Integer > ();\n    while (! StdIn.isEmpty ()) {\n        q.enqueue (StdIn.readInt ());\n    }\n    while (q.size () > n) {\n        q.dequeue ();\n    }\n    StdOut.println (q.peek ().toString ());\n}","lang":"java"}
{"idx":1689,"func":"import sys\nfrom queue import Queue\nn = int(sys.argv[1])\nq = Queue()\nwhile True:\n    try:\n        num = int(input())\n        q.put(num)\n    except:\n        break\nwhile q.qsize() > n:\n    q.get()\nprint(q.get())\n","lang":"py"}
{"idx":1690,"func":" \npublic void mouseDragged (MouseEvent e) {\n    JViewport vport = (JViewport) e.getSource ();\n    JComponent label = (JComponent) vport.getView ();\n    Point cp = e.getPoint ();\n    Point vp = vport.getViewPosition ();\n    vp.translate (pp.x - cp.x, pp.y - cp.y);\n    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));\n    pp.setLocation (cp);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1691,"func":"def mouseDragged(e):\n    vport = e.getSource()\n    label = vport.getView()\n    cp = e.getPoint()\n    vp = vport.getViewPosition()\n    vp.translate(pp.x - cp.x, pp.y -cp.y)\n    label.scrollRectToVisible(Rectangle(vp, vport.getSize()))\n    pp.setLocation(cp)","lang":"py"}
{"idx":1692,"func":" \npublic void run () {\n    for (int i = 1;\n    i < 10; i += 2) {\n        synchronized (o) {\n            try {\n                while (! turn) {\n                    o.wait ();\n                }\n            } catch (InterruptedException ie) {\n                ie.printStackTrace ();\n            } finally {\n                System.out.println (i);\n                turn = ! turn;\n                o.notifyAll ();\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1693,"func":"def run():\n    for i in range(1, 10, 2):\n        with o:\n            while not turn:\n                o.wait()\n            print(i)\n            turn = not turn\n            o.notify_all()","lang":"py"}
{"idx":1694,"func":" \npublic int solution (int X, int [] A) {\n    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1695,"func":"def solution(x, A):\n    n = len(A)\n    check = [False]*x\n    cmp = 0\n    time = -1\n    \n    for i in range(n):\n        temp = A[i]\n        if temp <= x:\n            if check[temp - 1] is True:\n                continue\n            else:\n                check[temp - 1] = True\n                cmp += 1\n        if cmp == x:\n            time = i\n            break\n    return time","lang":"py"}
{"idx":1696,"func":" \npublic static boolean hasLoop (Node root) {\n    if (root == null) return false;\n    Node slow = root, fast = root;\n    int taken = 0, limit = 2;\n    while (fast.next != null) {\n        fast = fast.next;\n        taken ++;\n        if (slow == fast) return true;\n        if (taken == limit) {\n            taken = 0;\n            limit <<= 1;\n            slow = fast;\n        }\n    }\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1697,"func":"def hasLoop(root):\n    if root is None:\n        return False\n\n    slow = root\n    fast = root\n    taken = 0\n    limit = 2\n\n    while fast.next is not None:\n        fast = fast.next\n        taken += 1\n        if slow == fast:\n            return True\n        if taken == limit:\n            taken = 0\n            limit <<= 1\n            slow = fast\n\n    return False","lang":"py"}
{"idx":1698,"func":" \npublic String getInput (String filename) {\n    BufferedReader infile = null;\n    try {\n        infile = new BufferedReader (new FileReader (filename));\n        String response = infile.readLine ();\n        return response;\n    } catch (IOException e) {\n    } finally {\n        try {\n            infile.close ();\n        } catch (IOException e) {\n        }\n    }\n    return null;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":1699,"func":"def getInput(filename):\n  infile = None\n  try:\n    infile = open(filename)\n    response = infile.readline()\n    return response\n  except IOError as e:\n    pass\n  finally:\n    try:\n      infile.close()\n    except IOError as e:\n      pass\n  return None","lang":"py"}
{"idx":1700,"func":" \npublic static String compress (String text) {\n    String result = \"\";\n    int index = 0;\n    while (index < text.length ()) {\n        char c = text.charAt (index);\n        int count = count (text, index);\n        if (count == 1) result += \"\" + c;\n        else result += \"\" + count + c;\n        index += count;\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1701,"func":"def compress(text): \n  result = \"\" \n  index = 0\n  while index < len(text): \n    c = text[index] \n    count = 0\n    while index < len(text) and text[index] == c: \n      count += 1\n      index += 1\n    if count == 1: \n      result += c \n    else: \n      result += str(count) + c \n  return result","lang":"py"}
{"idx":1702,"func":" \nprivate void parseComments (InputStream in, Workbook workbook) {\n    try {\n        DefaultHandler handler = getCommentHandler (workbook);\n        SAXParser saxParser = getSAXParser ();\n        saxParser.parse (in, handler);\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1703,"func":"def parseComments(in_stream, workbook):\n    try:\n        handler = getCommentHandler(workbook)\n        sax_parser = getSAXParser()\n        sax_parser.parse(in_stream, handler)\n    except Exception as e:\n        print(e)","lang":"py"}
{"idx":1704,"func":" \npublic static void main (String [] args) {\n    String number1 = \"108\";\n    String number2 = \"84\";\n    char [] n1 = number1.toCharArray ();\n    char [] n2 = number2.toCharArray ();\n    int result = 0;\n    for (int i = 0;\n    i < n1.length; i ++) {\n        for (int j = 0;\n        j < n2.length; j ++) {\n            result += (n1 [i] - '0') * (n2 [j] - '0') * (int) Math.pow (10, n1.length + n2.length - (i + j + 2));\n        }\n    }\n    System.out.println (result);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1705,"func":"def main():\n    number1 = \"108\"\n    number2 = \"84\"\n    n1 = list(map(int, number1))\n    n2 = list(map(int, number2))\n    result = 0\n    for i in range(len(n1)):\n        for j in range(len(n2)):\n            result += n1[i] * n2[j] * (10 ** (len(n1) + len(n2) - (i + j + 2)))\n    print(result)\n\nif __name__ == \"__main__\":\n    main()","lang":"py"}
{"idx":1706,"func":" \npublic static void main (String [] args) throws IOException {\n    final SSHClient ssh = new SSHClient ();\n    ssh.loadKnownHosts ();\n    ssh.connect (\"localhost\");\n    try {\n        ssh.authPublickey (System.getProperty (\"user.name\"));\n        final String src = System.getProperty (\"user.home\") + File.separator + \"test_file\";\n        final SFTPClient sftp = ssh.newSFTPClient ();\n        try {\n            sftp.put (new FileSystemFile (src), \"\/tmp\");\n        } finally {\n            sftp.close ();\n        }\n    } finally {\n        ssh.disconnect ();\n    }\n}\n\n\n\n\n\nfrom ssh2.session import Session\nfrom ssh2.sftp import File\n\n","lang":"java"}
{"idx":1707,"func":"def main():\n    ssh = Session()\n    ssh.load_known_hosts()\n    ssh.connect('localhost')\n    try:\n        ssh.userauth_publickey_fromfile(os.environ['username'])\n        src = f\"{os.environ['user.home']}\/test_file\"\n        sftp = ssh.sftp_init()\n        try:\n            file = File(sftp, src)\n            file.send('\/tmp')\n        except Exception as e:\n            print('Error:', e)\n        finally:\n            sftp.close()\n    finally:\n        ssh.disconnect()\n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":1708,"func":" \nprivate void transform (Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (styleOld.getFont (this.workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1709,"func":"def transform(hash, styleOld, styleNew):\n    styleNew.alignment = styleOld.alignment\n    styleNew.border_bottom = styleOld.border_bottom\n    styleNew.border_left = styleOld.border_left\n    styleNew.border_right = styleOld.border_right\n    styleNew.border_top = styleOld.border_top\n    styleNew.data_format = transform(styleOld.data_format)\n    styleNew.fill_background_color = styleOld.fill_background_color\n    styleNew.fill_foreground_color = styleOld.fill_foreground_color\n    styleNew.fill_pattern = styleOld.fill_pattern\n    styleNew.font = transform(styleOld.font)\n    styleNew.hidden = styleOld.hidden\n    styleNew.indention = styleOld.indention\n    styleNew.locked = styleOld.locked\n    styleNew.vertical_alignment = styleOld.vertical_alignment\n    styleNew.wrap_text = styleOld.wrap_text\n    styleMap[hash] = styleNew","lang":"py"}
{"idx":1710,"func":" \nprivate static String decrypt (final String s) {\n    final List < Integer > crypt = new ArrayList < > ();\n    final String [] groups = s.split (\"#\");\n    for (int i = 0;\n    i < groups.length; i ++) {\n        final String group = groups [i];\n        int j = 0;\n        if ((i == (groups.length - 1)) && ! s.endsWith (\"#\")) {\n            j = group.length ();\n        }\n        if (group.length () > 2) {\n            j = group.length () - 2;\n        }\n        for (int k = 0;\n        k < j; k ++) {\n            crypt.add (Integer.valueOf (group.substring (k, k + 1)));\n        }\n        if (j < group.length ()) {\n            crypt.add (Integer.valueOf (group.substring (j, group.length ())));\n        }\n    }\n    final StringBuilder n = new StringBuilder (crypt.size ());\n    for (final Integer c : crypt) {\n        final char d = (char) (('a' + c) - 1);\n        n.append (d);\n    }\n    return n.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1711,"func":"def decrypt(s):\n  crypt = []\n  groups = s.split('#')\n  for i in range(len(groups)):\n    group = groups[i]\n    j = 0\n    if (i == len(groups) - 1 and not s.endswith('#')):\n      j = len(group)\n    if len(group) > 2:\n      j = len(group) - 2\n    for k in range(j):\n      crypt.append(int(group[k: k+1]))\n    if j < len(group):\n      crypt.append(int(group[j: len(group)]))\n  n = ''\n  for c in crypt:\n    d = chr(ord('a') + c - 1)\n    n += d\n  return n","lang":"py"}
{"idx":1712,"func":" \npublic static int [] removeDuplicates (int [] arr) {\n    boolean [] set = new boolean [1001];\n    int totalItems = 0;\n    for (int i = 0;\n    i < arr.length; ++ i) {\n        if (! set [arr [i]]) {\n            set [arr [i]] = true;\n            totalItems ++;\n        }\n    }\n    int [] ret = new int [totalItems];\n    int c = 0;\n    for (int i = 0;\n    i < set.length; ++ i) {\n        if (set [i]) {\n            ret [c ++] = i;\n        }\n    }\n    return ret;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1713,"func":"def removeDuplicates(arr): \n    set_ = {} \n    total_items = 0 \n    for i in arr: \n        if i not in set_: \n            set_[i] = True\n            total_items += 1\n    res = [0] * total_items \n    c = 0\n    for i in range(len(set_)): \n        if set_[i]: \n            res[c] = i\n            c += 1 \n    return res","lang":"py"}
{"idx":1714,"func":" \npublic static void main (String args []) throws InterruptedException, IOException {\n    List < String > command = new ArrayList < String > ();\n    command.add (args [0]);\n    ProcessBuilder builder = new ProcessBuilder (command);\n    Map < String, String > environ = builder.environment ();\n    final Process process = builder.start ();\n    InputStream is = process.getInputStream ();\n    InputStreamReader isr = new InputStreamReader (is);\n    BufferedReader br = new BufferedReader (isr);\n    String line;\n    while ((line = br.readLine ()) != null) {\n        System.out.println (line);\n    }\n    System.out.println (\"Program terminated!\");\n}\n\n\n\n\n\nimport os\nimport subprocess\n\n","lang":"java"}
{"idx":1715,"func":"def main(args):\n    command = [args[0]]\n    environ = os.environ\n    process = subprocess.Popen(command, env=environ)\n    \n    for line in iter(process.stdout.readline, b''):\n        print(line.decode('utf-8'))\n    process.stdout.close()\n    \n    print(\"Program terminated!\")","lang":"py"}
{"idx":1716,"func":" \npublic static void main (String [] args) {\n    String str = \"abcdabghplhhnfl\".toLowerCase ();\n    Integer [] ar = new Integer [26];\n    for (int i = 0;\n    i < str.length (); i ++) {\n        int j = str.charAt (i) - 'a';\n        if (ar [j] == null) {\n            ar [j] = 1;\n        } else {\n            ar [j] += 1;\n        }\n    }\n    for (int i = 0;\n    i < ar.length; i ++) {\n        if (ar [i] != null && ar [i] > 1) {\n            char c = (char) (97 + i);\n            System.out.println (\"'\" + c + \"' comes \" + ar [i] + \" times.\");\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1717,"func":"def main(args): \n    str = \"abcdabghplhhnfl\".lower() \n    ar = [0] * 26\n    for i in range(len(str)): \n        j = ord(str[i]) - ord('a') \n        if ar[j] == 0: \n            ar[j] = 1\n        else: \n            ar[j] += 1\n    for i in range(len(ar)): \n        if ar[i] > 1: \n            c = chr(97 + i) \n            print(\"'\" + c + \"' comes \" + str(ar[i]) + \" times.\")","lang":"py"}
{"idx":1718,"func":" \npublic String longestSequenceOfChar (String str) {\n    String interimresult = \"\";\n    String result = \"\";\n    for (int i = 0;\n    i < str.length (); i ++) {\n        char ch = str.charAt (i);\n        interimresult += ch;\n        for (int j = i + 1;\n        j < str.length (); j ++) {\n            char ch1 = str.charAt (j);\n            if (ch != ch1) {\n                break;\n            }\n            interimresult += ch;\n        }\n        if (interimresult.length () > result.length ()) result = interimresult;\n        interimresult = \"\";\n    }\n    return result;\n}\n\n\n#====================\n\n\n\n","lang":"java"}
{"idx":1719,"func":"def longestSequenceOfChar(str): \n  interimresult = \"\"\n  result = \"\"\n  for i in range(len(str)):\n    ch = str[i]\n    interimresult += ch\n    for j in range(i+1, len(str)):\n      ch1 = str[j]\n      if ch != ch1: \n        break \n      interimresult += ch\n    if len(interimresult) > len(result): \n      result = interimresult\n    interimresult = \"\" \n  return result","lang":"py"}
{"idx":1720,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1721,"func":"def getName(value):\n    negative = False\n    if value.startswith(\"-\"):\n        negative = True\n        value = value[1:]\n    \n    decimals = value.find(\".\")\n    decimalValue = None\n    if decimals >= 0:\n        decimalValue = value[decimals+1:]\n        value = value[:decimals]\n    \n    name = processor.getName(value)\n    if name == \"\":\n        name = ZERO_TOKEN\n    elif negative:\n        name = \"-\" + SEPARATOR + name\n    \n    if decimalValue and decimalValue != \"\":\n        zeroDecimalValue = \"\"\n        for i in range(len(decimalValue)):\n            zeroDecimalValue += \"0\"\n        \n        if decimalValue == zeroDecimalValue:\n            name += SEPARATOR + UNION_AND + SEPARATOR + \"zero\" + SEPARATOR + SCALE.getName(-len(decimalValue)) \n        else:\n            name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-len(decimalValue))\n    \n    return name","lang":"py"}
{"idx":1722,"func":" \npublic static int maxBlock (String str) {\n    int maxCounter = 1;\n    int counter = 1;\n    if (str.length () == 0) {\n        return 0;\n    }\n    for (int i = 1;\n    i < str.length (); i ++) {\n        if (str.charAt (i - 1) == str.charAt (i)) {\n            counter ++;\n        } else {\n            if (counter > maxCounter) {\n                maxCounter = counter;\n            }\n            counter = 1;\n        }\n    }\n    return Math.max (maxCounter, counter);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1723,"func":"def maxBlock(str): \n  maxCounter = 1\n  counter = 1\n  if len(str) == 0: \n    return 0\n  \n  for i in range(1, len(str)): \n    if str[i - 1] == str[i]: \n      counter += 1\n    else: \n      if counter > maxCounter: \n        maxCounter = counter\n      counter = 1\n  \n  return max(maxCounter, counter)","lang":"py"}
{"idx":1724,"func":" \npublic static void main (String [] args) {\n    int count = 0;\n    String str = \"hi this is is is line\";\n    String [] s1 = str.split (\" \");\n    for (int i = 0;\n    i <= s1.length - 1; i ++) {\n        if (s1 [i].equals (\"is\")) {\n            count ++;\n        }\n    }\n    System.out.println (count);\n}","lang":"java"}
{"idx":1725,"func":"str = \"hi this is is is line\"\n","lang":"py"}
{"idx":1726,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";\n    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);\n    Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);\n    if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1727,"func":"def filter(source, start, end, dest, dstart, dend):\n    \n    #assign variable for manipulation\n    lsStart = ''\n    lsInsert = ''\n    lsEnd = ''\n    lsText = ''\n    print('debug ', moPattern.to_string())\n    print('debug ', f'source: {source}, start: {start}, end:{end}, dest: {dest}, dstart: {dstart}, dend: {dend}')\n    \n    #check if lsText is not empty\n    lsText = dest.to_string()\n    if len(lsText) > 0:\n        lsStart = lsText[:dstart]\n        print('debug ', f'lsStart : {lsStart}')\n\n        #check if source is not empty\n        if source != '':\n            lsInsert = source.to_string()\n            print('debug ', f'lsInsert : {lsInsert}')\n\n        lsEnd = lsText[dend:]\n        print('debug ', f'lsEnd : {lsEnd}')\n        lsText = lsStart + lsInsert + lsEnd\n        print('debug ', f'lsText : {lsText}')\n    \n    #checks if pattern matches\n    loMatcher = moPattern.matcher(lsText)\n    print('debug ', f'loMatcher.matches(): {loMatcher.matches()}, lsText: {lsText}')\n    if not loMatcher.matches():\n        return ''\n\n    return None","lang":"py"}
{"idx":1728,"func":" \npublic static void main (String [] args) {\n    JFrame frame = new JFrame ();\n    frame.setDefaultCloseOperation (WindowConstants.EXIT_ON_CLOSE);\n    frame.getContentPane ().setLayout (new BorderLayout (0, 0));\n    JPanel centerPanel = new JPanel ();\n    centerPanel.setPreferredSize (new Dimension (300, 200));\n    centerPanel.setBackground (Color.green);\n    centerPanel.setCursor (new Cursor (java.awt.Cursor.HAND_CURSOR));\n    frame.getContentPane ().add (centerPanel);\n    JPanel northPanel = new JPanel ();\n    northPanel.setBackground (Color.RED);\n    northPanel.setForeground (Color.BLACK);\n    northPanel.setPreferredSize (new Dimension (0, 150));\n    frame.getContentPane ().add (northPanel, BorderLayout.NORTH);\n    JPanel westPanel = new JPanel ();\n    westPanel.setBackground (Color.MAGENTA);\n    westPanel.setPreferredSize (new Dimension (200, 0));\n    frame.getContentPane ().add (westPanel, BorderLayout.WEST);\n    JPanel southPanel = new JPanel ();\n    southPanel.setBackground (Color.YELLOW);\n    southPanel.setPreferredSize (new Dimension (0, 150));\n    frame.getContentPane ().add (southPanel, BorderLayout.SOUTH);\n    JPanel eastPanel = new JPanel ();\n    eastPanel.setBackground (Color.BLUE);\n    eastPanel.setPreferredSize (new Dimension (200, 0));\n    frame.getContentPane ().add (eastPanel, BorderLayout.EAST);\n    frame.pack ();\n    frame.setVisible (true);\n    frame.setLocationRelativeTo (null);\n}","lang":"java"}
{"idx":1729,"func":"import tkinter\n","lang":"py"}
{"idx":1730,"func":" \npublic static void main (String [] args) {\n    int n = 15;\n    int [] [] pascal = new int [n + 1] [];\n    pascal [1] = new int [1 + 2];\n    pascal [1] [1] = 1;\n    for (int i = 2;\n    i <= n; i ++) {\n        pascal [i] = new int [i + 2];\n        for (int j = 1;\n        j < pascal [i].length - 1; j ++) pascal [i] [j] = pascal [i - 1] [j - 1] + pascal [i - 1] [j];\n    }\n    for (int i = 1;\n    i <= n; i ++) {\n        for (int j = 1;\n        j < pascal [i].length - 1; j ++) {\n            System.out.print (pascal [i] [j] + \" \");\n        }\n        System.out.println ();\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1731,"func":"def create_pascal(n):\n  Pascal = [[1]*(i+1) for i in range(n)]\n  for i in range(n):\n    for j in range(1,i):\n      Pascal[i][j] = Pascal[i-1][j-1] + Pascal[i-1][j]\n  return Pascal\ndef print_pascal(Pascal):\n  for i in range(len(Pascal)):\n    for j in range(len(Pascal[i])):\n      print(Pascal[i][j], end=\" \")\n    print(\"\")\n\nn = 15\nPascal = create_pascal(n)\nprint_pascal(Pascal)","lang":"py"}
{"idx":1732,"func":" \npublic static void countString (String str, char searchKey) {\n    String count = \"\";\n    for (int i = 0;\n    i < str.length (); i ++) {\n        if (str.charAt (i) == searchKey) count += str.charAt (i) + \"\\n\";\n    }\n    System.out.println (count + \"\\nNumber of Occurrence of \" + searchKey + \" is \" + count.length () + \" in string \" + str);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1733,"func":"def countString(s, searchKey):\n\tcount = \"\"\n\tfor i in range(len(s)):\n\t\tif s[i] == searchKey:\n            count += s[i] + \"\\n\"\n\t\n\tprint(count + \"\\nNumber of Occurrence of \" + searchKey + \" is \" + str(len(count)) + \" in string \" + s)","lang":"py"}
{"idx":1734,"func":" \npublic static void main (String [] args) {\n    String string = \"aaabbbbbaccc\";\n    int counter;\n    String result = \"\";\n    int i = 0;\n    while (i < string.length ()) {\n        counter = 1;\n        for (int j = i + 1;\n        j < string.length (); j ++) {\n            System.out.println (\"string length =\" + string.length ());\n            if (string.charAt (i) == string.charAt (j)) {\n                counter ++;\n            }\n        }\n        result = result + string.charAt (i) + counter;\n        string = string.replaceAll (String.valueOf (string.charAt (i)), \"\");\n    }\n    System.out.println (\"result is = \" + result);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1735,"func":"def main():\n  string = 'aaabbbbbaccc'\n  counter = 0 \n  result = ''\n  i = 0\n  while i < len(string): \n    counter = 1\n    for j in range(i+1, len(string)): \n      if string[i] == string[j]:\n        counter += 1\n    result = result + string[i] + str(counter)\n    string = string.replace(string[i], '')\n  print('result is = ' + result)\n\nif __name__ == '__main__':\n  main()","lang":"py"}
{"idx":1736,"func":" \npublic Node reverse (Node previous, Node current) {\n    if (previous == null) return null;\n    if (previous.equals (head)) previous.setNext (null);\n    if (current == null) {\n        head = previous;\n        return head;\n    } else {\n        Node temp = current.getNext ();\n        current.setNext (previous);\n        reverse (current, temp);\n    }\n    return null;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1737,"func":"def reverse(previous, current): \n  if previous is None: \n    return None \n  if previous == head: \n    previous.next = None\n  if current is None: \n    head = previous \n    return head \n  else: \n    temp = current.next\n    current.next = previous\n    reverse(current, temp)\n  return None","lang":"py"}
{"idx":1738,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    Thread t = new Thread (() -> {\n        try {\n            Thread.sleep (5000L);\n        } catch (InterruptedException e) {\n            e.printStackTrace ();\n        }\n    });\n    System.out.println (\"Starting Server!\");\n    t.start ();\n    t.join ();\n    System.out.println (\"Server is done!\");\n}\n\n\n\n\n\nimport threading\n","lang":"java"}
{"idx":1739,"func":"def start_server():\n    try:\n        t = threading.Thread(target=threaded_function)\n        t.start()\n        t.join()\n    except InterruptedException:\n        print(\"Thread was interrupted\")\ndef threaded_function():\n    try:\n        time.sleep(5000)\n    except InterruptedException:\n        print(\"Thread was interrupted\")\n\nprint(\"Starting Server!\")\nstart_server()\nprint(\"Server is done!\")","lang":"py"}
{"idx":1740,"func":" \npublic static void main (String [] args) {\n    String output = \"\";\n    Multiset < String > wordsMultiset = HashMultiset.create ();\n    String [] words = \"AAABBBBCC\".split (\"\");\n    wordsMultiset.addAll (Arrays.asList (words));\n    for (Entry < String > string : wordsMultiset.entrySet ()) {\n        if (! string.getElement ().isEmpty ()) output += string.getCount () + \"\" + string.getElement ();\n    }\n    System.out.println (output);\n}","lang":"java"}
{"idx":1741,"func":"output = \"\"\nwords_multiset = collections.Counter() \nwords = list(\"AAABBBBCC\")\nwords_multiset.update(words)\nfor element in words_multiset.most_common():\n    if element[0] != \"\":\n        output += str(element[1]) + element[0]\nprint(output)\n","lang":"py"}
{"idx":1742,"func":" \npublic boolean add (P producer, E item) {\n    lock.lock ();\n    try {\n        if (! queues.containsKey (producer)) {\n            queues.put (producer, new PriorityBlockingQueue < > ());\n        }\n        added.signalAll ();\n        return queues.get (producer).add (item);\n    } finally {\n        lock.unlock ();\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1743,"func":"def add(producer, item):\n    with lock:\n        if producer not in queues:\n            queues[producer] = PriorityBlockingQueue() \n        added.notify_all() \n        return queues[producer].add(item)","lang":"py"}
{"idx":1744,"func":" \n        public int read () throws IOException {\n            return newInput.read ();\n        }}\n    ;\n\n#====================\n\n\n","lang":"java"}
{"idx":1745,"func":"def read():\n    try:\n        return newInput.read()\n    except IOError:\n        raise","lang":"py"}
{"idx":1746,"func":" \npublic static int singleNumber (int [] nums) {\n    int answer = 0;\n    ArrayList al = new ArrayList ();\n    for (int i = 0;\n    i < nums.length; i ++) {\n        al.add (nums [i]);\n    }\n    for (int i = 0;\n    i < nums.length; i ++) {\n        int test = nums [i];\n        if (al.indexOf (test) == al.lastIndexOf (test)) {\n            answer = nums [i];\n        }\n    }\n    return answer;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1747,"func":"def singleNumber (nums):\n    answer = 0\n    seen_nums = []\n    for n in nums:\n        if n in seen_nums:\n            seen_nums.remove(n)\n        else:\n            seen_nums.append(n)\n    for n in seen_nums:\n        answer = n\n    return answer","lang":"py"}
{"idx":1748,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    int number;\n    if (\"\".equals (value)) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number \/ 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! \"\".equals (tensName) && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1749,"func":"def getName(value): \n    buffer = \"\" \n    number = 0 \n  \n    if (value == \"\"): \n        number = 0 \n    elif (len(value) > 4): \n        number = int(value[len(value) - 4:], 10) \n    else: \n        number = int(value, 10) \n  \n    number %= 1000 \n  \n    if (number >= 100): \n        buffer += unitProcessor.getName(int(number \/ 100)) \n        buffer += SEPARATOR \n        buffer += SCALE.getName(EXPONENT) \n  \n    tensName = tensProcessor.getName(number % 100) \n    if (tensName != \"\" and number >= 100): \n        buffer += SEPARATOR \n  \n    buffer += tensName\n  \n    return buffer","lang":"py"}
{"idx":1750,"func":" \npublic static void main (String [] args) {\n    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;\n    for (int i = 0;\n    i < 30; i ++) {\n        throwCatchTime += throwCatchLoop ();\n        newExceptionTime += newExceptionLoop ();\n        newObjectTime += newObjectLoop ();\n        noStackExceptionTime += newNoStackExceptionLoop ();\n    }\n    System.out.println (\"throwCatchTime = \" + throwCatchTime \/ 30);\n    System.out.println (\"newExceptionTime = \" + newExceptionTime \/ 30);\n    System.out.println (\"newStringTime = \" + newObjectTime \/ 30);\n    System.out.println (\"noStackExceptionTime = \" + noStackExceptionTime \/ 30);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1751,"func":"def main(args): \n    throwCatchTime, newExceptionTime, newObjectTime, noStackExceptionTime = 0, 0, 0, 0\n    for i in range(30): \n        throwCatchTime += throwCatchLoop()\n        newExceptionTime += newExceptionLoop()\n        newObjectTime += newObjectLoop()\n        noStackExceptionTime += newNoStackExceptionLoop()\n\n    print(\"throwCatchTime = \" + str(throwCatchTime \/ 30))\n    print(\"newExceptionTime = \" + str(newExceptionTime \/ 30))\n    print(\"newStringTime = \" + str(newObjectTime \/ 30))\n    print(\"noStackExceptionTime = \" + str(noStackExceptionTime \/ 30))","lang":"py"}
{"idx":1752,"func":" \npublic String getName (String value) {\n    StringBuilder buffer = new StringBuilder ();\n    String high, low;\n    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1753,"func":"def getName(value):\n    buffer = []\n    high, low = ''\n    if len(value) < getPartDivider():\n        high = ''\n        low = value\n    else:\n        index = len(value) - getPartDivider()\n        high = value[0:index]\n        low = value[index:]\n        \n    highName = getHighProcessor().getName(high)\n    lowName = getLowProcessor().getName(low)\n    if highName != '':\n        buffer.append(highName)\n        buffer.append(SEPARATOR)\n        buffer.append(getToken())\n        if not lowName == '':\n            buffer.append(SEPARATOR)\n    \n    if not lowName == '':\n        buffer.append(lowName)\n        \n    return ''.join(buffer)","lang":"py"}
{"idx":1754,"func":" \npublic int loneSum (int a, int b, int c) {\n    int sum = 0;\n    boolean ab = a != b;\n    boolean ac = a != c;\n    boolean bc = b != c;\n    if (ab && ac) sum += a;\n    if (ab && bc) sum += b;\n    if (bc && ac) sum += c;\n    return sum;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1755,"func":"def loneSum(a, b, c): \n    sum = 0\n    if (a != b and a != c): \n        sum += a\n    if (b != a and b != c): \n        sum += b\n    if (c != a and c != b): \n        sum += c\n    return sum","lang":"py"}
{"idx":1756,"func":" \npublic static void main (String...args) {\n    processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0\", \"1.30\", \"0001.00\", \"3.141592\"};\n    for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1757,"func":"def main (*args):\n    processor = DefaultProcessor ()\n    values = [0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE]\n    str_values = [\"0\", \"1.30\", \"0001.00\", \"3.141592\"]\n    for val in values:\n        print (str (val) + \" = \" + processor.getName (val))\n    for str_val in str_values:\n        print (str_val + \" = \" + processor.getName (str_val))\n    big_number = \"\"\n    for d in range (0, 66):\n        big_number += str (int (random.uniform (0, 10)))\n    big_number += \".\"\n    for d in range (0, 26):","lang":"py"}
{"idx":1758,"func":" \n                public void run () {\n                    game.repaint ();\n                }}\n            );\n\n\n\n\n","lang":"java"}
{"idx":1759,"func":"def run():\n    game.repaint()","lang":"py"}
{"idx":1760,"func":" \npublic CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {\n    CharSequence out = super.filter (source, start, end, dest, dstart, dend);\n    if (out != null) {\n        source = out;\n        start = 0;\n        end = out.length ();\n    }\n    int len = end - start;\n    if (len == 0) {\n        return source;\n    }\n    int dlen = dest.length ();\n    for (int i = 0;\n    i < dstart; i ++) {\n        if (dest.charAt (i) == '.') {\n            return (dlen - (i + 1) + len > digits) ? \"\" : new SpannableStringBuilder (source, start, end);\n        }\n    }\n    for (int i = start;\n    i < end; ++ i) {\n        if (source.charAt (i) == '.') {\n            if ((dlen - dend) + (end - (i + 1)) > digits) return \"\";\n            else break;\n        }\n    }\n    return new SpannableStringBuilder (source, start, end);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1761,"func":"def filter(self, source, start, end, dest, dstart, dend):\n    out = super().filter(source, start, end, dest, dstart, dend)\n\n    if out is not None:\n        source = out\n        start = 0\n        end = len(out)\n\n    length = end - start\n\n    if length == 0:\n        return source\n\n    dest_len = len(dest)\n    for index in range(dstart):\n        if dest[index] == '.':\n            if dest_len - (index + 1) + length > digits:\n                return ''\n            else:\n                break\n\n    for index in range(start, end):\n        if source[index] == '.':\n            if (dest_len - dend) + (end - (index + 1)) > digits:\n                return ''\n            else:\n                break\n\n    return source[start:end]","lang":"py"}
{"idx":1762,"func":" \npublic static void main (String args []) {\n    int ci, i, j, k, l = 0;\n    String str, str1, result, subString;\n    char c1, c2, ch;\n    Scanner scan = new Scanner (System.in);\n    System.out.print (\"Enter a String : \");\n    str = scan.nextLine ();\n    i = str.length ();\n    for (c1 = 'A'; c1 <= 'z'; c1 ++) {\n        for (c2 = 'A'; c2 <= 'z'; c2 ++) {\n            result = new String (new char [] {c1, c2});\n            k = 0;\n            for (j = 0; j < i - 1; j ++) {\n                subString = str.substring (j, j + 2);\n                if (result.equals (subString)) {\n                    k ++;\n                }\n            }\n            if (k > 0) {\n                System.out.println (\"\" + result + \": \" + k);\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1763,"func":"def main():\n    ci = 0\n    i = 0\n    j = 0\n    k = 0\n    l = 0\n    str = ''\n    str1 = ''\n    result = ''\n    subString = ''\n    c1 = ''\n    c2 = ''\n    ch = ''\n    \n    str = input('Enter a string: ')\n    i = len(str)\n    for c1 in range(ord('A'),ord('z')+1):\n        for c2 in range(ord('A'),ord('z')+1):\n            result = chr(c1) + chr(c2)\n            k = 0\n            for j in range(i-1):\n                subString = str[j:j+2]\n                if result == subString:\n                    k+=1\n            if (k>0):\n                print(result + \": \" + str(k))","lang":"py"}
{"idx":1764,"func":" \n        public void run () {\n            System.out.println (Constants.name);\n        }}\n    );\n\n\n\n\n","lang":"java"}
{"idx":1765,"func":"def run():\n    print(Constants.name)","lang":"py"}
{"idx":1766,"func":" \npublic static void main (String [] args) {\n    String output = \"\";\n    Multiset < String > wordsMultiset = HashMultiset.create ();\n    String [] words = \"AAABBBBCC\".split (\"\");\n    wordsMultiset.addAll (Arrays.asList (words));\n    for (Entry < String > string : wordsMultiset.entrySet ()) {\n        if (! string.getElement ().isEmpty ()) output += string.getCount () + \"\" + string.getElement ();\n    }\n    System.out.println (output);\n}","lang":"java"}
{"idx":1767,"func":"output = \"\" \nwordsMultiset = set() \nwords = \"AAABBBBCC\".split(\"\") \nwordsMultiset.update(words) \nfor element, count in wordsMultiset.items (): \n    if element != '': \n        output += str(count) + element  \nprint(output) \n","lang":"py"}
{"idx":1768,"func":" \npublic static void main (String args []) throws Exception {\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.println (\"enter size of the array\");\n    int l = Integer.parseInt (br.readLine ());\n    int [] a = new int [l];\n    for (int i = 0;\n    i < l; i ++) {\n        System.out.println (\"enter a element\");\n        int el = Integer.parseInt (br.readLine ());\n        a [i] = el;\n    }\n    for (int i = 0;\n    i < l; i ++) {\n        for (int j = 0;\n        j < l - 1; j ++) {\n            if (a [j] > a [j + 1]) {\n                int temp = a [j];\n                a [j] = a [j + 1];\n                a [j + 1] = temp;\n            }\n        }\n    }\n    int b = 0;\n    a [b] = a [0];\n    for (int i = 1;\n    i < l; i ++) {\n        if (a [b] != a [i]) {\n            b ++;\n            a [b] = a [i];\n        }\n    }\n    for (int i = 0;\n    i <= b; i ++) {\n        System.out.println (a [i]);\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1769,"func":"def main():\n    array_size = int(input('Enter Size of the array: '))\n    container = []\n    for _ in range(array_size):\n        container.append(int(input('enter a element:')))\n    container.sort()\n    res = []\n    res.append(container[0])\n    for i in range(1, array_size):\n        if container[i] != container[i - 1]:\n            res.append(container[i])\n    print(res)\n\nif __name__ == '__main__':\n    main()","lang":"py"}
{"idx":1770,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int N = S.length ();\n    int M = P.length;\n    int [] result = new int [M];\n    lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;\n    for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1771,"func":"def solution(S, P, Q):\n    N = len(S)\n    M = len(P)\n    result = [0] * M\n    lastoccurrencesmap = [[0 for i in range(N)] for i in range(3)]\n    lastA = -1\n    lastC = -1\n    lastG = -1\n    for i in range(N):\n        c = S[i]\n        if c == 'A':\n            lastA = i\n        elif c == 'C':\n            lastC = i\n        elif c == 'G':\n            lastG = i\n        lastoccurrencesmap[0][i] = lastA\n        lastoccurrencesmap[1][i] = lastC\n        lastoccurrencesmap[2][i] = lastG\n    \n    for i in range(M):\n        startIndex = P[i]\n        endIndex = Q[i]\n        minimum = 4\n        for n in range(3):\n            lastoccurence = getLastNucleotideOccurrence(startIndex, endIndex, n)\n            if lastoccurence != 0:\n                minimum = n + 1\n                break\n        result[i] = minimum\n    \n    return result","lang":"py"}
{"idx":1772,"func":" \npublic static void listFilesForFolder (final File folder) {\n    for (final File fileEntry : folder.listFiles ()) {\n        if (fileEntry.isDirectory ()) {\n            listFilesForFolder (fileEntry);\n        } else {\n            System.out.println (fileEntry.getName ());\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1773,"func":"def list_files_for_folder(folder): \n     for file_entry in os.listdir(folder): \n         if os.path.isdir(file_entry): \n             list_files_for_folder(file_entry) \n         else: \n             print(file_entry)","lang":"py"}
{"idx":1774,"func":" \nprotected void cleanup (JComponent c, boolean remove) {\n    JTable source = (JTable) c;\n    if (remove && rows != null) {\n        DefaultTableModel model = (DefaultTableModel) source.getModel ();\n        for (int i = rows.length - 1;\n        i >= 0; i --) {\n            model.removeRow (rows [i]);\n        }\n    }\n    rows = null;\n    addCount = 0;\n    addIndex = - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1775,"func":"def cleanup(c, remove):\n    source = c \n    if remove and rows is not None:\n        model = source.get_model()\n        for i in range(len(rows)-1, -1, -1):\n            model.remove_row(rows[i])\n    rows = None\n    addCount = 0\n    addIndex = -1","lang":"py"}
{"idx":1776,"func":" \npublic void actionPerformed (ActionEvent e) {\n    switch (direction) {\n        case UP :\n            draw.incrementY (false);\n            break;\n        case DOWN :\n            draw.incrementY (true);\n            break;\n        case LEFT :\n            draw.incrementX (false);\n            break;\n        case RIGHT :\n            draw.incrementX (true);\n            break;\n        default :\n            break;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1777,"func":"def actionPerformed(e):\n    if direction == 'UP':\n        draw.incrementY(False)\n    elif direction == 'DOWN':\n        draw.incrementY(True)\n    elif direction == 'LEFT':\n        draw.incrementX(False)\n    elif direction == 'RIGHT':\n        draw.incrementX(True)\n    else:\n        pass","lang":"py"}
{"idx":1778,"func":" \npublic static void countString (String str, char searchKey) {\n    String count = \"\";\n    for (int i = 0;\n    i < str.length (); i ++) {\n        if (str.charAt (i) == searchKey) count += str.charAt (i) + \"\\n\";\n    }\n    System.out.println (count + \"\\nNumber of Occurrence of \" + searchKey + \" is \" + count.length () + \" in string \" + str);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1779,"func":"def countString(str, searchKey):\n  count = \"\"\n  for i in range(0, len(str)):\n    if str[i] == searchKey:\n      count += str[i] + \"\\n\"\n  print(count + \"\\nNumber of Occurrence of \" + searchKey + \" is \" + str(len(count)) + \" in string \" + str)","lang":"py"}
{"idx":1780,"func":" \npublic Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {\n    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);\n    c.setBackground (Color.WHITE);\n    c.setForeground (Color.BLACK);\n    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);\n    if (separatedVariable.equals (\"YOUR VALUE TO GREEN\")) {\n        l.setBackground (Color.GREEN);\n        return l;\n    } else {\n        if (separatedValue.equals (\"YOUR VALUE TO YELLOW\")) {\n            l.setBackground (Color.YELLOW);\n            return l;\n        } else if (separatedValue.equals (\"YOUR VALUE TO RED\")) {\n            l.setBaground (Color.RED);\n            return l;\n        }\n    }\n    return c;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1781,"func":"def getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col):\n    c = super().getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col)\n    c.setBackground (Color.WHITE)\n    c.setForeground (Color.BLACK)\n    l = super().getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col)\n    if separatedVariable == \"YOUR VALUE TO GREEN\":\n        l.setBackground (Color.GREEN)\n        return l\n    else:\n        if separatedValue == \"YOUR VALUE TO YELLOW\":\n            l.setBackground (Color.YELLOW)\n            return l\n        elif separatedValue == \"YOUR VALUE TO RED\":\n            l.setBaground (Color.RED)\n            return l\n    \n    return c","lang":"py"}
{"idx":1782,"func":" \npublic int solution (int X, int [] A) {\n    HashSet < Integer > hset = new HashSet < Integer > ();\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1783,"func":"def solution(X, A):\n    hset = set()\n    for i in range(len(A)):\n        if A[i] <= X:\n            hset.add(A[i])\n        if len(hset) == X:\n            return i\n    return -1","lang":"py"}
{"idx":1784,"func":" \npublic static String getDurationBreakdown (long millis) {\n    if (millis < 0) {\n        throw new IllegalArgumentException (\"Duration must be greater than zero!\");\n    }\n    long days = TimeUnit.MILLISECONDS.toDays (millis);\n    millis -= TimeUnit.DAYS.toMillis (days);\n    long hours = TimeUnit.MILLISECONDS.toHours (millis);\n    millis -= TimeUnit.HOURS.toMillis (hours);\n    long minutes = TimeUnit.MILLISECONDS.toMinutes (millis);\n    millis -= TimeUnit.MINUTES.toMillis (minutes);\n    long seconds = TimeUnit.MILLISECONDS.toSeconds (millis);\n    StringBuilder sb = new StringBuilder (64);\n    sb.append (days);\n    sb.append (\" Days \");\n    sb.append (hours);\n    sb.append (\" Hours \");\n    sb.append (minutes);\n    sb.append (\" Minutes \");\n    sb.append (seconds);\n    sb.append (\" Seconds\");\n    return (sb.toString ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1785,"func":"def get_duration_breakdown(millis) -> str:\n    if millis < 0:\n        raise ValueError('Duration must be greater than zero!')\n    days = millis \/\/ (24 * 3600)\n    millis %= 24 * 3600\n    hours = millis \/\/ 3600\n    millis %= 3600\n    minutes = millis \/\/ 60\n    millis %= 60\n    seconds = millis\n    output = f'{days} Days {hours} Hours {minutes} Minutes {seconds} Seconds'\n    return output","lang":"py"}
{"idx":1786,"func":" \nprotected void layoutPlotChildren () {\n    super.layoutPlotChildren ();\n    for (Series < String, Number > series : getData ()) {\n        for (Data < String, Number > data : series.getData ()) {\n            StackPane bar = (StackPane) data.getNode ();\n            Label label = null;\n            for (Node node : bar.getChildrenUnmodifiable ()) {\n                LOGGER.debug (\"Bar has child {}, {}.\", node, node.getClass ());\n                if (node instanceof Label) {\n                    label = (Label) node;\n                    break;\n                }\n            }\n            if (label == null) {\n                label = new Label (series.getName ());\n                label.setRotate (90.0);\n                bar.getChildren ().add (label);\n            } else {\n                label.setText (series.getName ());\n            }\n        }\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1787,"func":"def layout_plot_children(self): \n    super().layout_plot_children() \n    for series in self.get_data(): \n        for data in series.get_data(): \n            bar = data.get_node() \n            label = None\n            for node in bar.get_children_unmodifiable(): \n                print(\"Bar has child {}, {}.\".format(node, node.class_name())) \n                if isinstance(node, Label): \n                    label = node \n                    break \n            \n            if label is None: \n                label = Label(series.get_name())\n                label.set_rotate(90.0) \n                bar.get_children().add(label) \n            else:\n                label.set_text(series.get_name())","lang":"py"}
{"idx":1788,"func":" \npublic byte [] hash (String password, byte [] salt) {\n    Validate.notNull (password, \"Password must not be null\");\n    Validate.notNull (salt, \"Salt must not be null\");\n    try {\n        final byte [] passwordBytes = password.getBytes (\"UTF-8\");\n        final byte [] all = ArrayUtils.addAll (passwordBytes, salt);\n        SHA3.DigestSHA3 md = new SHA3.Digest512 ();\n        md.update (all);\n        return md.digest ();\n    } catch (UnsupportedEncodingException e) {\n        final String message = String.format (\"Caught UnsupportedEncodingException e: <%s>\", e.getMessage ());\n        LOGGER.error (message);\n    }\n    return new byte [0];\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1789,"func":"def hash(password, salt): \n  Validate.notNull(password, \"Password must not be null\")\n  Validate.notNull(salt, \"Salt must not be null\")\n  try: \n    passwordBytes = bytes(password, 'utf-8')\n    all = passwordBytes + salt\n    digestSHA3 = SHA3.Digest512()\n    digestSHA3.update(all)\n    return digestSHA3.digest()\n  except UnsupportedEncodingException as e: \n    message = 'Caught UnsupportedEncodingException e: <{0}>'.format(e.message)\n    LOGGER.error(message)\n  return bytes()","lang":"py"}
{"idx":1790,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1791,"func":"def solution(X, A):\n    seen = set() \n    sum1 = 0\n    sum2 = 0\n    for i in range(X + 1):\n        sum1 += i\n    for i in range(len(A)):\n        if A[i] in seen:\n            continue \n        seen.add(A[i])\n        sum2 += A[i] \n        if sum1 == sum2: \n            return i \n    return -1","lang":"py"}
{"idx":1792,"func":" \nstatic void permute (int level, String prefix) {\n    if (level == 0) {\n        System.out.println (prefix);\n        return;\n    }\n    for (int i = 0;\n    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1793,"func":"def permute(level, prefix): \n  if level == 0: \n    print(prefix) \n    return\n  for i in range(len(s)): \n     permute(level - 1, prefix + s[i])","lang":"py"}
{"idx":1794,"func":" \nstatic boolean isAnagram (String s1, String s2) {\n    if (s1.length () != s2.length ()) return false;\n    int n = s1.length ();\n    int [] charMap = new int [256];\n    for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1795,"func":"def isAnagram(s1,s2):\n    if len(s1)!=len(s2):\n        return False\n    s1 = s1.lower()\n    s2 = s2.lower()\n    chars = dict()\n    for i in range(len(s1)):\n        if s1[i] in chars.keys():\n            chars[s1[i]] += 1\n        else:\n            chars[s1[i]] = 1\n        if s2[i] in chars.keys():\n            chars[s2[i]] -= 1\n        else:\n            chars[s2[i]] = -1\n    for key in chars:\n        if chars[key] != 0:\n            return False\n        return True","lang":"py"}
{"idx":1796,"func":" \npublic int read (char [] cbuf, int off, int len) throws IOException {\n    int read = super.read (cbuf, off, len);\n    if (read == - 1) {\n        return - 1;\n    }\n    int pos = off - 1;\n    for (int readPos = off;\n    readPos < off + read; readPos ++) {\n        if (read == '@') {\n            continue;\n        } else {\n            pos ++;\n        }\n        if (pos < readPos) {\n            cbuf [pos] = cbuf [readPos];\n        }\n    }\n    return pos - off + 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1797,"func":"def read(self, cbuf, off, len):\n    read = super().read(cbuf, off, len)\n    if read == -1:\n        return -1\n    pos = off - 1\n    for readPos in range(off, off + read):\n        if cbuf[readPos] == '@':\n            continue\n        else:\n            pos += 1\n        if pos < readPos:\n            cbuf[pos] = cbuf[readPos]\n    return pos - off + 1","lang":"py"}
{"idx":1798,"func":" \npublic String getName (String value) {\n    boolean negative = false;\n    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (name.isEmpty ()) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || decimalValue.isEmpty ())) {\n        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n    }\n    return name;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1799,"func":"def getName(value):\n    negative = False\n\n    if value.startswith('-'):\n        negative = True\n        value = value[1:]\n\n    decimals = value.find('.')\n    decimalValue = None\n\n    if decimals>-1:\n        decimalValue = value[decimals+1:]\n        value = value[0:decimals]\n\n    name = processor.getName(value)\n    if name== '':\n        name = ZERO_TOKEN\n    elif negative:\n        name = MINUS + SEPARATOR + name\n\n    if decimalValue != None and decimalValue != '':\n        name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.GetName(-len(decimalValue))\n\n    return name","lang":"py"}
{"idx":1800,"func":" \npublic static int binarySearch (int anArray [], int first, int last, int value) {\n    do {\n        if (first > last) {\n            return - 1;\n        } else {\n            int mid = (first + last) \/ 2;\n            if (value == anArray [mid]) {\n                return mid;\n            } else if (value < anArray [mid]) {\n                last = mid - 1;\n            } else {\n                first = mid + 1;\n            }\n        }\n    } while (true);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1801,"func":"def binarySearch(anArray, first,last, value):\n    while first<=last:\n        mid = (first+last)\/\/2\n        if value == anArray[mid]:\n            return mid\n        elif value < anArray[mid]:\n            last = mid - 1\n        else:\n            first = mid + 1\n    return -1","lang":"py"}
{"idx":1802,"func":" \npublic int solution (int X, int [] A) {\n    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;\n    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1803,"func":"def solution(X, A):\n    check_list = set()\n    sum1 = 0\n    sum2 = 0\n  \n    for i in range (X+1):\n        sum1 += i\n  \n    for i in range(len(A)):\n        if A[i] not in check_list:\n            check_list.add(A[i])\n            sum2 += A[i]\n            if sum1 == sum2:\n                return i\n    return -1","lang":"py"}
{"idx":1804,"func":" \npublic synchronized void run () {\n    int i = 3;\n    while (i < 50) {\n        while (s.getState () != 2) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 2) System.out.println (\"t3 \" + i);\n            i = i + 3;\n            s.setState (3);\n            s.notifyAll ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1805,"func":"def run(self):\n    i = 3\n    while i < 50:\n        while s.getState() != 2:\n            with s.lock:\n                s.wait()\n        with s.lock:\n            if s.getState() == 2:\n                print(\"t3 \",i)\n            i = i + 3\n            s.setState(3)\n            s.notifyAll()","lang":"py"}
{"idx":1806,"func":" \nprivate void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {\n    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1807,"func":"def transform(workbookOld, workbookNew, hash, styleOld, styleNew):\n    styleNew.alignment = styleOld.alignment\n    styleNew.border_bottom = styleOld.border_bottom\n    styleNew.border_left = styleOld.border_left\n    styleNew.border_right = styleOld.border_right\n    styleNew.border_top = styleOld.border_top\n    styleNew.data_format = transform(workbookOld, workbookNew, styleOld.data_format)\n    styleNew.fill_background_color = styleOld.fill_background_color\n    styleNew.fill_foreground_color = styleOld.fill_foreground_color\n    styleNew.fill_pattern = styleOld.fill_pattern\n    styleNew.font = transform(workbookNew, styleOld.font(workbookOld))\n    styleNew.hidden = styleOld.hidden\n    styleNew.indention = styleOld.indention\n    styleNew.locked = styleOld.locked\n    styleNew.vertical_alignment = styleOld.vertical_alignment\n    styleNew.wrap_text = styleOld.wrap_text\n    styleMap[hash] = styleNew","lang":"py"}
{"idx":1808,"func":" \npublic static String join (String separator, String...values) {\n    if (values.length == 0) return \"\";\n    char [] sep = separator.toCharArray ();\n    int totalSize = (values.length - 1) * sep.length;\n    for (int i = 0;\n    i < values.length; i ++) {\n        if (values [i] == null) values [i] = \"\";\n        else totalSize += values [i].length ();\n    }\n    char [] joined = new char [totalSize];\n    int pos = 0;\n    for (int i = 0, end = values.length - 1;\n    i < end; i ++) {\n        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());\n        pos += values [i].length ();\n        System.arraycopy (sep, 0, joined, pos, sep.length);\n        pos += sep.length;\n    }\n    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());\n    return new String (joined);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1809,"func":"def join(separator, *values):\n    if not values:\n        return \"\"\n\n    sep = list(separator)\n    total_size = (len(values) - 1) * len(sep)\n    for i in range(len(values)):\n        if values[i] is None:\n            values[i] = \"\"\n        else:\n            total_size += len(values[i])\n\n    joined = [None] * total_size\n    pos = 0\n\n    for i in range(len(values) - 1):\n        joined[pos : pos + len(values[i])] = list(values[i])\n        pos += len(values[i])\n        joined[pos : pos + len(sep)] = sep\n        pos += len(sep)\n    \n    joined[pos : pos + len(values[len(values) - 1])] = list(values[len(values) - 1])\n    return ''.join(joined)","lang":"py"}
{"idx":1810,"func":" \npublic int [] zeroFront (int [] nums) {\n    if (nums == null) {\n        return null;\n    }\n    int [] result = new int [nums.length];\n    int zeroesPos = 0;\n    int othersPos = result.length - 1;\n    for (int i = 0;\n    i < nums.length; ++ i) {\n        if (nums [i] == 0) {\n            result [zeroesPos] = 0;\n            ++ zeroesPos;\n        } else {\n            result [othersPos] = nums [i];\n            -- othersPos;\n        }\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1811,"func":"def zeroFront(nums): \n  if nums is None: \n    return None\n  \n  result = [0] * len(nums) \n  zeroPos, otherPos = 0, len(nums)-1\n  \n  for i in range(len(nums)): \n    if nums[i] == 0: \n      result[zeroPos] = 0\n      zeroPos += 1\n    else: \n      result[otherPos] = nums[i] \n      otherPos -= 1\n  \n  return result","lang":"py"}
{"idx":1812,"func":" \npublic static void main (String [] argv) {\n    final int x = 123456789;\n    int newX = x;\n    final double originalLog = Math.floor (Math.log10 (x));\n    final int getRidOf = (int) Math.pow (10, originalLog);\n    while (originalLog == Math.floor (Math.log10 (newX))) {\n        newX -= getRidOf;\n    }\n    System.out.println (newX);\n}","lang":"java"}
{"idx":1813,"func":"x = 123456789\noriginalLog = math.floor(math.log10(x))\ngetRidOf = int(math.pow(10,originalLog))\nwhile originalLog == math.floor(math.log10(x)):\n    x -= getRidOf\nprint(x)\n","lang":"py"}
{"idx":1814,"func":" \npublic String [] [] allUniqueCombinations () {\n    int n = dataStructure.keySet ().size ();\n    int solutions = 1;\n    for (Vector < String > vector : dataStructure.values ()) {\n        solutions *= vector.size ();\n    }\n    String [] [] allCombinations = new String [solutions + 1] [];\n    allCombinations [0] = dataStructure.keySet ().toArray (new String [n]);\n    for (int i = 0;\n    i < solutions; i ++) {\n        Vector < String > combination = new Vector < String > (n);\n        int j = 1;\n        for (Vector < String > vec : dataStructure.values ()) {\n            combination.add (vec.get ((i \/ j) % vec.size ()));\n            j *= vec.size ();\n        }\n        allCombinations [i + 1] = combination.toArray (new String [n]);\n    }\n    return allCombinations;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1815,"func":"def all_unique_combinations():\n    n = len(dataStructure.keys())\n    solutions = 1\n    for vector in dataStructure.values():\n        solutions *= len(vector)\n    all_combinations = [[None] * (solutions + 1)]\n    all_combinations[0] = list(dataStructure.keys())\n    for i in range(solutions):\n        combination = [None] * n\n        j = 1\n        for vec in dataStructure.values():\n            combination[i] = vec[(i \/ j) % len(vec)]\n            j *= len(vec)\n        all_combinations[i+1] = combination\n    return all_combinations","lang":"py"}
{"idx":1816,"func":" \nstatic boolean isImmutable (Object obj) {\n    Class < ? > objClass = obj.getClass ();\n    Class < ? > superClass = objClass.getSuperclass ();\n    if (! Immutable.class.equals (superClass)) {\n        return false;\n    }\n    if (! Modifier.isFinal (objClass.getModifiers ())) {\n        return false;\n    }\n    Field [] objFields = objClass.getDeclaredFields ();\n    for (int i = 0;\n    i < objFields.length; i ++) {\n        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1817,"func":"def isImmutable(obj):\n    objClass = obj.__class__\n    superClass = objClass.__bases__[0]\n    if superClass != Immutable:\n        return False\n    if not objClass.__dict__['__is_final__']:\n        return False\n    objFields = objClass.__dict__['__fields__']\n    for field in objFields:\n        if not field['__is_final__'] or not isValidFieldType(field['__type__']):\n            return False\n    return True","lang":"py"}
{"idx":1818,"func":" \npublic int solution (int [] A) {\n    if (A.length == 2) return Math.abs (A [0] - A [1]);\n    int [] s1 = new int [A.length - 1];\n    s1 [0] = A [0];\n    for (int i = 1;\n    i < A.length - 1; i ++) {\n        s1 [i] = s1 [i - 1] + A [i];\n    }\n    int [] s2 = new int [A.length - 1];\n    s2 [A.length - 2] = A [A.length - 1];\n    for (int i = A.length - 3;\n    i >= 0; i --) {\n        s2 [i] = s2 [i + 1] + A [i + 1];\n    }\n    int finalSum = Integer.MAX_VALUE;\n    for (int j = 0;\n    j < s1.length; j ++) {\n        int sum = Math.abs (s1 [j] - s2 [j]);\n        if (sum < finalSum) finalSum = sum;\n    }\n    return finalSum;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1819,"func":"def solution(A):\n  if len(A) == 2:\n    return abs(A[0] - A[1])\n  s1 = [A[0]] * (len(A) - 1)\n  for i in range(1, len(A) - 1):\n    s1[i] = s1[i - 1] + A[i]\n  s2 = [A[len(A) - 1]] * (len(A) - 1)\n  for i in range(len(A) - 3, -1, -1):\n    s2[i] = s2[i + 1] + A[i + 1]\n  final_sum = float('inf')\n  for i in range(len(s1)):\n    sum = abs(s1[i] - s2[i])\n    if sum < final_sum:\n      final_sum = sum\n  return final_sum","lang":"py"}
{"idx":1820,"func":" \nprivate static int solution (int N) {\n    int gap = 0;\n    String binaryStr = Integer.toBinaryString (N);\n    String [] zeroArrays = binaryStr.split (\"1\");\n    System.out.println (Arrays.toString (zeroArrays));\n    for (String zeroArray : zeroArrays) {\n        gap = zeroArray.length () > gap ? zeroArray.length () : gap;\n    }\n    return gap;\n}\n\n\n#====================\n\n\n","lang":"java"}
{"idx":1821,"func":"def solution(N):  \n  binaryStr = bin(N)[2:] \n  zeroArrays = binaryStr.split('1')\n  gap = 0\n  for zeroArray in zeroArrays: \n    gap = len(zeroArray) if len(zeroArray) > gap else gap\n  return gap","lang":"py"}
{"idx":1822,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1823,"func":"def solution(X, A): \n  n = len(A) \n\t\n\t# if x greater than the length of array A \n\tif X > n:\t \n\t\treturn -1\n\t\t\n\t# bool array to mark the element of A \n\t# one by one \n\tm = [False]*X \n\tjumped = 0\n\t\n\t# check each elements of A and mark them \n\t# respective in bool array as true \n\tfor i in range(n): \n\t\t# element should be between 1 and X \n\t\t# (1 and X are included) \n\t\tif A[i] <= X:\t\t\t \n\t\t\t# If the element is not marked \n\t\t\t# earlier, then mark it and \n\t\t\t# increment jumped \n\t\t\tif m[A[i] - 1] == False:\t \n\t\t\t\tm[A[i] - 1] = True\n\t\t\t\tjumped += 1\n\t\t\t\t\n\t\t\t\t# if all the elements are jumped \n\t\t\t\tif jumped == X:\t\t\t \n\t\t\t\t\treturn i \n\treturn -1","lang":"py"}
{"idx":1824,"func":" \npublic static void main (String [] args) {\n    int large [] = new int [10];\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};\n    int k = 0;\n    for (int i = 0;\n    i < array.length; i ++) {\n        large [k ++] = getMax (0, array);\n    }\n    System.out.println (\"Largest 5 is: \" + Arrays.toString (Arrays.copyOf (large, 5)));\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1825,"func":"def main(): \n    large = [None] * 10 \n    array = [33, 55, 13, 46, 87, 42, 10, 34, 43, 56]\n    k = 0\n\n    for i in range(len(array)):\n        large[k] = max(array)\n        k += 1\n    \n    print(\"Largest 5 is: \" + str(large[:5])) # slicing large to get the first 5 elements\n    \nmain()","lang":"py"}
{"idx":1826,"func":" \npublic static void main (String [] args) throws InterruptedException {\n    AtomicInteger counter = new AtomicInteger ();\n    ExecutorService pool = Executors.newFixedThreadPool (4);\n    for (int i = 0;\n    i < 4; ++ i) {\n        pool.execute (new MyTask (counter));\n    }\n    pool.shutdown ();\n    pool.awaitTermination (1, TimeUnit.HOURS);\n}","lang":"java"}
{"idx":1827,"func":"import threading\nimport time\n","lang":"py"}
{"idx":1828,"func":" \npublic static void close (Statement...statements) {\n    for (Statement stmt : statements) {\n        try {\n            if (stmt != null) stmt.close ();\n        } catch (SQLException se) {\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1829,"func":"def close(*statements):\n    for stmt in statements:\n        try:\n            if stmt is not None:\n                stmt.close()\n        except SQLException:\n            pass","lang":"py"}
{"idx":1830,"func":" \npublic static void main (String [] args) {\n    Runnable r = () -> {\n        MediaTypes mediaTypes = new MediaTypes ();\n        JPanel p = new JPanel ();\n        mediaTypes.createGui (p);\n        JOptionPane.showMessageDialog (null, p);\n    };\n    SwingUtilities.invokeLater (r);\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1831,"func":"def main(args): \n    r = lambda: (\n        media_types = MediaTypes()\n        p = JPanel()\n        media_types.create_gui(p)\n        show_message_dialog(None, p)\n    )\n    invoke_later(r)","lang":"py"}
{"idx":1832,"func":" \npublic static boolean isPalindrome (String str) {\n    str = str.toUpperCase ();\n    char [] strChars = str.toCharArray ();\n    List < Character > word = new ArrayList < > ();\n    for (char c : strChars) {\n        word.add (c);\n    }\n    while (true) {\n        if ((word.size () == 1) || (word.size () == 0)) {\n            return true;\n        }\n        if (word.get (0) == word.get (word.size () - 1)) {\n            word.remove (0);\n            word.remove (word.size () - 1);\n        } else {\n            return false;\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1833,"func":"def isPalindrome(str):\n  str = str.upper()\n  word = list(str)\n  while True:\n    if len(word) == 1 or len(word) == 0:\n      return True\n    if word[0] == word[len(word)-1]:\n      del word[0]\n      del word[len(word)-1]\n    else:\n      return False","lang":"py"}
{"idx":1834,"func":" \npublic void run () {\n    for (int i = 0;\n    i <= 10; i += 2) {\n        synchronized (o) {\n            try {\n                while (turn) {\n                    o.wait ();\n                }\n            } catch (InterruptedException ie) {\n                ie.printStackTrace ();\n            } finally {\n                System.out.println (i);\n                turn = ! turn;\n                o.notifyAll ();\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1835,"func":"def run(): \n  for i in range(0, 11, 2): \n    with o:  \n      while turn: \n        o.wait() \n      print(i)\n      turn = not turn\n      o.notify_all()","lang":"py"}
{"idx":1836,"func":" \npublic synchronized void run () {\n    int i = 2;\n    while (i < 50) {\n        while (s.getState () != 1) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 1) System.out.println (\"t2 \" + i);\n            s.setState (2);\n            i = i + 3;\n            s.notifyAll ();\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1837,"func":"def run (self):\n    i = 2\n    while i < 50:\n        while self.s.getState() != 1:\n            with self.s:\n                self.s.wait()\n        with self.s:\n            if self.s.getState() == 1:\n                print(\"t2:\" + i)\n                self.s.setState(2)\n                i += 3\n                self.s.notify_all()","lang":"py"}
{"idx":1838,"func":" \npublic static void main (String [] argv) {\n    int counter = 0;\n    for (int year = 1901, last_year = 2000;\n    year <= last_year; year ++) {\n        for (int month = 1, last_month = 12;\n        month <= last_month; month ++) {\n            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();\n            if (d.getDay () == 0) {\n                counter ++;\n                System.out.println (String.valueOf (counter) + \" \" + d);\n            }\n        }\n    }\n    System.out.println (\"Total sunday in XX century: \" + counter);\n}","lang":"java"}
{"idx":1839,"func":"","lang":"py"}
{"idx":1840,"func":" \npublic void actionPerformed (ActionEvent e) {\n    System.out.println ();\n    System.out.println (\"Create Dialog\");\n    JDialog dialog = new JDialog ();\n    dialog.getContentPane ().setLayout (null);\n    for (int i = 0;\n    i < 200; i ++) {\n        dialog.add (new JTextField (\"some text\"));\n    }\n    dialog.setTitle (\"Dialog \" + count ++);\n    dialog.setLocation (count * 25, count * 25);\n    dialog.setVisible (true);\n    System.out.println (\"\\tCreated \" + dialog.getTitle ());\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1841,"func":"def actionPerformed(e):\n    print()\n    print('Create Dialog')\n    dialog = tk.Tk()\n\n    for i in range(200):\n        tk.Text(dialog).pack()\n\n    dialog.title('Dialog ' + str(count))\n    dialog.geometry(str(count * 25) + 'x' + str(count * 25))\n    dialog.mainloop()\n    print('\\t Created ' + dialog.title())","lang":"py"}
{"idx":1842,"func":" \npublic static void main (String [] args) {\n    String input = \"(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)\";\n    String [] scoreSets = input.split (\"\\\\),\");\n    List < Score > scoreList = new ArrayList < Score > ();\n    for (String score : scoreSets) {\n        score = score.trim ().substring (1);\n        int closeBrace = score.indexOf (')');\n        if (closeBrace == score.length () - 1) {\n            score = score.substring (0, score.length () - 1);\n        }\n        String [] tokens = score.split (\",\");\n        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));\n    }\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1843,"func":"def main(args): \n    input = \"(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)\"\n    score_sets = input.split(\"),\")\n    score_list = []\n    for score_set in score_sets: \n        trimmed_score = score_set.strip()[1:]\n        close_brace_index = trimmed_score.find(')')\n        score_text = trimmed_score[:close_brace_index] if close_brace_index == len(trimmed_score) - 1: \n            score_tokens = score_text.split (\",\")\n            score_list.append(Score(score_tokens[0], score_tokens[1], float(score_tokens[2])))","lang":"py"}
{"idx":1844,"func":" \npublic String nthShortWord (String [] words, int n) {\n    int nthShortWord = 0;\n    String shortWord = \"notFound\";\n    for (int i = 0;\n    i < words.length; i ++) {\n        if (words [i].length () <= 3) nthShortWord ++;\n        if (nthShortWord == n) {\n            shortWord = nthShortWord [i];\n            break;\n        }\n    }\n    return shortWord;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1845,"func":"def nthShortWord(words, n):\n    nthShortWord = 0\n    shortWord = \"notFound\"\n    for i in range(len(words)):\n        if len(words[i]) <= 3:\n            nthShortWord += 1;\n            if (nthShortWord == n): \n                shortWord = words[i]\n                break\n    return shortWord","lang":"py"}
{"idx":1846,"func":" \npublic int solution (final int X, final int [] A) {\n    Set < Integer > emptyPosition = new HashSet < Integer > ();\n    for (int i = 1;\n    i <= X; i ++) {\n        emptyPosition.add (i);\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        emptyPosition.remove (A [i]);\n        if (emptyPosition.size () == 0) {\n            return i;\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1847,"func":"def solution(x, a):\n    empty_position = set()\n    for i in range(1, x+1):\n        empty_position.add(i)\n    for i in range(len(a)):\n        empty_position.discard(a[i])\n        if not empty_position:\n            return i\n    return -1","lang":"py"}
{"idx":1848,"func":" \n        void go () {\n            acquireUninterruptibly ();\n            System.err.println (max - availablePermits ());\n            go ();\n        }}\n    .go ();\n}\n\n}\n\n\n\n\n","lang":"java"}
{"idx":1849,"func":"def go():\n    acquireUninterruptibly()\n    print(max - availablePermits())\n    go()\n\ngo()","lang":"py"}
{"idx":1850,"func":" \npublic void processRow (ResultSet rs) throws SQLException {\n    Long id = rs.getLong (\"CUSTOMER_ID\");\n    Customer customer = map.get (id);\n    if (customer != null) {\n        List ordersList = customer.getOrders ();\n        if (ordersList == null) {\n            ordersList = new ArrayList < Order > ();\n            customer.setOrders (ordersList);\n        }\n        Order order = new Order ();\n        order.setId (rs.getLong (\"ORDER_ID\"));\n        ordersList.add (order);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1851,"func":"def processRow(rs):\n  id = rs.getLong(\"CUSTOMER_ID\")\n  customer = map.get(id)\n  if customer != None:\n    orders_list = customer.getOrders()\n    \n    if orders_list == None:\n      orders_list = []\n      customer.setOrders(orders_list)\n    \n    order = Order()\n    order.setId(rs.getLong(\"ORDER_ID\"))\n    orders_list.append(order)","lang":"py"}
{"idx":1852,"func":" \npublic static void main (String [] args) {\n    char cont = 'E';\n    do {\n        temp1 = getTemp ();\n        scale1 = scaleOne ();\n        scale2 = toScale ();\n        System.out.print (\"Your final temp is: \" + convert () + ' ' + scale2);\n    } while (cont == 'N');\n}","lang":"java"}
{"idx":1853,"func":" \n","lang":"py"}
{"idx":1854,"func":" \npublic void run () {\n    synchronized (list) {\n        for (int i = 0;\n        i < 10; i ++) {\n            while (list.isEmpty ()) {\n                System.out.println (\"Consumer is waiting\");\n                try {\n                    list.wait ();\n                } catch (InterruptedException ex) {\n                    ex.printStackTrace ();\n                }\n            }\n            int k = list.remove (0);\n            System.out.println (\"consume=\" + k);\n            list.notifyAll ();\n            try {\n                Thread.sleep (500);\n            } catch (InterruptedException ex) {\n                ex.printStackTrace ();\n            }\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1855,"func":"def run (list):\n    with list:\n        for i in range(10):\n            while len(list) == 0:\n                print(\"Consumer is waiting\")\n                list.wait()\n            k = list.pop(0)\n            print(\"consume=\" + str(k))\n            list.notifyAll()\n            sleep(0.5)","lang":"py"}
{"idx":1856,"func":" \nlong pow (long a, int b) {\n    if (b == 0) return 1;\n    if (b == 1) return a;\n    if (isEven (b)) return pow (a * a, b \/ 2);\n    else return a * pow (a * a, b \/ 2);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1857,"func":"def pow(a, b): \n    if b == 0: \n        return 1\n    \n    if b == 1: \n        return a \n    \n    if (b % 2 == 0): \n        return pow(a*a, b\/2)\n    else: \n        return a * pow(a*a, b\/2)","lang":"py"}
{"idx":1858,"func":" \nstatic boolean unsignedMultiplyOverflows (final long a, final long b) {\n    if (a == 0 || b == 0) {\n        return false;\n    }\n    final long aHalf = a>>> 1;\n    final long bHalf = b>>> 1;\n    final byte aLastBit = (byte) (a & 1);\n    final byte bLastBit = (byte) (b & 1);\n    if (aLastBit == 0) {\n        return Long.MAX_VALUE \/ b < aHalf;\n    } else if (bLastBit == 0) {\n        return Long.MAX_VALUE \/ a < bHalf;\n    } else {\n        return (Long.MAX_VALUE - bHalf) \/ b < aHalf;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1859,"func":"def unsignedMultiplyOverflows(a: int, b: int): \n    if a == 0 or b == 0: \n        return False\n    a_half = a >> 1\n    b_half = b >> 1\n    a_last_bit = a & 1\n    b_last_bit = b & 1\n    if a_last_bit == 0: \n        return sys.maxsize \/ b < a_half\n    elif b_last_bit == 0: \n        return sys.maxsize \/ a < b_half\n    else: \n        return (sys.maxsize - b_half) \/ b < a_half","lang":"py"}
{"idx":1860,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1861,"func":"def solution(X, A): \n    if X > len(A): \n        return -1\n    isFilled = [0] * X \n    jumped = 0 \n    for i in range(len(A)): \n        x = A[i] \n        if x <= X: \n            if isFilled[x-1] == 0: \n                isFilled[x-1] = 1 \n                jumped += 1 \n                if jumped == X: \n                    return i \n    return -1","lang":"py"}
{"idx":1862,"func":" \npublic int [] solution (String S, int [] P, int [] Q) {\n    int [] result = new int [P.length];\n    int [] factor1 = new int [S.length ()];\n    int [] factor2 = new int [S.length ()];\n    int [] factor3 = new int [S.length ()];\n    int [] factor4 = new int [S.length ()];\n    int factor1Sum = 0;\n    int factor2Sum = 0;\n    int factor3Sum = 0;\n    int factor4Sum = 0;\n    for (int i = 0;\n    i < S.length (); i ++) {\n        switch (S.charAt (i)) {\n            case 'A' :\n                factor1Sum ++;\n                break;\n            case 'C' :\n                factor2Sum ++;\n                break;\n            case 'G' :\n                factor3Sum ++;\n                break;\n            case 'T' :\n                factor4Sum ++;\n                break;\n            default :\n                break;\n        }\n        factor1 [i] = factor1Sum;\n        factor2 [i] = factor2Sum;\n        factor3 [i] = factor3Sum;\n        factor4 [i] = factor4Sum;\n    }\n    for (int i = 0;\n    i < P.length; i ++) {\n        int start = P [i];\n        int end = Q [i];\n        if (start == 0) {\n            if (factor1 [end] > 0) {\n                result [i] = 1;\n            } else if (factor2 [end] > 0) {\n                result [i] = 2;\n            } else if (factor3 [end] > 0) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        } else {\n            if (factor1 [end] > factor1 [start - 1]) {\n                result [i] = 1;\n            } else if (factor2 [end] > factor2 [start - 1]) {\n                result [i] = 2;\n            } else if (factor3 [end] > factor3 [start - 1]) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        }\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1863,"func":"def solution(S, P, Q):\n    result = [0] * len(P)\n    factor1 = [0] * len(S)\n    factor2 = [0] * len(S)\n    factor3 = [0] * len(S)\n    factor4 = [0] * len(S)\n    factor1_sum = 0\n    factor2_sum = 0\n    factor3_sum = 0\n    factor4_sum = 0\n    \n    for i in range(len(S)):\n        if S[i] == 'A':\n            factor1_sum += 1\n        elif S[i] == 'C':\n            factor2_sum += 1\n        elif S[i] == 'G':\n            factor3_sum += 1\n        elif S[i] == 'T':\n            factor4_sum += 1\n        factor1[i] = factor1_sum\n        factor2[i] = factor2_sum\n        factor3[i] = factor3_sum\n        factor4[i] = factor4_sum\n        \n    for i in range(len(P)):\n        start = P[i]\n        end = Q[i]\n        if start == 0:\n            if factor1[end] > 0:\n                result[i] = 1\n            elif factor2[end] > 0:\n                result[i] = 2\n            elif factor3[end] > 0:\n                result[i] = 3\n            else:\n                result[i] = 4\n        else:\n            if factor1[end] > factor1[start - 1]:\n                result[i] = 1\n            elif factor2[end] > factor2[start - 1]:\n                result[i] = 2\n            elif factor3[end] > factor3[start - 1]:\n                result[i] = 3\n            else:\n                result[i] = 4\n    \n    return result","lang":"py"}
{"idx":1864,"func":" \npublic void mouseMoved (MouseEvent e) {\n    xpos = getX ();\n    if (xpos < 0) {\n        polyrot --;\n    } else if (xpos > 0) {\n        polyrot ++;\n    }\n    repaint ();\n    break;\n}\n\n\n\n\n\n\n\n","lang":"java"}
{"idx":1865,"func":"def mouseMoved(e):\n  xpos = getX()\n  if xpos < 0:\n    polyrot -= 1\n  elif xpos > 0:\n    polyrot += 1\n  repaint()\n  break","lang":"py"}
{"idx":1866,"func":" \npublic static String replaceHostInUrl (String originalURL, String newAuthority) throws URISyntaxException, MalformedURLException {\n    URI uri = new URI (originalURL);\n    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());\n    int port = uri.getPort ();\n    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {\n        uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());\n    }\n    return uri.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1867,"func":"def replace_host_in_url(original_url, new_authority):\n    uri = urlparse(original_url)\n    new_uri = urlparse(\n        '{}:\/\/{}{}{}'.format(\n            uri.scheme.lower(), new_authority, uri.path, \n            '?' + uri.query if uri.query else ''\n        )\n    )\n\n    port = new_uri.port\n    if port > 0 and port == new_uri.default_port:\n        new_uri = urlparse('{}:\/\/{}{}{}'.format(\n            new_uri.scheme, new_uri.userinfo, new_uri.hostname,\n            '?' + new_uri.query if new_uri.query else ''\n        ), default_port=None)\n    \n    return new_uri.geturl()","lang":"py"}
{"idx":1868,"func":" \npublic void paintComponent (Graphics g) {\n    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";\n    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);\n    int height = metrics.getHeight ();\n    gg.setFont (font);\n    gg.drawString (string, (getWidth () - width) \/ 2, 11);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1869,"func":"def paintComponent (self, g):\n    super(self).paintComponent(g)\n    gg = Graphics2D(g)\n    gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)\n    font  = Font(\"Arial\", Font.PLAIN, 15)\n    string = \"Distance (m)\"\n    metrics = g.getFontMetrics(font)\n    width = metrics.stringWidth(string)\n    height = metrics.getHeight()\n    gg.setFont(font)\n    gg.drawString(string, (self.getWidth() - width) \/ 2, 11)","lang":"py"}
{"idx":1870,"func":" \nprivate void transform () {\n    String call = \"transform \";\n    System.out.println (call + \"Workbook\");\n    XSSFSheet sheetNew;\n    HSSFSheet sheetOld;\n    this.workbookNew.setForceFormulaRecalculation (this.workbookOld.getForceFormulaRecalculation ());\n    this.workbookNew.setMissingCellPolicy (this.workbookOld.getMissingCellPolicy ());\n    for (int i = 0;\n    i < this.workbookOld.getNumberOfSheets (); i ++) {\n        sheetOld = this.workbookOld.getSheetAt (i);\n        sheetNew = this.workbookNew.getSheet (sheetOld.getSheetName ());\n        System.out.println (call + \"Sheet erstellt: \" + sheetOld.getSheetName ());\n        sheetNew = this.workbookNew.createSheet (sheetOld.getSheetName ());\n        this.transform (sheetOld, sheetNew);\n    }\n    System.out.println (call + \"Anzahl verwendeter Styles: \" + this.styleMap.size ());\n    System.out.println (call + \"abgeschlossen\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1871,"func":"def transform():\n    call = \"transform \"\n    print(call + \"Workbook\")\n    sheetNew = None\n    sheetOld = None\n    this.workbookNew.setForceFormulaRecalculation(this.workbookOld.getForceFormulaRecalculation())\n    this.workbookNew.setMissingCellPolicy(this.workbookOld.getMissingCellPolicy())\n    for i in range(this.workbookOld.getNumberOfSheets()):\n        sheetOld = this.workbookOld.getSheetAt(i)\n        sheetNew = this.workbookNew.getSheet(sheetOld.getSheetName())\n        print(call + \"Sheet erstellt: \" + sheetOld.getSheetName())\n        sheetNew = this.workbookNew.createSheet(sheetOld.getSheetName())\n        this.transform(sheetOld, sheetNew)\n    print(call + \"Anzahl verwendeter Styles: \" + str(len(this.styleMap)))\n    print(call + \"abgeschlossen\")","lang":"py"}
{"idx":1872,"func":" \npublic void move (Container container) {\n    if (x >= canvasWidth || x <= 0) {\n        deltaX = - 1 * deltaX;\n    }\n    if (y >= canvasHeight || y <= 0) {\n        deltaY = - 1 * deltaY;\n    }\n    x += deltaX;\n    y += deltaY;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1873,"func":"def move(container):\n    if x >= canvas_width or x <= 0:\n        delta_x = -1 * delta_x\n    if y >= canvas_height or y <= 0:\n        delta_y = -1 * delta_y\n    x += delta_x\n    y += delta_y","lang":"py"}
{"idx":1874,"func":" \npublic void actionPerformed (ActionEvent arg0) {\n    if (! dirty) {\n        JFileChooser ch = getFileChooser ();\n        int result = ch.showOpenDialog (gui);\n        if (result == JFileChooser.APPROVE_OPTION) {\n            try {\n                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());\n                setImage (bi);\n            } catch (IOException e) {\n                showError (e);\n                e.printStackTrace ();\n            }\n        }\n    } else {\n        JOptionPane.showMessageDialog (gui, \"TODO - prompt save image..\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1875,"func":"def actionPerformed(arg0):\n    if not dirty:\n        ch = getFileChooser()\n        result = ch.showOpenDialog(gui)\n        if result == JFileChooser.APPROVE_OPTION:\n            try:\n                bi = ImageIO.read(ch.getSelectedFile())\n                setImage(bi)\n            except IOException as e:\n                showError(e)\n                traceback.print_exc()\n    else:\n        JOptionPane.showMessageDialog(gui, \"TODO - prompt save image..\")","lang":"py"}
{"idx":1876,"func":" \npublic void sort (int [] input) {\n    for (int i = 0;\n    i < input.length - 1; i ++) {\n        int k = i + 1;\n        int nxtVal = input [k];\n        while (input [k - 1] > nxtVal) {\n            input [k] = input [k - 1];\n            k --;\n            if (k == 0) break;\n        }\n        input [k] = nxtVal;\n    }\n    System.out.println (\"Medium sorting is done and the result is :\");\n    for (int i : input) {\n        System.out.print (i + \",\");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1877,"func":"def sort(input): \n  for i in range(len(input)-1): \n    k = i+1\n    nxtVal = input[k]\n    while input[k-1] > nxtVal and k > 0:\n      input[k] = input[k-1]\n      k-=1\n    input[k] = nxtVal\n  print(\"Medium sorting is done and the result is:\")\n  print(list(input))","lang":"py"}
{"idx":1878,"func":" \npublic static void main (String [] args) {\n    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};\n    int t = 4;\n    int count = 0;\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= t) {\n            count ++;\n        }\n    }\n    int [] B = new int [count];\n    int [] C = new int [A.length - count];\n    for (int i = 0, j = 0, k = 0;\n    i < A.length; i ++) {\n        if (A [i] <= t) {\n            B [j] = A [i];\n            System.out.println (\"B = \" + B [j]);\n            j ++;\n        } else {\n            C [k] = A [i];\n            System.out.println (\"C = \" + C [k]);\n            k ++;\n        }\n    }\n}","lang":"java"}
{"idx":1879,"func":"A = [9, 5, 4, 3, 2, 1, 34, 53]\n","lang":"py"}
{"idx":1880,"func":" \n        public void run () {\n            System.out.println (++ n);\n        }}\n    ;\n\n\n\n\nn = 0 \n","lang":"java"}
{"idx":1881,"func":"def run(): \n    global n \n    print (n+1)","lang":"py"}
{"idx":1882,"func":" \npublic static boolean isPalindrome (String str) {\n    str = str.toUpperCase ();\n    char [] strChars = str.toCharArray ();\n    List < Character > word = new ArrayList < > ();\n    for (char c : strChars) {\n        word.add (c);\n    }\n    while (true) {\n        if ((word.size () == 1) || (word.size () == 0)) {\n            return true;\n        }\n        if (word.get (0) == word.get (word.size () - 1)) {\n            word.remove (0);\n            word.remove (word.size () - 1);\n        } else {\n            return false;\n        }\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1883,"func":"def isPalindrome(str):\n    str = str.upper()\n    word = list(str)\n    while True:\n        if len(word) == 1 or len(word) == 0:\n            return True\n        if word[0] == word[len(word) - 1]:\n            word.pop(0)\n            word.pop(len(word) - 1)\n        else: \n            return False","lang":"py"}
{"idx":1884,"func":" \nstatic String transpose (String s, int rows, int columns) {\n    int n = s.length ();\n    if (rows * columns != n) throw new IllegalArgumentException ();\n    StringBuilder sb = new StringBuilder ();\n    for (int i = 0;\n    i < n - 1; i ++) sb.append (s.charAt (i * columns % (n - 1)));\n    sb.append (s.charAt (n - 1));\n    return sb.toString ();\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1885,"func":"def transpose(s,rows,columns):\n    if len(s) != rows * columns:\n        raise ValueError(\"Illegal Argument\")\n    \n    sb = \"\"\n    for i in range(len(s)-1):\n        sb += s[i * columns % (len(s)-1)]\n    sb += s[len(s)-1]\n    \n    return sb","lang":"py"}
{"idx":1886,"func":" \npublic boolean equals (Object other) {\n    boolean result;\n    if ((other == null) || (getClass () != other.getClass ())) {\n        result = false;\n    } else {\n        People otherPeople = (People) other;\n        result = name.equals (otherPeople.name) && age == otherPeople.age;\n    }\n    return result;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1887,"func":"def equals(self, other):\n    result = False\n    if other != None and type(self) == type(other):\n        otherPeople = other\n        result = self.name == otherPeople.name and self.age == otherPeople.age\n    return result","lang":"py"}
{"idx":1888,"func":" \nstatic int [] sort (int arr []) {\n    for (int i = 0;\n    i < arr.length; i ++) {\n        for (int j = i;\n        j < arr.length; j ++) {\n            if (arr [j] < arr [i]) {\n                int temp = arr [i];\n                arr [i] = arr [j];\n                arr [j] = temp;\n            }\n        }\n    }\n    return arr;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1889,"func":"def sort(arr):\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if arr[j] < arr[i]:\n                temp = arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n    return arr","lang":"py"}
{"idx":1890,"func":" \nprivate String join (String [] input, String delimiter) {\n    StringBuilder sb = new StringBuilder ();\n    for (String value : input) {\n        sb.append (value);\n        sb.append (delimiter);\n    }\n    int length = sb.length ();\n    if (length > 0) {\n        sb.setLength (length - delimiter.length ());\n    }\n    return sb.toString ();\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1891,"func":"def join(input, delimiter):\n    sb = \"\"\n    for value in input:\n        sb = sb + value + delimiter\n    length = len(sb)\n    if length > 0:\n        sb = sb[:-delimiter.length]\n    return sb","lang":"py"}
{"idx":1892,"func":" \npublic static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {\n    BufferedImage dbi = null;\n    if (sbi != null) {\n        dbi = new BufferedImage (dWidth, dHeight, imageType);\n        Graphics2D g = dbi.createGraphics ();\n        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);\n        g.drawRenderedImage (sbi, at);\n    }\n    return dbi;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1893,"func":"def scale(sbi, imageType, dWidth, dHeight, fWidth, fHeight):\n    dbi = None\n    if sbi != None:\n        dbi = BufferedImage(dWidth, dHeight, imageType)\n        g = dbi.createGraphics()\n        at = AffineTransform.getScaleInstance(fWidth, fHeight)\n        g.drawRenderedImage(sbi, at)\n    return dbi","lang":"py"}
{"idx":1894,"func":" \npublic int add (Distance newDistance) {\n    int newDistanceFeet = newDistance.getFeet ();\n    int newDistanceInches = newDistance.getInches ();\n    int sumInches = newDistanceInches + this.getInches ();\n    int sumFeet = newDistanceFeet + this.getFeet ();\n    sumInches += (sumInches % 12);\n    sumFeet += (sumInches \/ 12);\n    this.setFeet (sumFeet);\n    this.setInches (sumInches);\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1895,"func":"def add(self, newDistance):\n    newDistanceFeet = newDistance.getFeet()\n    newDistanceInches = newDistance.getInches()\n    sumInches = newDistanceInches + self.getInches()\n    sumFeet = newDistanceFeet + self.getFeet()\n    sumInches += (sumInches % 12)\n    sumFeet += (sumInches \/ 12)\n    self.setFeet(sumFeet)\n    self.setInches(sumInches)","lang":"py"}
{"idx":1896,"func":" \nprivate int [] randNums (int total, int n) {\n    final int [] results = new int [n];\n    if (total == 0) {\n        Arrays.fill (results, 0);\n        return results;\n    }\n    final BigInteger [] rs = new BigInteger [n];\n    final BigInteger totalPlus1 = BigInteger.valueOf (total + 1L);\n    while (true) {\n        for (int i = 0;\n        i < n; ++ i) {\n            rs [i] = new BigInteger (256, rand);\n        }\n        BigInteger sum = BigInteger.ZERO;\n        for (BigInteger r : rs) {\n            sum = sum.add (r);\n        }\n        if (sum.compareTo (BigInteger.ZERO) == 0) {\n            continue;\n        }\n        for (int i = 0;\n        i < n; ++ i) {\n            results [i] = sum.mod (rs [i]).mod (totalPlus1).intValue ();\n        }\n        return results;\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1897,"func":"def randNums(total,n):\n        results = [0]*n\n        if total == 0:\n            return results\n        rs = [0]*n\n        totalPlus1 = total+1\n        while(True):\n            for i in range(n):\n                # Generate a random integer in between 0 and 256.\n                rs[i] = random.randint(0,256)\n            sum = 0\n            for i in range(n):\n                sum += rs[i]\n            if sum == 0:\n                continue\n            for i in range(n):\n                results[i] = sum%rs[i]%totalPlus1\n            break\n        return results","lang":"py"}
{"idx":1898,"func":" \npublic static void main (String...args) throws Exception {\n    List < char [] > myArray = new ArrayList < char [] > ();\n    myArray.add (\"string1\".toCharArray ());\n    myArray.add (\"string2\".toCharArray ());\n    myArray.add (\"string3\".toCharArray ());\n    char [] [] charArray2D = myArray.toArray (new char [0] [0]);\n    System.out.println (charArray2D.length);\n    StringBuilder s = new StringBuilder ();\n    for (char [] c : myArray) {\n        s.append (String.copyValueOf (c));\n    }\n    char [] charArray1D = s.toString ().toCharArray ();\n    System.out.println (charArray1D.length);\n}","lang":"java"}
{"idx":1899,"func":"my_array = []\nmy_array.append(list(\"string1\"))\nmy_array.append(list(\"string2\"))\n","lang":"py"}
{"idx":1900,"func":" \npublic void run () {\n    String threadName = Thread.currentThread ().getName ();\n    try {\n        first.lock ();\n        latch.countDown ();\n        System.out.println (threadName + \": locked first lock\");\n        latch.await ();\n        System.out.println (threadName + \": attempting to lock second lock\");\n        second.lock ();\n        System.out.println (threadName + \": never reached\");\n    } catch (InterruptedException e) {\n        throw new RuntimeException (e);\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1901,"func":"def run():\n    threadName = threading.currentThread().getName()\n    try:\n        first.acquire()\n        latch.countDown()\n        print(threadName + ': locked first lock')\n        latch.wait()\n        print(threadName + ': attempting to lock second lock')\n        second.acquire() \n        print(threadName + ': never reached')\n\n    except InterruptedException as e:\n        raise RuntimeError(e)","lang":"py"}
{"idx":1902,"func":" \npublic boolean importData (JComponent c, Transferable t) {\n    if (canImport (c, t.getTransferDataFlavors ())) {\n        try {\n            String str = (String) t.getTransferData (DataFlavor.stringFlavor);\n            importString (c, str);\n            return true;\n        } catch (UnsupportedFlavorException ufe) {\n        } catch (IOException ioe) {\n        }\n    }\n    return false;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1903,"func":"def importData(c, t):\n  if (canImport(c, t.getTransferDataFlavors())):\n    try:\n      str = str(t.getTransferData(DataFlavor.stringFlavor))\n      importString(c, str)\n      return True\n    except UnsupportedFlavorException as ufe:\n      pass\n    except IOException as ioe:\n      pass\n  return False","lang":"py"}
{"idx":1904,"func":" \npublic static void main (String [] args) {\n    Scanner in = new Scanner (System.in);\n    int n = in.nextInt ();\n    int leftStartDiagnol = 0;\n    int rightStartDiagnol = n;\n    int leftTotal = 0;\n    int rightTotal = 0;\n    int a [] [] = new int [n] [n];\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        boolean leftNotFound = true;\n        boolean rightNotFound = true;\n        rightStartDiagnol = -- rightStartDiagnol;\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            if (leftStartDiagnol == a_j && leftNotFound) {\n                leftTotal = leftTotal + a [a_i] [a_j];\n                leftNotFound = false;\n            }\n            if (rightStartDiagnol == a_j && rightNotFound) {\n                rightTotal = rightTotal + a [a_i] [a_j];\n                rightNotFound = false;\n            }\n        }\n        leftStartDiagnol = ++ leftStartDiagnol;\n    }\n    int data = leftTotal - rightTotal;\n    System.out.println (Math.abs (data));\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1905,"func":"def main():\n    n = input() \n    left_start_diagonal = 0\n    right_start_diagonal = n\n    left_total = 0\n    right_total = 0\n    arr = [[0 for x in range (n)] for y in range (n)]    \n    \n    for i in range (n):\n        for j in range (n):\n            arr[i][j] = input()\n\t\n    for i in range (n):\n        left_not_found = True\n        right_not_found = True\n        right_start_diagonal -= 1\n                                                                \n        for j in range (n):\n            if left_start_diagonal == j and left_not_found:\n                left_total += arr[i][j]\n                left_not_found = False\n            if right_start_diagonal == j and right_not_found:\n                right_total += arr[i][j]\n                right_not_found = False\n         \n        left_start_diagonal += 1\n\n    data = abs (left_total - right_total)\n    print (data)","lang":"py"}
{"idx":1906,"func":" \npublic void start (final Stage primaryStage) {\n    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);\n    alert.setTitle (\"Title\");\n    alert.setHeaderText (\"Some Text\");\n    alert.setContentText (\"Choose your option.\");\n    ButtonType buttonTypeOne = new ButtonType (\"Yes\");\n    alert.initModality (Modality.NONE);\n    ButtonType buttonTypeCancel = new ButtonType (\"No\", ButtonBar.ButtonData.CANCEL_CLOSE);\n    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);\n    Button b = new Button (\"close alert\");\n    b.setOnAction ((ActionEvent event) -> {\n        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {\n            System.out.println (\"bt = \" + bt);\n            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {\n                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);\n                cancelButton.fire ();\n                break;\n            }\n        }\n    });\n    final Scene scene = new Scene (new Group (b), 400, 300);\n    primaryStage.setScene (scene);\n    primaryStage.show ();\n    Optional < ButtonType > result = alert.showAndWait ();\n    if (result.get () == buttonTypeOne) {\n        System.out.println (\"one \");\n    } else if (result.get () == buttonTypeCancel) {\n        System.out.println (\"cancel \");\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1907,"func":"def start(primaryStage):\n    alert = Alert (Alert.AlertType.CONFIRMATION)\n    alert.setTitle(\"Title\")\n    alert.setHeaderText(\"Some Text\")\n    alert.setContentText(\"Choose your option.\")\n    buttonTypeOne = ButtonType(\"Yes\")\n    alert.initModality(Modality.NONE)\n    buttonTypeCancel = ButtonType(\"No\", ButtonBar.ButtonData.CANCEL_CLOSE)\n    alert.getButtonTypes().setAll(buttonTypeOne, buttonTypeCancel)\n    b = Button(\"close alert\")\n    b.setOnAction(lambda event: \n        for bt in alert.getDialogPane().getButtonTypes():\n            print(\"bt = \" + bt)\n            if bt.getButtonData() == ButtonBar.ButtonData.CANCEL_CLOSE:\n                cancelButton = alert.getDialogPane().lookupButton(bt)\n                cancelButton.fire()\n                break)\n    scene = Scene(Group(b), 400, 300)\n    primaryStage.setScene(scene)\n    primaryStage.show()\n    result = alert.showAndWait()\n    if result.get() == buttonTypeOne:\n        print(\"one\")\n    elif result.get() == buttonTypeCancel:\n        print(\"cancel\")","lang":"py"}
{"idx":1908,"func":" \npublic static void main (final String [] args) throws IOException {\n    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.println (\"Enter some text, or '\" + EXIT_COMMAND + \"' to quit\");\n    while (true) {\n        System.out.print (\"><![CDATA[ \");\n        String input = br.readLine ();\n        System.out.println (input);\n        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {\n            System.out.println (\"Exiting.\");\n            return;\n        }\n        System.out.println (\"...response goes here...\");\n    }\n}\n\n\n\n\n\nimport sys\n\nEXIT_COMMAND = \"exit\"\n\n","lang":"java"}
{"idx":1909,"func":"def main(args):\n    print(\"Enter some text, or '\" + exit_command + \"' to quit\")\n    while True:\n        input = input(\"><![CDATA[ \")\n        print(input)\n        if len(input) == len(exit_command) and input.lower() == exit_command:\n            print(\"Exiting.\")\n            sys.exit()\n        print(\"...response goes here...\")\n\nif __name__ == '__main__':\n    main(sys.argv)","lang":"py"}
{"idx":1910,"func":" \npublic static boolean twoDuplicates (int [] values) {\n    for (int i = 0;\n    i < values.length; i ++) {\n        int counter = 0;\n        for (int z = i + 1;\n        z <= values.length - 1; z ++) {\n            if (values [i] == values [z]) {\n                counter ++;\n                if (counter == 2) return true;\n            }\n        }\n    }\n    return false;\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1911,"func":"def twoDuplicates (values):\n  for i in range(len(values)):\n    counter = 0\n    for z in range(i + 1, len(values)):\n      if values[i] == values[z]:\n        counter += 1\n        if counter == 2:\n          return True\n  return False","lang":"py"}
{"idx":1912,"func":" \npublic static void main (String [] args) {\n    int first, second;\n    Scanner myScanner = new Scanner (System.in);\n    System.out.println (\"Enter first integer: \");\n    int numOne;\n    numOne = myScanner.nextInt ();\n    System.out.println (\"You have keyed in \" + numOne);\n    System.out.println (\"Enter second integer: \");\n    int numTwo;\n    numTwo = myScanner.nextInt ();\n    System.out.println (\"You have keyed in \" + numTwo);\n    Random generator = new Random ();\n    int num = (int) (Math.random () * numTwo);\n    System.out.println (\"Random number: \" + ((num > numOne) ? num : numOne + num));\n}\n\n\n\n\n\n\n","lang":"java"}
{"idx":1913,"func":"def main():\n\tfirst = int(input('Enter the first integer: '))\n\tsecond = int(input('Enter the second integer: '))\n\n\tprint('You have keyed in {0} and {1}'.format(first, second))\n\n\timport random\n\tnum = random.randint(first, second)\n\n\tprint('Random number: ', num if num > first else first + num)","lang":"py"}
{"idx":1914,"func":" \npublic int solution (int X, int [] A) {\n    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }\n    int [] isFilled = new int [X];\n    int jumped = 0;\n    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1915,"func":"def solution(X,A):\n    len_x=len(A)\n    if X>len_x:\n        return -1\n    isFilled=[0]*X\n    jumped=0\n    for i in range(len_x):\n        x=A[i]\n        if x<=X:\n            if isFilled[x-1]==0:\n                isFilled[x-1]=1\n                jumped+=1\n                if jumped==X:\n                    return i\n    return -1","lang":"py"}
{"idx":1916,"func":" \npublic static boolean isAnagram (String first, String second) {\n    String positive = first.toLowerCase ();\n    String negative = second.toLowerCase ();\n    if (positive.length () != negative.length ()) {\n        return false;\n    }\n    int [] counts = new int [26];\n    int diff = 0;\n    for (int i = 0;\n    i < positive.length (); i ++) {\n        int pos = (int) positive.charAt (i) - 97;\n        if (counts [pos] >= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [pos] ++;\n        int neg = (int) negative.charAt (i) - 97;\n        if (counts [neg] <= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [neg] --;\n    }\n    return diff == 0;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1917,"func":"def isAnagram(first, second): \n    positive = first.lower() \n    negative = second.lower() \n    if(len(positive) != len(negative)): \n        return False\n    counts = [0] * 26\n    diff = 0\n    for i in range(len(positive)): \n        pos= ord(positive[i]) - 97\n        if(counts[pos] >= 0): \n            diff += 1\n        else: \n            diff -= 1\n        counts[pos] += 1\n        neg = ord(negative[i]) - 97\n        if(counts[neg] <= 0): \n            diff += 1\n        else: \n            diff -=1\n        counts[neg] -= 1\n\n    return diff == 0","lang":"py"}
{"idx":1918,"func":" \npublic void registerModule (HttpServletRequest req, ModuleType moduleType) {\n    LOGGER.debug (\"Register New Module - \" + moduleType.name ());\n    try {\n        ModuleEntityDao moduleEntityDao;\n        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {\n            LOGGER.error (\"The rest request is empty.No info to register\");\n        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {\n            LOGGER.error (\"The BA object is null. There is nothing to register\");\n        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {\n            processRegistryDal.addNewModule (moduleEntityDao);\n        } else {\n            processRegistryDal.updateModule (moduleEntityDao);\n        }\n    } catch (IOException e) {\n        LOGGER.error (\"IO Error\\n\" + e.getMessage ());\n    } catch (ServletException e) {\n        LOGGER.error (\"Servlet Error\\n\" + e.getMessage ());\n    }\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1919,"func":"def registerModule(req, moduleType):\n  log_string = \"Register New Module - {}\".format(moduleType.name())\n  LOGGER.debug(log_string)\n  try:\n    moduleEntityDao = None\n    if req.getParts() is None or req.getParameterMap() is None:\n      LOGGER.error(\"The rest request is empty. No info to register\")\n    else:\n      moduleEntityDao = ModuleEntityGenerator().get(req, moduleType)\n    if moduleEntityDao is None:\n      LOGGER.error(\"The BA object is null. There is nothing to register\")\n    elif processRegistryDal.getModule(moduleType, moduleEntityDao.getId()) is None:\n      processRegistryDal.addNewModule(moduleEntityDao)\n    else:\n      processRegistryDal.updateModule(moduleEntityDao)\n  except IOError as e:\n    LOGGER.error(\"IO Error\\n{}\".format(e.message))\n  except ServletException as e:\n    LOGGER.error(\"Servlet Error\\n {}\".format(e.message))","lang":"py"}
{"idx":1920,"func":" \nprivate XSSFFont transform (HSSFFont fontOld) {\n    XSSFFont fontNew = this.workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1921,"func":"def transform(self, fontOld):\n    fontNew = self.workbookNew.createFont()\n    fontNew.setBoldweight(fontOld.getBoldweight())\n    fontNew.setCharSet(fontOld.getCharSet())\n    fontNew.setColor(fontOld.getColor())\n    fontNew.setFontName(fontOld.getFontName())\n    fontNew.setFontHeight(fontOld.getFontHeight())\n    fontNew.setItalic(fontOld.getItalic())\n    fontNew.setStrikeout(fontOld.getStrikeout())\n    fontNew.setTypeOffset(fontOld.getTypeOffset())\n    fontNew.setUnderline(fontOld.getUnderline())\n    return fontNew","lang":"py"}
{"idx":1922,"func":" \npublic static int countLines (String str) {\n    if (str == null || str.isEmpty ()) {\n        return 0;\n    }\n    int lines = 1;\n    int pos = 0;\n    while ((pos = str.indexOf (\"\\n\", pos) + 1) != 0) {\n        lines ++;\n    }\n    return lines;\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1923,"func":"def countLines(str):\n    if not str or not str.strip():\n        return 0\n    lines = 1\n    pos = 0\n    while str.find(\"\\n\", pos) + 1 != 0:\n        lines += 1\n        pos = str.find(\"\\n\", pos) + 1\n    return lines","lang":"py"}
{"idx":1924,"func":" \npublic static void main (String [] args) {\n    int len = args.length;\n    if (len == 0) {\n        sopl (\"\\n\\tUsage: java echo <args:String[]>\");\n        System.exit (0);\n    }\n    sop (\"\\n\\t\");\n    for (int i = 0;\n    i < len; i ++) {\n        sop (args [i] + \" \");\n    }\n    sop (\"\\n\\t\");\n    while (len > 0) sop (args [args.length - len --] + \" \");\n    sopl (\"\");\n}\n\n\n\n\n\n","lang":"java"}
{"idx":1925,"func":"def main(args):\n    length = len(args)\n    if length > 0:\n        print(\"\\n\\t\", end=\"\")\n        for i in range(length):\n            print(args[i], end=\" \")\n        print(\"\\n\\t\", end=\"\")\n        while length > 0:\n            print(args[length-1],  end=\" \")\n            length -= 1\n        print(\"\")\n    else:\n        print(\"\\n\\tUsage: java echo <args:String[]>\")","lang":"py"}
{"idx":1926,"func":" \npublic static void main (String [] args) {\n    Address address = new Address ();\n    address.setSomeCrap (null);\n    Person person = new Person ();\n    person.setAddress (address);\n    long startTime = System.currentTimeMillis ();\n    for (int i = 0;\n    i < 1000000; i ++) {\n        try {\n            System.out.println (person.getAddress ().getSomeCrap ().getCrap ());\n        } catch (NullPointerException npe) {\n        }\n    }\n    long endTime = System.currentTimeMillis ();\n    System.out.println ((endTime - startTime) \/ 1000F);\n    long startTime1 = System.currentTimeMillis ();\n    for (int i = 0;\n    i < 1000000; i ++) {\n        if (person != null) {\n            Address address1 = person.getAddress ();\n            if (address1 != null) {\n                SomeCrap someCrap2 = address1.getSomeCrap ();\n                if (someCrap2 != null) {\n                    System.out.println (someCrap2.getCrap ());\n                }\n            }\n        }\n    }\n    long endTime1 = System.currentTimeMillis ();\n    System.out.println ((endTime1 - startTime1) \/ 1000F);\n}","lang":"java"}
{"idx":1927,"func":"","lang":"py"}
